{"version":3,"sources":["jquery-labelauty/jquery-labelauty.min.js"],"names":["$","getRealWidth","element","width","$target","clone","attr","appendTo","remove","debug","message","window","console","log","fn","labelauty","options","settings","extend","development","class","icon","label","separator","checked_label","unchecked_label","force_random_id","minimum_width","same_width","this","each","use_icons","labels","labels_object","input_id","$object","selected","is","type","use_labels","aria_label","addClass","length","split","css","display","removeAttr","trim","input_id_number","Math","floor","random","jQuery","messages_object","block","unchecked_message","checked_message","aria","create","click","keypress","event","preventDefault","keyCode","prop","after","next","min-width","label_object","unchecked_width","find","checked_width"],"mappings":"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","file":"jquery-labelauty/jquery-labelauty.min.js","sourcesContent":["/*!\n * LABELAUTY jQuery Plugin\n *\n * @file: jquery-labelauty.js\n * @author: Francisco Neves (@fntneves)\n * @site: www.francisconeves.com\n * @license: MIT License\n */\n\n(function( $ ){\n\n\t$.fn.labelauty = function( options )\n\t{\n\t\t/*\n\t\t * Our default settings\n\t\t * Hope you don't need to change anything, with these settings\n\t\t */\n\t\tvar settings = $.extend(\n\t\t{\n\t\t\t// Development Mode\n\t\t\t// This will activate console debug messages\n\t\t\t\"development\": false,\n\n\t\t\t// Trigger Class\n\t\t\t// This class will be used to apply styles\n\t\t\t\"class\": \"labelauty\",\n\n\t\t\t// Use icon?\n\t\t\t// If false, then only a text label represents the input\n\t\t\t\"icon\": true,\n\n\t\t\t// Use text label ?\n\t\t\t// If false, then only an icon represents the input\n\t\t\t\"label\": true,\n\n\t\t\t// Separator between labels' messages\n\t\t\t// If you use this separator for anything, choose a new one\n\t\t\t\"separator\": \"|\",\n\n\t\t\t// Default Checked Message\n\t\t\t// This message will be visible when input is checked\n\t\t\t\"checked_label\": \"Checked\",\n\n\t\t\t// Default UnChecked Message\n\t\t\t// This message will be visible when input is unchecked\n\t\t\t\"unchecked_label\": \"Unchecked\",\n\n\t\t\t// Force random ID's\n\t\t\t// Replace original ID's with random ID's,\n\t\t\t\"force_random_id\": false,\n\n\t\t\t// Minimum Label Width\n\t\t\t// This value will be used to apply a minimum width to the text labels\n\t\t\t\"minimum_width\": false,\n\n\t\t\t// Use the greatest width between two text labels ?\n\t\t\t// If this has a true value, then label width will be the greatest between labels\n\t\t\t\"same_width\": true\n\t\t}, options);\n\n\t\t/*\n\t\t * Let's create the core function\n\t\t * It will try to cover all settings and mistakes of using\n\t\t */\n\t\treturn this.each(function()\n\t\t{\n\t\t\tvar $object = $( this );\n\t\t\tvar selected = $object.is(':checked');\n\t\t\tvar type = $object.attr('type');\n\t\t\tvar use_icons = true;\n\t\t\tvar use_labels = true;\n\t\t\tvar labels;\n\t\t\tvar labels_object;\n\t\t\tvar input_id;\n\t\t\t\n\t\t\t//Get the aria label from the input element\n\t\t\tvar aria_label = $object.attr( \"aria-label\" );\n\t\t\t\n\t\t\t// Hide the object form screen readers\n\t\t\t$object.attr( \"aria-hidden\", true );\n\t\t\t\n\t\t\t// Test if object is a check input\n\t\t\t// Don't mess me up, come on\n\t\t\tif( $object.is( \":checkbox\" ) === false && $object.is( \":radio\" ) === false )\n\t\t\t\treturn this;\n\n\t\t\t// Add \"labelauty\" class to all checkboxes\n\t\t\t// So you can apply some custom styles\n\t\t\t$object.addClass( settings[\"class\"] );\n\t\t\t\n\t\t\t// Get the value of \"data-labelauty\" attribute\n\t\t\t// Then, we have the labels for each case (or not, as we will see)\n\t\t\tlabels = $object.attr( \"data-labelauty\" );\n\t\t\t\n\t\t\tuse_labels = settings.label;\n\t\t\tuse_icons = settings.icon;\n\n\t\t\t// It's time to check if it's going to the right way\n\t\t\t// Null values, more labels than expected or no labels will be handled here\n\t\t\tif( use_labels === true )\n\t\t\t{\n\t\t\t\tif( labels == null || labels.length === 0 )\n\t\t\t\t{\n\t\t\t\t\t// If attribute has no label and we want to use, then use the default labels\n\t\t\t\t\tlabels_object = [settings.unchecked_label, settings.checked_label]\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Ok, ok, it's time to split Checked and Unchecked labels\n\t\t\t\t\t// We split, by the \"settings.separator\" option\n\t\t\t\t\tlabels_object = labels.split( settings.separator );\n\n\t\t\t\t\t// Now, let's check if exist _only_ two labels\n\t\t\t\t\t// If there's more than two, then we do not use labels :(\n\t\t\t\t\t// Else, do some additional tests\n\t\t\t\t\tif( labels_object.length > 2 )\n\t\t\t\t\t{\n\t\t\t\t\t\tuse_labels = false;\n\t\t\t\t\t\tdebug( settings.development, \"There's more than two labels. LABELAUTY will not use labels.\" );\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// If there's just one label (no split by \"settings.separator\"), it will be used for both cases\n\t\t\t\t\t\t// Here, we have the possibility of use the same label for both cases\n\t\t\t\t\t\tif( labels_object.length === 1 )\n\t\t\t\t\t\t\tdebug( settings.development, \"There's just one label. LABELAUTY will use this one for both cases.\" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Let's begin the beauty\n\t\t\t */\n\n\t\t\t// Start hiding ugly checkboxes\n\t\t\t// Obviously, we don't need native checkboxes :O\n\t\t\t$object.css({ display : \"none\" });\n\t\t\t\t\t\t\n\t\t\t// We don't need more data-labelauty attributes!\n\t\t\t// Ok, ok, it's just for beauty improvement\n\t\t\t$object.removeAttr( \"data-labelauty\" );\n\t\t\t\n\t\t\t// Now, grab checkbox ID Attribute for \"label\" tag use\n\t\t\t// If there's no ID Attribute, then generate a new one\n\t\t\tinput_id = $object.attr( \"id\" );\n\n\t\t\tif( settings.force_random_id || input_id == null || input_id.trim() === \"\")\n\t\t\t{\n\t\t\t\tvar input_id_number = 1 + Math.floor( Math.random() * 1024000 );\n\t\t\t\tinput_id = \"labelauty-\" + input_id_number;\n\n\t\t\t\t// Is there any element with this random ID ?\n\t\t\t\t// If exists, then increment until get an unused ID\n\t\t\t\twhile( $( input_id ).length !== 0 )\n\t\t\t\t{\n\t\t\t\t\tinput_id_number++;\n\t\t\t\t\tinput_id = \"labelauty-\" + input_id_number;\n\t\t\t\t\tdebug( settings.development, \"Holy crap, between 1024 thousand numbers, one raised a conflict. Trying again.\" );\n\t\t\t\t}\n\n\t\t\t\t$object.attr( \"id\", input_id );\n\t\t\t}\n\n\t\t\t// Now, add necessary tags to make this work\n\t\t\t// Here, we're going to test some control variables and act properly\n\t\t\t\n\t\t\tvar element = jQuery(create( input_id, aria_label, selected, type, labels_object, use_labels, use_icons ));\n\t\t\t\n\t\t\telement.click(function(){\n\t\t\t\tif($object.is(':checked')){\n\t\t\t\t\t$(element).attr('aria-checked', false);\n\t\t\t\t}else{\n\t\t\t\t\t$(element).attr('aria-checked', true);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\telement.keypress(function(event){\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif(event.keyCode === 32 || event.keyCode === 13){\t\t\n\t\t\t\t\tif($object.is(':checked')){\n\t\t\t\t\t\t$object.prop('checked', false);\n\t\t\t\t\t\t$(element).attr('aria-checked',false);\n\t\t\t\t\t}else{\n\t\t\t\t\t\t$object.prop('checked', true);\n\t\t\t\t\t\t$(element).attr('aria-checked', true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\t$object.after(element);\n\t\t\t\n\t\t\t// Now, add \"min-width\" to label\n\t\t\t// Let's say the truth, a fixed width is more beautiful than a variable width\n\t\t\tif( settings.minimum_width !== false )\n\t\t\t\t$object.next( \"label[for=\" + input_id + \"]\" ).css({ \"min-width\": settings.minimum_width });\n\n\t\t\t// Now, add \"min-width\" to label\n\t\t\t// Let's say the truth, a fixed width is more beautiful than a variable width\n\t\t\tif( settings.same_width != false && settings.label == true )\n\t\t\t{\n\t\t\t\tvar label_object = $object.next( \"label[for=\" + input_id + \"]\" );\n\t\t\t\tvar unchecked_width = getRealWidth(label_object.find( \"span.labelauty-unchecked\" ));\n\t\t\t\tvar checked_width = getRealWidth(label_object.find( \"span.labelauty-checked\" ));\n\n\t\t\t\tif( unchecked_width > checked_width )\n\t\t\t\t\tlabel_object.find( \"span.labelauty-checked\" ).width( unchecked_width );\n\t\t\t\telse\n\t\t\t\t\tlabel_object.find( \"span.labelauty-unchecked\" ).width( checked_width );\n\t\t\t}\n\t\t});\n\t};\n\n\t/*\n\t * Tricky code to work with hidden elements, like tabs.\n\t * Note: This code is based on jquery.actual plugin.\n\t * https://github.com/dreamerslab/jquery.actual\n\t */\n\tfunction getRealWidth( element )\n\t{\n\t\tvar width = 0;\n\t\tvar $target = element;\n\t\tvar css_class = 'hidden_element';\n\n\t\t$target = $target.clone().attr('class', css_class).appendTo('body');\n\t\twidth = $target.width(true);\n\t\t$target.remove();\n\n\t\treturn width;\n\t}\n\n\tfunction debug( debug, message )\n\t{\n\t\tif( debug && window.console && window.console.log )\n\t\t\twindow.console.log( \"jQuery-LABELAUTY: \" + message );\n\t}\n\n\tfunction create( input_id, aria_label, selected, type, messages_object, label, icon )\n\t{\t\n\t\tvar block;\n\t\tvar unchecked_message;\n\t\tvar checked_message;\n\t\tvar aria = \"\";\n\t\t\n\t\tif( messages_object == null )\n\t\t\tunchecked_message = checked_message = \"\";\n\t\telse\n\t\t{\n\t\t\tunchecked_message = messages_object[0];\n\n\t\t\t// If checked message is null, then put the same text of unchecked message\n\t\t\tif( messages_object[1] == null )\n\t\t\t\tchecked_message = unchecked_message;\n\t\t\telse\n\t\t\t\tchecked_message = messages_object[1];\n\t\t}\n\t\t\n\t\tif(aria_label == null)\n\t\t\taria = \"\";\t\n\t\telse\n\t\t\taria = 'tabindex=\"0\" role=\"' + type + '\" aria-checked=\"' + selected + '\" aria-label=\"' + aria_label + '\"';\n\t\t\n\t\tif( label == true && icon == true)\n\t\t{\n\t\t\tblock = '<label for=\"' + input_id + '\" ' + aria + '>' +\n\t\t\t\t\t\t'<span class=\"labelauty-unchecked-image\"></span>' +\n\t\t\t\t\t\t'<span class=\"labelauty-unchecked\">' + unchecked_message + '</span>' +\n\t\t\t\t\t\t'<span class=\"labelauty-checked-image\"></span>' +\n\t\t\t\t\t\t'<span class=\"labelauty-checked\">' + checked_message + '</span>' +\n\t\t\t\t\t'</label>';\n\t\t}\n\t\telse if( label == true )\n\t\t{\n\t\t\tblock = '<label for=\"' + input_id + '\" ' + aria + '>' +\n\t\t\t\t'<span class=\"labelauty-unchecked\">' + unchecked_message + '</span>' +\n\t\t\t\t'<span class=\"labelauty-checked\">' + checked_message + '</span>' +\n\t\t\t\t'</label>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tblock = '<label for=\"' + input_id + '\" ' + aria + '>' +\n\t\t\t\t\t\t'<span class=\"labelauty-unchecked-image\"></span>' +\n\t\t\t\t\t\t'<span class=\"labelauty-checked-image\"></span>' +\n\t\t\t\t\t'</label>';\n\t\t}\n\t\t\n\t\treturn block;\n\t}\n\n}( jQuery ));\n"]}