/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables.daos;


import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import top.zbeboy.zone.domain.tables.GoogleOauth;
import top.zbeboy.zone.domain.tables.records.GoogleOauthRecord;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.4"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Repository
public class GoogleOauthDao extends DAOImpl<GoogleOauthRecord, top.zbeboy.zone.domain.tables.pojos.GoogleOauth, Record2<String, String>> {

    /**
     * Create a new GoogleOauthDao without any configuration
     */
    public GoogleOauthDao() {
        super(GoogleOauth.GOOGLE_OAUTH, top.zbeboy.zone.domain.tables.pojos.GoogleOauth.class);
    }

    /**
     * Create a new GoogleOauthDao with an attached configuration
     */
    @Autowired
    public GoogleOauthDao(Configuration configuration) {
        super(GoogleOauth.GOOGLE_OAUTH, top.zbeboy.zone.domain.tables.pojos.GoogleOauth.class, configuration);
    }

    @Override
    public Record2<String, String> getId(top.zbeboy.zone.domain.tables.pojos.GoogleOauth object) {
        return compositeKeyRecord(object.getUsername(), object.getGoogleOauthKey());
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.GoogleOauth> fetchRangeOfUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(GoogleOauth.GOOGLE_OAUTH.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.GoogleOauth> fetchByUsername(String... values) {
        return fetch(GoogleOauth.GOOGLE_OAUTH.USERNAME, values);
    }

    /**
     * Fetch records that have <code>google_oauth_key BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.GoogleOauth> fetchRangeOfGoogleOauthKey(String lowerInclusive, String upperInclusive) {
        return fetchRange(GoogleOauth.GOOGLE_OAUTH.GOOGLE_OAUTH_KEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>google_oauth_key IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.GoogleOauth> fetchByGoogleOauthKey(String... values) {
        return fetch(GoogleOauth.GOOGLE_OAUTH.GOOGLE_OAUTH_KEY, values);
    }

    /**
     * Fetch records that have <code>create_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.GoogleOauth> fetchRangeOfCreateDate(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(GoogleOauth.GOOGLE_OAUTH.CREATE_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_date IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.GoogleOauth> fetchByCreateDate(Timestamp... values) {
        return fetch(GoogleOauth.GOOGLE_OAUTH.CREATE_DATE, values);
    }

    /**
     * Fetch records that have <code>last_modifier BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.GoogleOauth> fetchRangeOfLastModifier(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(GoogleOauth.GOOGLE_OAUTH.LAST_MODIFIER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_modifier IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.GoogleOauth> fetchByLastModifier(Timestamp... values) {
        return fetch(GoogleOauth.GOOGLE_OAUTH.LAST_MODIFIER, values);
    }
}
