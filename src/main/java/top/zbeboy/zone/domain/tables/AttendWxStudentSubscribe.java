/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import top.zbeboy.zone.domain.Indexes;
import top.zbeboy.zone.domain.Keys;
import top.zbeboy.zone.domain.Zone;
import top.zbeboy.zone.domain.tables.records.AttendWxStudentSubscribeRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AttendWxStudentSubscribe extends TableImpl<AttendWxStudentSubscribeRecord> {

    private static final long serialVersionUID = -1248984815;

    /**
     * The reference instance of <code>zone.attend_wx_student_subscribe</code>
     */
    public static final AttendWxStudentSubscribe ATTEND_WX_STUDENT_SUBSCRIBE = new AttendWxStudentSubscribe();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AttendWxStudentSubscribeRecord> getRecordType() {
        return AttendWxStudentSubscribeRecord.class;
    }

    /**
     * The column <code>zone.attend_wx_student_subscribe.subscribe_id</code>.
     */
    public final TableField<AttendWxStudentSubscribeRecord, String> SUBSCRIBE_ID = createField(DSL.name("subscribe_id"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.attend_wx_student_subscribe.template_id</code>.
     */
    public final TableField<AttendWxStudentSubscribeRecord, String> TEMPLATE_ID = createField(DSL.name("template_id"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.attend_wx_student_subscribe.page</code>.
     */
    public final TableField<AttendWxStudentSubscribeRecord, String> PAGE = createField(DSL.name("page"), org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>zone.attend_wx_student_subscribe.data</code>.
     */
    public final TableField<AttendWxStudentSubscribeRecord, String> DATA = createField(DSL.name("data"), org.jooq.impl.SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>zone.attend_wx_student_subscribe.mini_program_state</code>.
     */
    public final TableField<AttendWxStudentSubscribeRecord, String> MINI_PROGRAM_STATE = createField(DSL.name("mini_program_state"), org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>zone.attend_wx_student_subscribe.lang</code>.
     */
    public final TableField<AttendWxStudentSubscribeRecord, String> LANG = createField(DSL.name("lang"), org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>zone.attend_wx_student_subscribe.student_id</code>.
     */
    public final TableField<AttendWxStudentSubscribeRecord, Integer> STUDENT_ID = createField(DSL.name("student_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>zone.attend_wx_student_subscribe.attend_release_id</code>.
     */
    public final TableField<AttendWxStudentSubscribeRecord, String> ATTEND_RELEASE_ID = createField(DSL.name("attend_release_id"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.attend_wx_student_subscribe.create_date</code>.
     */
    public final TableField<AttendWxStudentSubscribeRecord, Timestamp> CREATE_DATE = createField(DSL.name("create_date"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>zone.attend_wx_student_subscribe</code> table reference
     */
    public AttendWxStudentSubscribe() {
        this(DSL.name("attend_wx_student_subscribe"), null);
    }

    /**
     * Create an aliased <code>zone.attend_wx_student_subscribe</code> table reference
     */
    public AttendWxStudentSubscribe(String alias) {
        this(DSL.name(alias), ATTEND_WX_STUDENT_SUBSCRIBE);
    }

    /**
     * Create an aliased <code>zone.attend_wx_student_subscribe</code> table reference
     */
    public AttendWxStudentSubscribe(Name alias) {
        this(alias, ATTEND_WX_STUDENT_SUBSCRIBE);
    }

    private AttendWxStudentSubscribe(Name alias, Table<AttendWxStudentSubscribeRecord> aliased) {
        this(alias, aliased, null);
    }

    private AttendWxStudentSubscribe(Name alias, Table<AttendWxStudentSubscribeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> AttendWxStudentSubscribe(Table<O> child, ForeignKey<O, AttendWxStudentSubscribeRecord> key) {
        super(child, key, ATTEND_WX_STUDENT_SUBSCRIBE);
    }

    @Override
    public Schema getSchema() {
        return Zone.ZONE;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ATTEND_WX_STUDENT_SUBSCRIBE_ATTEND_RELEASE_ID, Indexes.ATTEND_WX_STUDENT_SUBSCRIBE_PRIMARY, Indexes.ATTEND_WX_STUDENT_SUBSCRIBE_STUDENT_ID);
    }

    @Override
    public UniqueKey<AttendWxStudentSubscribeRecord> getPrimaryKey() {
        return Keys.KEY_ATTEND_WX_STUDENT_SUBSCRIBE_PRIMARY;
    }

    @Override
    public List<UniqueKey<AttendWxStudentSubscribeRecord>> getKeys() {
        return Arrays.<UniqueKey<AttendWxStudentSubscribeRecord>>asList(Keys.KEY_ATTEND_WX_STUDENT_SUBSCRIBE_PRIMARY, Keys.KEY_ATTEND_WX_STUDENT_SUBSCRIBE_STUDENT_ID);
    }

    @Override
    public List<ForeignKey<AttendWxStudentSubscribeRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AttendWxStudentSubscribeRecord, ?>>asList(Keys.ATTEND_WX_STUDENT_SUBSCRIBE_IBFK_2, Keys.ATTEND_WX_STUDENT_SUBSCRIBE_IBFK_1);
    }

    public Student student() {
        return new Student(this, Keys.ATTEND_WX_STUDENT_SUBSCRIBE_IBFK_2);
    }

    public AttendRelease attendRelease() {
        return new AttendRelease(this, Keys.ATTEND_WX_STUDENT_SUBSCRIBE_IBFK_1);
    }

    @Override
    public AttendWxStudentSubscribe as(String alias) {
        return new AttendWxStudentSubscribe(DSL.name(alias), this);
    }

    @Override
    public AttendWxStudentSubscribe as(Name alias) {
        return new AttendWxStudentSubscribe(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AttendWxStudentSubscribe rename(String name) {
        return new AttendWxStudentSubscribe(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AttendWxStudentSubscribe rename(Name name) {
        return new AttendWxStudentSubscribe(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<String, String, String, String, String, String, Integer, String, Timestamp> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
