/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;

import top.zbeboy.zone.domain.tables.RoleApply;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoleApplyRecord extends UpdatableRecordImpl<RoleApplyRecord> implements Record13<String, String, Integer, Integer, Integer, String, String, String, String, Timestamp, Timestamp, Timestamp, Byte> {

    private static final long serialVersionUID = 1059231433;

    /**
     * Setter for <code>zone.role_apply.role_apply_id</code>.
     */
    public void setRoleApplyId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>zone.role_apply.role_apply_id</code>.
     */
    @NotNull
    @Size(max = 64)
    public String getRoleApplyId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>zone.role_apply.username</code>.
     */
    public void setUsername(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>zone.role_apply.username</code>.
     */
    @NotNull
    @Size(max = 64)
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>zone.role_apply.authorize_type_id</code>.
     */
    public void setAuthorizeTypeId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>zone.role_apply.authorize_type_id</code>.
     */
    @NotNull
    public Integer getAuthorizeTypeId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>zone.role_apply.data_scope</code>.
     */
    public void setDataScope(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>zone.role_apply.data_scope</code>.
     */
    @NotNull
    public Integer getDataScope() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>zone.role_apply.data_id</code>.
     */
    public void setDataId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>zone.role_apply.data_id</code>.
     */
    @NotNull
    public Integer getDataId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>zone.role_apply.role_id</code>.
     */
    public void setRoleId(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>zone.role_apply.role_id</code>.
     */
    @NotNull
    @Size(max = 64)
    public String getRoleId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>zone.role_apply.duration</code>.
     */
    public void setDuration(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>zone.role_apply.duration</code>.
     */
    @NotNull
    @Size(max = 5)
    public String getDuration() {
        return (String) get(6);
    }

    /**
     * Setter for <code>zone.role_apply.reason</code>.
     */
    public void setReason(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>zone.role_apply.reason</code>.
     */
    @NotNull
    @Size(max = 200)
    public String getReason() {
        return (String) get(7);
    }

    /**
     * Setter for <code>zone.role_apply.refuse</code>.
     */
    public void setRefuse(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>zone.role_apply.refuse</code>.
     */
    @Size(max = 200)
    public String getRefuse() {
        return (String) get(8);
    }

    /**
     * Setter for <code>zone.role_apply.valid_date</code>.
     */
    public void setValidDate(Timestamp value) {
        set(9, value);
    }

    /**
     * Getter for <code>zone.role_apply.valid_date</code>.
     */
    @NotNull
    public Timestamp getValidDate() {
        return (Timestamp) get(9);
    }

    /**
     * Setter for <code>zone.role_apply.expire_date</code>.
     */
    public void setExpireDate(Timestamp value) {
        set(10, value);
    }

    /**
     * Getter for <code>zone.role_apply.expire_date</code>.
     */
    @NotNull
    public Timestamp getExpireDate() {
        return (Timestamp) get(10);
    }

    /**
     * Setter for <code>zone.role_apply.create_date</code>.
     */
    public void setCreateDate(Timestamp value) {
        set(11, value);
    }

    /**
     * Getter for <code>zone.role_apply.create_date</code>.
     */
    @NotNull
    public Timestamp getCreateDate() {
        return (Timestamp) get(11);
    }

    /**
     * Setter for <code>zone.role_apply.apply_status</code>.
     */
    public void setApplyStatus(Byte value) {
        set(12, value);
    }

    /**
     * Getter for <code>zone.role_apply.apply_status</code>.
     */
    @NotNull
    public Byte getApplyStatus() {
        return (Byte) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<String, String, Integer, Integer, Integer, String, String, String, String, Timestamp, Timestamp, Timestamp, Byte> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<String, String, Integer, Integer, Integer, String, String, String, String, Timestamp, Timestamp, Timestamp, Byte> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return RoleApply.ROLE_APPLY.ROLE_APPLY_ID;
    }

    @Override
    public Field<String> field2() {
        return RoleApply.ROLE_APPLY.USERNAME;
    }

    @Override
    public Field<Integer> field3() {
        return RoleApply.ROLE_APPLY.AUTHORIZE_TYPE_ID;
    }

    @Override
    public Field<Integer> field4() {
        return RoleApply.ROLE_APPLY.DATA_SCOPE;
    }

    @Override
    public Field<Integer> field5() {
        return RoleApply.ROLE_APPLY.DATA_ID;
    }

    @Override
    public Field<String> field6() {
        return RoleApply.ROLE_APPLY.ROLE_ID;
    }

    @Override
    public Field<String> field7() {
        return RoleApply.ROLE_APPLY.DURATION;
    }

    @Override
    public Field<String> field8() {
        return RoleApply.ROLE_APPLY.REASON;
    }

    @Override
    public Field<String> field9() {
        return RoleApply.ROLE_APPLY.REFUSE;
    }

    @Override
    public Field<Timestamp> field10() {
        return RoleApply.ROLE_APPLY.VALID_DATE;
    }

    @Override
    public Field<Timestamp> field11() {
        return RoleApply.ROLE_APPLY.EXPIRE_DATE;
    }

    @Override
    public Field<Timestamp> field12() {
        return RoleApply.ROLE_APPLY.CREATE_DATE;
    }

    @Override
    public Field<Byte> field13() {
        return RoleApply.ROLE_APPLY.APPLY_STATUS;
    }

    @Override
    public String component1() {
        return getRoleApplyId();
    }

    @Override
    public String component2() {
        return getUsername();
    }

    @Override
    public Integer component3() {
        return getAuthorizeTypeId();
    }

    @Override
    public Integer component4() {
        return getDataScope();
    }

    @Override
    public Integer component5() {
        return getDataId();
    }

    @Override
    public String component6() {
        return getRoleId();
    }

    @Override
    public String component7() {
        return getDuration();
    }

    @Override
    public String component8() {
        return getReason();
    }

    @Override
    public String component9() {
        return getRefuse();
    }

    @Override
    public Timestamp component10() {
        return getValidDate();
    }

    @Override
    public Timestamp component11() {
        return getExpireDate();
    }

    @Override
    public Timestamp component12() {
        return getCreateDate();
    }

    @Override
    public Byte component13() {
        return getApplyStatus();
    }

    @Override
    public String value1() {
        return getRoleApplyId();
    }

    @Override
    public String value2() {
        return getUsername();
    }

    @Override
    public Integer value3() {
        return getAuthorizeTypeId();
    }

    @Override
    public Integer value4() {
        return getDataScope();
    }

    @Override
    public Integer value5() {
        return getDataId();
    }

    @Override
    public String value6() {
        return getRoleId();
    }

    @Override
    public String value7() {
        return getDuration();
    }

    @Override
    public String value8() {
        return getReason();
    }

    @Override
    public String value9() {
        return getRefuse();
    }

    @Override
    public Timestamp value10() {
        return getValidDate();
    }

    @Override
    public Timestamp value11() {
        return getExpireDate();
    }

    @Override
    public Timestamp value12() {
        return getCreateDate();
    }

    @Override
    public Byte value13() {
        return getApplyStatus();
    }

    @Override
    public RoleApplyRecord value1(String value) {
        setRoleApplyId(value);
        return this;
    }

    @Override
    public RoleApplyRecord value2(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public RoleApplyRecord value3(Integer value) {
        setAuthorizeTypeId(value);
        return this;
    }

    @Override
    public RoleApplyRecord value4(Integer value) {
        setDataScope(value);
        return this;
    }

    @Override
    public RoleApplyRecord value5(Integer value) {
        setDataId(value);
        return this;
    }

    @Override
    public RoleApplyRecord value6(String value) {
        setRoleId(value);
        return this;
    }

    @Override
    public RoleApplyRecord value7(String value) {
        setDuration(value);
        return this;
    }

    @Override
    public RoleApplyRecord value8(String value) {
        setReason(value);
        return this;
    }

    @Override
    public RoleApplyRecord value9(String value) {
        setRefuse(value);
        return this;
    }

    @Override
    public RoleApplyRecord value10(Timestamp value) {
        setValidDate(value);
        return this;
    }

    @Override
    public RoleApplyRecord value11(Timestamp value) {
        setExpireDate(value);
        return this;
    }

    @Override
    public RoleApplyRecord value12(Timestamp value) {
        setCreateDate(value);
        return this;
    }

    @Override
    public RoleApplyRecord value13(Byte value) {
        setApplyStatus(value);
        return this;
    }

    @Override
    public RoleApplyRecord values(String value1, String value2, Integer value3, Integer value4, Integer value5, String value6, String value7, String value8, String value9, Timestamp value10, Timestamp value11, Timestamp value12, Byte value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoleApplyRecord
     */
    public RoleApplyRecord() {
        super(RoleApply.ROLE_APPLY);
    }

    /**
     * Create a detached, initialised RoleApplyRecord
     */
    public RoleApplyRecord(String roleApplyId, String username, Integer authorizeTypeId, Integer dataScope, Integer dataId, String roleId, String duration, String reason, String refuse, Timestamp validDate, Timestamp expireDate, Timestamp createDate, Byte applyStatus) {
        super(RoleApply.ROLE_APPLY);

        set(0, roleApplyId);
        set(1, username);
        set(2, authorizeTypeId);
        set(3, dataScope);
        set(4, dataId);
        set(5, roleId);
        set(6, duration);
        set(7, reason);
        set(8, refuse);
        set(9, validDate);
        set(10, expireDate);
        set(11, createDate);
        set(12, applyStatus);
    }
}
