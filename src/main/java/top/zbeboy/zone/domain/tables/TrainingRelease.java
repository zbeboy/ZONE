/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables;


import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import top.zbeboy.zone.domain.Indexes;
import top.zbeboy.zone.domain.Keys;
import top.zbeboy.zone.domain.Zone;
import top.zbeboy.zone.domain.tables.records.TrainingReleaseRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TrainingRelease extends TableImpl<TrainingReleaseRecord> {

    private static final long serialVersionUID = -42788912;

    /**
     * The reference instance of <code>zone.training_release</code>
     */
    public static final TrainingRelease TRAINING_RELEASE = new TrainingRelease();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TrainingReleaseRecord> getRecordType() {
        return TrainingReleaseRecord.class;
    }

    /**
     * The column <code>zone.training_release.training_release_id</code>.
     */
    public final TableField<TrainingReleaseRecord, String> TRAINING_RELEASE_ID = createField(DSL.name("training_release_id"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.training_release.title</code>.
     */
    public final TableField<TrainingReleaseRecord, String> TITLE = createField(DSL.name("title"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>zone.training_release.start_date</code>.
     */
    public final TableField<TrainingReleaseRecord, Date> START_DATE = createField(DSL.name("start_date"), org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>zone.training_release.end_date</code>.
     */
    public final TableField<TrainingReleaseRecord, Date> END_DATE = createField(DSL.name("end_date"), org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>zone.training_release.username</code>.
     */
    public final TableField<TrainingReleaseRecord, String> USERNAME = createField(DSL.name("username"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.training_release.course_id</code>.
     */
    public final TableField<TrainingReleaseRecord, Integer> COURSE_ID = createField(DSL.name("course_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>zone.training_release.organize_id</code>.
     */
    public final TableField<TrainingReleaseRecord, Integer> ORGANIZE_ID = createField(DSL.name("organize_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>zone.training_release.publisher</code>.
     */
    public final TableField<TrainingReleaseRecord, String> PUBLISHER = createField(DSL.name("publisher"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>zone.training_release.release_time</code>.
     */
    public final TableField<TrainingReleaseRecord, Timestamp> RELEASE_TIME = createField(DSL.name("release_time"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>zone.training_release</code> table reference
     */
    public TrainingRelease() {
        this(DSL.name("training_release"), null);
    }

    /**
     * Create an aliased <code>zone.training_release</code> table reference
     */
    public TrainingRelease(String alias) {
        this(DSL.name(alias), TRAINING_RELEASE);
    }

    /**
     * Create an aliased <code>zone.training_release</code> table reference
     */
    public TrainingRelease(Name alias) {
        this(alias, TRAINING_RELEASE);
    }

    private TrainingRelease(Name alias, Table<TrainingReleaseRecord> aliased) {
        this(alias, aliased, null);
    }

    private TrainingRelease(Name alias, Table<TrainingReleaseRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TrainingRelease(Table<O> child, ForeignKey<O, TrainingReleaseRecord> key) {
        super(child, key, TRAINING_RELEASE);
    }

    @Override
    public Schema getSchema() {
        return Zone.ZONE;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TRAINING_RELEASE_COURSE_ID, Indexes.TRAINING_RELEASE_ORGANIZE_ID, Indexes.TRAINING_RELEASE_PRIMARY, Indexes.TRAINING_RELEASE_USERNAME);
    }

    @Override
    public UniqueKey<TrainingReleaseRecord> getPrimaryKey() {
        return Keys.KEY_TRAINING_RELEASE_PRIMARY;
    }

    @Override
    public List<UniqueKey<TrainingReleaseRecord>> getKeys() {
        return Arrays.<UniqueKey<TrainingReleaseRecord>>asList(Keys.KEY_TRAINING_RELEASE_PRIMARY);
    }

    @Override
    public List<ForeignKey<TrainingReleaseRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TrainingReleaseRecord, ?>>asList(Keys.TRAINING_RELEASE_IBFK_1, Keys.TRAINING_RELEASE_IBFK_2, Keys.TRAINING_RELEASE_IBFK_3);
    }

    public Users users() {
        return new Users(this, Keys.TRAINING_RELEASE_IBFK_1);
    }

    public Course course() {
        return new Course(this, Keys.TRAINING_RELEASE_IBFK_2);
    }

    public Organize organize() {
        return new Organize(this, Keys.TRAINING_RELEASE_IBFK_3);
    }

    @Override
    public TrainingRelease as(String alias) {
        return new TrainingRelease(DSL.name(alias), this);
    }

    @Override
    public TrainingRelease as(Name alias) {
        return new TrainingRelease(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TrainingRelease rename(String name) {
        return new TrainingRelease(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TrainingRelease rename(Name name) {
        return new TrainingRelease(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<String, String, Date, Date, String, Integer, Integer, String, Timestamp> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
