/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables.records;


import javax.annotation.Generated;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import top.zbeboy.zone.domain.tables.Grade;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GradeRecord extends UpdatableRecordImpl<GradeRecord> implements Record4<Integer, Integer, Byte, Integer> {

    private static final long serialVersionUID = -378274130;

    /**
     * Setter for <code>zone.grade.grade_id</code>.
     */
    public void setGradeId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>zone.grade.grade_id</code>.
     */
    public Integer getGradeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>zone.grade.grade</code>.
     */
    public void setGrade(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>zone.grade.grade</code>.
     */
    @NotNull
    public Integer getGrade() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>zone.grade.grade_is_del</code>.
     */
    public void setGradeIsDel(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>zone.grade.grade_is_del</code>.
     */
    public Byte getGradeIsDel() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>zone.grade.science_id</code>.
     */
    public void setScienceId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>zone.grade.science_id</code>.
     */
    @NotNull
    public Integer getScienceId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Byte, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, Byte, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Grade.GRADE.GRADE_ID;
    }

    @Override
    public Field<Integer> field2() {
        return Grade.GRADE.GRADE_;
    }

    @Override
    public Field<Byte> field3() {
        return Grade.GRADE.GRADE_IS_DEL;
    }

    @Override
    public Field<Integer> field4() {
        return Grade.GRADE.SCIENCE_ID;
    }

    @Override
    public Integer component1() {
        return getGradeId();
    }

    @Override
    public Integer component2() {
        return getGrade();
    }

    @Override
    public Byte component3() {
        return getGradeIsDel();
    }

    @Override
    public Integer component4() {
        return getScienceId();
    }

    @Override
    public Integer value1() {
        return getGradeId();
    }

    @Override
    public Integer value2() {
        return getGrade();
    }

    @Override
    public Byte value3() {
        return getGradeIsDel();
    }

    @Override
    public Integer value4() {
        return getScienceId();
    }

    @Override
    public GradeRecord value1(Integer value) {
        setGradeId(value);
        return this;
    }

    @Override
    public GradeRecord value2(Integer value) {
        setGrade(value);
        return this;
    }

    @Override
    public GradeRecord value3(Byte value) {
        setGradeIsDel(value);
        return this;
    }

    @Override
    public GradeRecord value4(Integer value) {
        setScienceId(value);
        return this;
    }

    @Override
    public GradeRecord values(Integer value1, Integer value2, Byte value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GradeRecord
     */
    public GradeRecord() {
        super(Grade.GRADE);
    }

    /**
     * Create a detached, initialised GradeRecord
     */
    public GradeRecord(Integer gradeId, Integer grade, Byte gradeIsDel, Integer scienceId) {
        super(Grade.GRADE);

        set(0, gradeId);
        set(1, grade);
        set(2, gradeIsDel);
        set(3, scienceId);
    }
}
