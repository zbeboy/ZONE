/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import top.zbeboy.zone.domain.Indexes;
import top.zbeboy.zone.domain.Keys;
import top.zbeboy.zone.domain.Zone;
import top.zbeboy.zone.domain.tables.records.WeiXinDeviceRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WeiXinDevice extends TableImpl<WeiXinDeviceRecord> {

    private static final long serialVersionUID = 1504213564;

    /**
     * The reference instance of <code>zone.wei_xin_device</code>
     */
    public static final WeiXinDevice WEI_XIN_DEVICE = new WeiXinDevice();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WeiXinDeviceRecord> getRecordType() {
        return WeiXinDeviceRecord.class;
    }

    /**
     * The column <code>zone.wei_xin_device.device_id</code>.
     */
    public final TableField<WeiXinDeviceRecord, String> DEVICE_ID = createField(DSL.name("device_id"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.wei_xin_device.brand</code>.
     */
    public final TableField<WeiXinDeviceRecord, String> BRAND = createField(DSL.name("brand"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>zone.wei_xin_device.model</code>.
     */
    public final TableField<WeiXinDeviceRecord, String> MODEL = createField(DSL.name("model"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>zone.wei_xin_device.version</code>.
     */
    public final TableField<WeiXinDeviceRecord, String> VERSION = createField(DSL.name("version"), org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>zone.wei_xin_device.screen_width</code>.
     */
    public final TableField<WeiXinDeviceRecord, Double> SCREEN_WIDTH = createField(DSL.name("screen_width"), org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>zone.wei_xin_device.screen_height</code>.
     */
    public final TableField<WeiXinDeviceRecord, Double> SCREEN_HEIGHT = createField(DSL.name("screen_height"), org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>zone.wei_xin_device.system_info</code>.
     */
    public final TableField<WeiXinDeviceRecord, String> SYSTEM_INFO = createField(DSL.name("system_info"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>zone.wei_xin_device.platform</code>.
     */
    public final TableField<WeiXinDeviceRecord, String> PLATFORM = createField(DSL.name("platform"), org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>zone.wei_xin_device.location_authorized</code>.
     */
    public final TableField<WeiXinDeviceRecord, Byte> LOCATION_AUTHORIZED = createField(DSL.name("location_authorized"), org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>zone.wei_xin_device.notification_authorized</code>.
     */
    public final TableField<WeiXinDeviceRecord, Byte> NOTIFICATION_AUTHORIZED = createField(DSL.name("notification_authorized"), org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>zone.wei_xin_device.username</code>.
     */
    public final TableField<WeiXinDeviceRecord, String> USERNAME = createField(DSL.name("username"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.wei_xin_device.create_date</code>.
     */
    public final TableField<WeiXinDeviceRecord, Timestamp> CREATE_DATE = createField(DSL.name("create_date"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>zone.wei_xin_device</code> table reference
     */
    public WeiXinDevice() {
        this(DSL.name("wei_xin_device"), null);
    }

    /**
     * Create an aliased <code>zone.wei_xin_device</code> table reference
     */
    public WeiXinDevice(String alias) {
        this(DSL.name(alias), WEI_XIN_DEVICE);
    }

    /**
     * Create an aliased <code>zone.wei_xin_device</code> table reference
     */
    public WeiXinDevice(Name alias) {
        this(alias, WEI_XIN_DEVICE);
    }

    private WeiXinDevice(Name alias, Table<WeiXinDeviceRecord> aliased) {
        this(alias, aliased, null);
    }

    private WeiXinDevice(Name alias, Table<WeiXinDeviceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> WeiXinDevice(Table<O> child, ForeignKey<O, WeiXinDeviceRecord> key) {
        super(child, key, WEI_XIN_DEVICE);
    }

    @Override
    public Schema getSchema() {
        return Zone.ZONE;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.WEI_XIN_DEVICE_PRIMARY, Indexes.WEI_XIN_DEVICE_USERNAME);
    }

    @Override
    public UniqueKey<WeiXinDeviceRecord> getPrimaryKey() {
        return Keys.KEY_WEI_XIN_DEVICE_PRIMARY;
    }

    @Override
    public List<UniqueKey<WeiXinDeviceRecord>> getKeys() {
        return Arrays.<UniqueKey<WeiXinDeviceRecord>>asList(Keys.KEY_WEI_XIN_DEVICE_PRIMARY);
    }

    @Override
    public List<ForeignKey<WeiXinDeviceRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<WeiXinDeviceRecord, ?>>asList(Keys.WEI_XIN_DEVICE_IBFK_1);
    }

    public Users users() {
        return new Users(this, Keys.WEI_XIN_DEVICE_IBFK_1);
    }

    @Override
    public WeiXinDevice as(String alias) {
        return new WeiXinDevice(DSL.name(alias), this);
    }

    @Override
    public WeiXinDevice as(Name alias) {
        return new WeiXinDevice(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WeiXinDevice rename(String name) {
        return new WeiXinDevice(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WeiXinDevice rename(Name name) {
        return new WeiXinDevice(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<String, String, String, String, Double, Double, String, String, Byte, Byte, String, Timestamp> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
