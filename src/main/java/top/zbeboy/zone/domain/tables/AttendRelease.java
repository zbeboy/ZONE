/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import top.zbeboy.zone.domain.Indexes;
import top.zbeboy.zone.domain.Keys;
import top.zbeboy.zone.domain.Zone;
import top.zbeboy.zone.domain.tables.records.AttendReleaseRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AttendRelease extends TableImpl<AttendReleaseRecord> {

    private static final long serialVersionUID = 598738110;

    /**
     * The reference instance of <code>zone.attend_release</code>
     */
    public static final AttendRelease ATTEND_RELEASE = new AttendRelease();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AttendReleaseRecord> getRecordType() {
        return AttendReleaseRecord.class;
    }

    /**
     * The column <code>zone.attend_release.attend_release_id</code>.
     */
    public final TableField<AttendReleaseRecord, String> ATTEND_RELEASE_ID = createField(DSL.name("attend_release_id"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.attend_release.title</code>.
     */
    public final TableField<AttendReleaseRecord, String> TITLE = createField(DSL.name("title"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>zone.attend_release.attend_start_time</code>.
     */
    public final TableField<AttendReleaseRecord, Timestamp> ATTEND_START_TIME = createField(DSL.name("attend_start_time"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>zone.attend_release.attend_end_time</code>.
     */
    public final TableField<AttendReleaseRecord, Timestamp> ATTEND_END_TIME = createField(DSL.name("attend_end_time"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>zone.attend_release.is_auto</code>.
     */
    public final TableField<AttendReleaseRecord, Byte> IS_AUTO = createField(DSL.name("is_auto"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>zone.attend_release.valid_date</code>.
     */
    public final TableField<AttendReleaseRecord, Timestamp> VALID_DATE = createField(DSL.name("valid_date"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>zone.attend_release.expire_date</code>.
     */
    public final TableField<AttendReleaseRecord, Timestamp> EXPIRE_DATE = createField(DSL.name("expire_date"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>zone.attend_release.organize_id</code>.
     */
    public final TableField<AttendReleaseRecord, Integer> ORGANIZE_ID = createField(DSL.name("organize_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>zone.attend_release.username</code>.
     */
    public final TableField<AttendReleaseRecord, String> USERNAME = createField(DSL.name("username"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.attend_release.release_time</code>.
     */
    public final TableField<AttendReleaseRecord, Timestamp> RELEASE_TIME = createField(DSL.name("release_time"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>zone.attend_release</code> table reference
     */
    public AttendRelease() {
        this(DSL.name("attend_release"), null);
    }

    /**
     * Create an aliased <code>zone.attend_release</code> table reference
     */
    public AttendRelease(String alias) {
        this(DSL.name(alias), ATTEND_RELEASE);
    }

    /**
     * Create an aliased <code>zone.attend_release</code> table reference
     */
    public AttendRelease(Name alias) {
        this(alias, ATTEND_RELEASE);
    }

    private AttendRelease(Name alias, Table<AttendReleaseRecord> aliased) {
        this(alias, aliased, null);
    }

    private AttendRelease(Name alias, Table<AttendReleaseRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> AttendRelease(Table<O> child, ForeignKey<O, AttendReleaseRecord> key) {
        super(child, key, ATTEND_RELEASE);
    }

    @Override
    public Schema getSchema() {
        return Zone.ZONE;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ATTEND_RELEASE_ORGANIZE_ID, Indexes.ATTEND_RELEASE_PRIMARY, Indexes.ATTEND_RELEASE_USERNAME);
    }

    @Override
    public UniqueKey<AttendReleaseRecord> getPrimaryKey() {
        return Keys.KEY_ATTEND_RELEASE_PRIMARY;
    }

    @Override
    public List<UniqueKey<AttendReleaseRecord>> getKeys() {
        return Arrays.<UniqueKey<AttendReleaseRecord>>asList(Keys.KEY_ATTEND_RELEASE_PRIMARY);
    }

    @Override
    public List<ForeignKey<AttendReleaseRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AttendReleaseRecord, ?>>asList(Keys.ATTEND_RELEASE_IBFK_1, Keys.ATTEND_RELEASE_IBFK_2);
    }

    public Organize organize() {
        return new Organize(this, Keys.ATTEND_RELEASE_IBFK_1);
    }

    public Users users() {
        return new Users(this, Keys.ATTEND_RELEASE_IBFK_2);
    }

    @Override
    public AttendRelease as(String alias) {
        return new AttendRelease(DSL.name(alias), this);
    }

    @Override
    public AttendRelease as(Name alias) {
        return new AttendRelease(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AttendRelease rename(String name) {
        return new AttendRelease(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AttendRelease rename(Name name) {
        return new AttendRelease(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<String, String, Timestamp, Timestamp, Byte, Timestamp, Timestamp, Integer, String, Timestamp> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
