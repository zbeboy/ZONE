/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record20;
import org.jooq.Row20;
import org.jooq.impl.UpdatableRecordImpl;
import top.zbeboy.zone.domain.tables.Users;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.sql.Date;
import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.4"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record20<String, String, Byte, Byte, Byte, Byte, Byte, Integer, String, String, String, String, String, Byte, String, String, Timestamp, Timestamp, String, Date> {

    private static final long serialVersionUID = 1276331119;

    /**
     * Setter for <code>zone.users.username</code>.
     */
    public void setUsername(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>zone.users.username</code>.
     */
    @NotNull
    @Size(max = 64)
    public String getUsername() {
        return (String) get(0);
    }

    /**
     * Setter for <code>zone.users.password</code>.
     */
    public void setPassword(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>zone.users.password</code>.
     */
    @NotNull
    @Size(max = 300)
    public String getPassword() {
        return (String) get(1);
    }

    /**
     * Setter for <code>zone.users.enabled</code>.
     */
    public void setEnabled(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>zone.users.enabled</code>.
     */
    @NotNull
    public Byte getEnabled() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>zone.users.account_non_expired</code>.
     */
    public void setAccountNonExpired(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>zone.users.account_non_expired</code>.
     */
    @NotNull
    public Byte getAccountNonExpired() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>zone.users.credentials_non_expired</code>.
     */
    public void setCredentialsNonExpired(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>zone.users.credentials_non_expired</code>.
     */
    @NotNull
    public Byte getCredentialsNonExpired() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>zone.users.account_non_locked</code>.
     */
    public void setAccountNonLocked(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>zone.users.account_non_locked</code>.
     */
    @NotNull
    public Byte getAccountNonLocked() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>zone.users.agree_protocol</code>.
     */
    public void setAgreeProtocol(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>zone.users.agree_protocol</code>.
     */
    @NotNull
    public Byte getAgreeProtocol() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>zone.users.users_type_id</code>.
     */
    public void setUsersTypeId(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>zone.users.users_type_id</code>.
     */
    @NotNull
    public Integer getUsersTypeId() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>zone.users.real_name</code>.
     */
    public void setRealName(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>zone.users.real_name</code>.
     */
    @Size(max = 30)
    public String getRealName() {
        return (String) get(8);
    }

    /**
     * Setter for <code>zone.users.email</code>.
     */
    public void setEmail(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>zone.users.email</code>.
     */
    @NotNull
    @Size(max = 100)
    public String getEmail() {
        return (String) get(9);
    }

    /**
     * Setter for <code>zone.users.mobile</code>.
     */
    public void setMobile(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>zone.users.mobile</code>.
     */
    @NotNull
    @Size(max = 15)
    public String getMobile() {
        return (String) get(10);
    }

    /**
     * Setter for <code>zone.users.id_card</code>.
     */
    public void setIdCard(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>zone.users.id_card</code>.
     */
    @Size(max = 20)
    public String getIdCard() {
        return (String) get(11);
    }

    /**
     * Setter for <code>zone.users.avatar</code>.
     */
    public void setAvatar(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>zone.users.avatar</code>.
     */
    @Size(max = 64)
    public String getAvatar() {
        return (String) get(12);
    }

    /**
     * Setter for <code>zone.users.verify_mailbox</code>.
     */
    public void setVerifyMailbox(Byte value) {
        set(13, value);
    }

    /**
     * Getter for <code>zone.users.verify_mailbox</code>.
     */
    public Byte getVerifyMailbox() {
        return (Byte) get(13);
    }

    /**
     * Setter for <code>zone.users.mailbox_verify_code</code>.
     */
    public void setMailboxVerifyCode(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>zone.users.mailbox_verify_code</code>.
     */
    @Size(max = 20)
    public String getMailboxVerifyCode() {
        return (String) get(14);
    }

    /**
     * Setter for <code>zone.users.password_reset_key</code>.
     */
    public void setPasswordResetKey(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>zone.users.password_reset_key</code>.
     */
    @Size(max = 20)
    public String getPasswordResetKey() {
        return (String) get(15);
    }

    /**
     * Setter for <code>zone.users.mailbox_verify_valid</code>.
     */
    public void setMailboxVerifyValid(Timestamp value) {
        set(16, value);
    }

    /**
     * Getter for <code>zone.users.mailbox_verify_valid</code>.
     */
    public Timestamp getMailboxVerifyValid() {
        return (Timestamp) get(16);
    }

    /**
     * Setter for <code>zone.users.password_reset_key_valid</code>.
     */
    public void setPasswordResetKeyValid(Timestamp value) {
        set(17, value);
    }

    /**
     * Getter for <code>zone.users.password_reset_key_valid</code>.
     */
    public Timestamp getPasswordResetKeyValid() {
        return (Timestamp) get(17);
    }

    /**
     * Setter for <code>zone.users.lang_key</code>.
     */
    public void setLangKey(String value) {
        set(18, value);
    }

    /**
     * Getter for <code>zone.users.lang_key</code>.
     */
    @Size(max = 20)
    public String getLangKey() {
        return (String) get(18);
    }

    /**
     * Setter for <code>zone.users.join_date</code>.
     */
    public void setJoinDate(Date value) {
        set(19, value);
    }

    /**
     * Getter for <code>zone.users.join_date</code>.
     */
    public Date getJoinDate() {
        return (Date) get(19);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record20 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row20<String, String, Byte, Byte, Byte, Byte, Byte, Integer, String, String, String, String, String, Byte, String, String, Timestamp, Timestamp, String, Date> fieldsRow() {
        return (Row20) super.fieldsRow();
    }

    @Override
    public Row20<String, String, Byte, Byte, Byte, Byte, Byte, Integer, String, String, String, String, String, Byte, String, String, Timestamp, Timestamp, String, Date> valuesRow() {
        return (Row20) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Users.USERS.USERNAME;
    }

    @Override
    public Field<String> field2() {
        return Users.USERS.PASSWORD;
    }

    @Override
    public Field<Byte> field3() {
        return Users.USERS.ENABLED;
    }

    @Override
    public Field<Byte> field4() {
        return Users.USERS.ACCOUNT_NON_EXPIRED;
    }

    @Override
    public Field<Byte> field5() {
        return Users.USERS.CREDENTIALS_NON_EXPIRED;
    }

    @Override
    public Field<Byte> field6() {
        return Users.USERS.ACCOUNT_NON_LOCKED;
    }

    @Override
    public Field<Byte> field7() {
        return Users.USERS.AGREE_PROTOCOL;
    }

    @Override
    public Field<Integer> field8() {
        return Users.USERS.USERS_TYPE_ID;
    }

    @Override
    public Field<String> field9() {
        return Users.USERS.REAL_NAME;
    }

    @Override
    public Field<String> field10() {
        return Users.USERS.EMAIL;
    }

    @Override
    public Field<String> field11() {
        return Users.USERS.MOBILE;
    }

    @Override
    public Field<String> field12() {
        return Users.USERS.ID_CARD;
    }

    @Override
    public Field<String> field13() {
        return Users.USERS.AVATAR;
    }

    @Override
    public Field<Byte> field14() {
        return Users.USERS.VERIFY_MAILBOX;
    }

    @Override
    public Field<String> field15() {
        return Users.USERS.MAILBOX_VERIFY_CODE;
    }

    @Override
    public Field<String> field16() {
        return Users.USERS.PASSWORD_RESET_KEY;
    }

    @Override
    public Field<Timestamp> field17() {
        return Users.USERS.MAILBOX_VERIFY_VALID;
    }

    @Override
    public Field<Timestamp> field18() {
        return Users.USERS.PASSWORD_RESET_KEY_VALID;
    }

    @Override
    public Field<String> field19() {
        return Users.USERS.LANG_KEY;
    }

    @Override
    public Field<Date> field20() {
        return Users.USERS.JOIN_DATE;
    }

    @Override
    public String component1() {
        return getUsername();
    }

    @Override
    public String component2() {
        return getPassword();
    }

    @Override
    public Byte component3() {
        return getEnabled();
    }

    @Override
    public Byte component4() {
        return getAccountNonExpired();
    }

    @Override
    public Byte component5() {
        return getCredentialsNonExpired();
    }

    @Override
    public Byte component6() {
        return getAccountNonLocked();
    }

    @Override
    public Byte component7() {
        return getAgreeProtocol();
    }

    @Override
    public Integer component8() {
        return getUsersTypeId();
    }

    @Override
    public String component9() {
        return getRealName();
    }

    @Override
    public String component10() {
        return getEmail();
    }

    @Override
    public String component11() {
        return getMobile();
    }

    @Override
    public String component12() {
        return getIdCard();
    }

    @Override
    public String component13() {
        return getAvatar();
    }

    @Override
    public Byte component14() {
        return getVerifyMailbox();
    }

    @Override
    public String component15() {
        return getMailboxVerifyCode();
    }

    @Override
    public String component16() {
        return getPasswordResetKey();
    }

    @Override
    public Timestamp component17() {
        return getMailboxVerifyValid();
    }

    @Override
    public Timestamp component18() {
        return getPasswordResetKeyValid();
    }

    @Override
    public String component19() {
        return getLangKey();
    }

    @Override
    public Date component20() {
        return getJoinDate();
    }

    @Override
    public String value1() {
        return getUsername();
    }

    @Override
    public String value2() {
        return getPassword();
    }

    @Override
    public Byte value3() {
        return getEnabled();
    }

    @Override
    public Byte value4() {
        return getAccountNonExpired();
    }

    @Override
    public Byte value5() {
        return getCredentialsNonExpired();
    }

    @Override
    public Byte value6() {
        return getAccountNonLocked();
    }

    @Override
    public Byte value7() {
        return getAgreeProtocol();
    }

    @Override
    public Integer value8() {
        return getUsersTypeId();
    }

    @Override
    public String value9() {
        return getRealName();
    }

    @Override
    public String value10() {
        return getEmail();
    }

    @Override
    public String value11() {
        return getMobile();
    }

    @Override
    public String value12() {
        return getIdCard();
    }

    @Override
    public String value13() {
        return getAvatar();
    }

    @Override
    public Byte value14() {
        return getVerifyMailbox();
    }

    @Override
    public String value15() {
        return getMailboxVerifyCode();
    }

    @Override
    public String value16() {
        return getPasswordResetKey();
    }

    @Override
    public Timestamp value17() {
        return getMailboxVerifyValid();
    }

    @Override
    public Timestamp value18() {
        return getPasswordResetKeyValid();
    }

    @Override
    public String value19() {
        return getLangKey();
    }

    @Override
    public Date value20() {
        return getJoinDate();
    }

    @Override
    public UsersRecord value1(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public UsersRecord value2(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UsersRecord value3(Byte value) {
        setEnabled(value);
        return this;
    }

    @Override
    public UsersRecord value4(Byte value) {
        setAccountNonExpired(value);
        return this;
    }

    @Override
    public UsersRecord value5(Byte value) {
        setCredentialsNonExpired(value);
        return this;
    }

    @Override
    public UsersRecord value6(Byte value) {
        setAccountNonLocked(value);
        return this;
    }

    @Override
    public UsersRecord value7(Byte value) {
        setAgreeProtocol(value);
        return this;
    }

    @Override
    public UsersRecord value8(Integer value) {
        setUsersTypeId(value);
        return this;
    }

    @Override
    public UsersRecord value9(String value) {
        setRealName(value);
        return this;
    }

    @Override
    public UsersRecord value10(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UsersRecord value11(String value) {
        setMobile(value);
        return this;
    }

    @Override
    public UsersRecord value12(String value) {
        setIdCard(value);
        return this;
    }

    @Override
    public UsersRecord value13(String value) {
        setAvatar(value);
        return this;
    }

    @Override
    public UsersRecord value14(Byte value) {
        setVerifyMailbox(value);
        return this;
    }

    @Override
    public UsersRecord value15(String value) {
        setMailboxVerifyCode(value);
        return this;
    }

    @Override
    public UsersRecord value16(String value) {
        setPasswordResetKey(value);
        return this;
    }

    @Override
    public UsersRecord value17(Timestamp value) {
        setMailboxVerifyValid(value);
        return this;
    }

    @Override
    public UsersRecord value18(Timestamp value) {
        setPasswordResetKeyValid(value);
        return this;
    }

    @Override
    public UsersRecord value19(String value) {
        setLangKey(value);
        return this;
    }

    @Override
    public UsersRecord value20(Date value) {
        setJoinDate(value);
        return this;
    }

    @Override
    public UsersRecord values(String value1, String value2, Byte value3, Byte value4, Byte value5, Byte value6, Byte value7, Integer value8, String value9, String value10, String value11, String value12, String value13, Byte value14, String value15, String value16, Timestamp value17, Timestamp value18, String value19, Date value20) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(String username, String password, Byte enabled, Byte accountNonExpired, Byte credentialsNonExpired, Byte accountNonLocked, Byte agreeProtocol, Integer usersTypeId, String realName, String email, String mobile, String idCard, String avatar, Byte verifyMailbox, String mailboxVerifyCode, String passwordResetKey, Timestamp mailboxVerifyValid, Timestamp passwordResetKeyValid, String langKey, Date joinDate) {
        super(Users.USERS);

        set(0, username);
        set(1, password);
        set(2, enabled);
        set(3, accountNonExpired);
        set(4, credentialsNonExpired);
        set(5, accountNonLocked);
        set(6, agreeProtocol);
        set(7, usersTypeId);
        set(8, realName);
        set(9, email);
        set(10, mobile);
        set(11, idCard);
        set(12, avatar);
        set(13, verifyMailbox);
        set(14, mailboxVerifyCode);
        set(15, passwordResetKey);
        set(16, mailboxVerifyValid);
        set(17, passwordResetKeyValid);
        set(18, langKey);
        set(19, joinDate);
    }
}
