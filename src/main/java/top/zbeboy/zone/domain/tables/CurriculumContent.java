/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables;


import java.sql.Time;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import top.zbeboy.zone.domain.Indexes;
import top.zbeboy.zone.domain.Keys;
import top.zbeboy.zone.domain.Zhe;
import top.zbeboy.zone.domain.tables.records.CurriculumContentRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CurriculumContent extends TableImpl<CurriculumContentRecord> {

    private static final long serialVersionUID = -1671481334;

    /**
     * The reference instance of <code>zhe.curriculum_content</code>
     */
    public static final CurriculumContent CURRICULUM_CONTENT = new CurriculumContent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CurriculumContentRecord> getRecordType() {
        return CurriculumContentRecord.class;
    }

    /**
     * The column <code>zhe.curriculum_content.curriculum_release_id</code>.
     */
    public final TableField<CurriculumContentRecord, String> CURRICULUM_RELEASE_ID = createField("curriculum_release_id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zhe.curriculum_content.schoolroom_name</code>.
     */
    public final TableField<CurriculumContentRecord, String> SCHOOLROOM_NAME = createField("schoolroom_name", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>zhe.curriculum_content.course_name</code>.
     */
    public final TableField<CurriculumContentRecord, String> COURSE_NAME = createField("course_name", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>zhe.curriculum_content.week</code>.
     */
    public final TableField<CurriculumContentRecord, Byte> WEEK = createField("week", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>zhe.curriculum_content.start_week</code>.
     */
    public final TableField<CurriculumContentRecord, Byte> START_WEEK = createField("start_week", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>zhe.curriculum_content.end_week</code>.
     */
    public final TableField<CurriculumContentRecord, Byte> END_WEEK = createField("end_week", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>zhe.curriculum_content.start_time</code>.
     */
    public final TableField<CurriculumContentRecord, Time> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.TIME.nullable(false), this, "");

    /**
     * The column <code>zhe.curriculum_content.end_time</code>.
     */
    public final TableField<CurriculumContentRecord, Time> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.TIME.nullable(false), this, "");

    /**
     * The column <code>zhe.curriculum_content.staff_name</code>.
     */
    public final TableField<CurriculumContentRecord, String> STAFF_NAME = createField("staff_name", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>zhe.curriculum_content.hours</code>.
     */
    public final TableField<CurriculumContentRecord, Double> HOURS = createField("hours", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>zhe.curriculum_content.organize_name</code>.
     */
    public final TableField<CurriculumContentRecord, String> ORGANIZE_NAME = createField("organize_name", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>zhe.curriculum_content.batch_num</code>.
     */
    public final TableField<CurriculumContentRecord, Integer> BATCH_NUM = createField("batch_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>zhe.curriculum_content.create_time</code>.
     */
    public final TableField<CurriculumContentRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>zhe.curriculum_content.plan_username</code>.
     */
    public final TableField<CurriculumContentRecord, String> PLAN_USERNAME = createField("plan_username", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zhe.curriculum_content.plan_publisher</code>.
     */
    public final TableField<CurriculumContentRecord, String> PLAN_PUBLISHER = createField("plan_publisher", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * Create a <code>zhe.curriculum_content</code> table reference
     */
    public CurriculumContent() {
        this(DSL.name("curriculum_content"), null);
    }

    /**
     * Create an aliased <code>zhe.curriculum_content</code> table reference
     */
    public CurriculumContent(String alias) {
        this(DSL.name(alias), CURRICULUM_CONTENT);
    }

    /**
     * Create an aliased <code>zhe.curriculum_content</code> table reference
     */
    public CurriculumContent(Name alias) {
        this(alias, CURRICULUM_CONTENT);
    }

    private CurriculumContent(Name alias, Table<CurriculumContentRecord> aliased) {
        this(alias, aliased, null);
    }

    private CurriculumContent(Name alias, Table<CurriculumContentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> CurriculumContent(Table<O> child, ForeignKey<O, CurriculumContentRecord> key) {
        super(child, key, CURRICULUM_CONTENT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Zhe.ZHE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CURRICULUM_CONTENT_PLAN_USERNAME, Indexes.CURRICULUM_CONTENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CurriculumContentRecord> getPrimaryKey() {
        return Keys.KEY_CURRICULUM_CONTENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CurriculumContentRecord>> getKeys() {
        return Arrays.<UniqueKey<CurriculumContentRecord>>asList(Keys.KEY_CURRICULUM_CONTENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CurriculumContentRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CurriculumContentRecord, ?>>asList(Keys.CURRICULUM_CONTENT_IBFK_1, Keys.CURRICULUM_CONTENT_IBFK_2);
    }

    public CurriculumRelease curriculumRelease() {
        return new CurriculumRelease(this, Keys.CURRICULUM_CONTENT_IBFK_1);
    }

    public Users users() {
        return new Users(this, Keys.CURRICULUM_CONTENT_IBFK_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurriculumContent as(String alias) {
        return new CurriculumContent(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurriculumContent as(Name alias) {
        return new CurriculumContent(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CurriculumContent rename(String name) {
        return new CurriculumContent(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CurriculumContent rename(Name name) {
        return new CurriculumContent(name, null);
    }
}
