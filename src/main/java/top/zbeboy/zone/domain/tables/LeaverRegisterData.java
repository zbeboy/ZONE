/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import top.zbeboy.zone.domain.Indexes;
import top.zbeboy.zone.domain.Keys;
import top.zbeboy.zone.domain.Zone;
import top.zbeboy.zone.domain.tables.records.LeaverRegisterDataRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LeaverRegisterData extends TableImpl<LeaverRegisterDataRecord> {

    private static final long serialVersionUID = -1837053173;

    /**
     * The reference instance of <code>zone.leaver_register_data</code>
     */
    public static final LeaverRegisterData LEAVER_REGISTER_DATA = new LeaverRegisterData();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LeaverRegisterDataRecord> getRecordType() {
        return LeaverRegisterDataRecord.class;
    }

    /**
     * The column <code>zone.leaver_register_data.leaver_register_data_id</code>.
     */
    public final TableField<LeaverRegisterDataRecord, String> LEAVER_REGISTER_DATA_ID = createField(DSL.name("leaver_register_data_id"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.leaver_register_data.student_id</code>.
     */
    public final TableField<LeaverRegisterDataRecord, Integer> STUDENT_ID = createField(DSL.name("student_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>zone.leaver_register_data.leaver_register_release_id</code>.
     */
    public final TableField<LeaverRegisterDataRecord, String> LEAVER_REGISTER_RELEASE_ID = createField(DSL.name("leaver_register_release_id"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.leaver_register_data.leaver_address</code>.
     */
    public final TableField<LeaverRegisterDataRecord, String> LEAVER_ADDRESS = createField(DSL.name("leaver_address"), org.jooq.impl.SQLDataType.VARCHAR(300).nullable(false), this, "");

    /**
     * The column <code>zone.leaver_register_data.register_date</code>.
     */
    public final TableField<LeaverRegisterDataRecord, Timestamp> REGISTER_DATE = createField(DSL.name("register_date"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>zone.leaver_register_data.remark</code>.
     */
    public final TableField<LeaverRegisterDataRecord, String> REMARK = createField(DSL.name("remark"), org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * Create a <code>zone.leaver_register_data</code> table reference
     */
    public LeaverRegisterData() {
        this(DSL.name("leaver_register_data"), null);
    }

    /**
     * Create an aliased <code>zone.leaver_register_data</code> table reference
     */
    public LeaverRegisterData(String alias) {
        this(DSL.name(alias), LEAVER_REGISTER_DATA);
    }

    /**
     * Create an aliased <code>zone.leaver_register_data</code> table reference
     */
    public LeaverRegisterData(Name alias) {
        this(alias, LEAVER_REGISTER_DATA);
    }

    private LeaverRegisterData(Name alias, Table<LeaverRegisterDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private LeaverRegisterData(Name alias, Table<LeaverRegisterDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> LeaverRegisterData(Table<O> child, ForeignKey<O, LeaverRegisterDataRecord> key) {
        super(child, key, LEAVER_REGISTER_DATA);
    }

    @Override
    public Schema getSchema() {
        return Zone.ZONE;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LEAVER_REGISTER_DATA_LEAVER_REGISTER_RELEASE_ID, Indexes.LEAVER_REGISTER_DATA_PRIMARY, Indexes.LEAVER_REGISTER_DATA_STUDENT_ID);
    }

    @Override
    public UniqueKey<LeaverRegisterDataRecord> getPrimaryKey() {
        return Keys.KEY_LEAVER_REGISTER_DATA_PRIMARY;
    }

    @Override
    public List<UniqueKey<LeaverRegisterDataRecord>> getKeys() {
        return Arrays.<UniqueKey<LeaverRegisterDataRecord>>asList(Keys.KEY_LEAVER_REGISTER_DATA_PRIMARY);
    }

    @Override
    public List<ForeignKey<LeaverRegisterDataRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<LeaverRegisterDataRecord, ?>>asList(Keys.LEAVER_REGISTER_DATA_IBFK_2, Keys.LEAVER_REGISTER_DATA_IBFK_1);
    }

    public Student student() {
        return new Student(this, Keys.LEAVER_REGISTER_DATA_IBFK_2);
    }

    public LeaverRegisterRelease leaverRegisterRelease() {
        return new LeaverRegisterRelease(this, Keys.LEAVER_REGISTER_DATA_IBFK_1);
    }

    @Override
    public LeaverRegisterData as(String alias) {
        return new LeaverRegisterData(DSL.name(alias), this);
    }

    @Override
    public LeaverRegisterData as(Name alias) {
        return new LeaverRegisterData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LeaverRegisterData rename(String name) {
        return new LeaverRegisterData(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LeaverRegisterData rename(Name name) {
        return new LeaverRegisterData(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, Integer, String, String, Timestamp, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
