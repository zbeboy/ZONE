/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import top.zbeboy.zone.domain.tables.AnswerBank;
import top.zbeboy.zone.domain.tables.records.AnswerBankRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class AnswerBankDao extends DAOImpl<AnswerBankRecord, top.zbeboy.zone.domain.tables.pojos.AnswerBank, String> {

    /**
     * Create a new AnswerBankDao without any configuration
     */
    public AnswerBankDao() {
        super(AnswerBank.ANSWER_BANK, top.zbeboy.zone.domain.tables.pojos.AnswerBank.class);
    }

    /**
     * Create a new AnswerBankDao with an attached configuration
     */
    @Autowired
    public AnswerBankDao(Configuration configuration) {
        super(AnswerBank.ANSWER_BANK, top.zbeboy.zone.domain.tables.pojos.AnswerBank.class, configuration);
    }

    @Override
    public String getId(top.zbeboy.zone.domain.tables.pojos.AnswerBank object) {
        return object.getAnswerBankId();
    }

    /**
     * Fetch records that have <code>answer_bank_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.AnswerBank> fetchRangeOfAnswerBankId(String lowerInclusive, String upperInclusive) {
        return fetchRange(AnswerBank.ANSWER_BANK.ANSWER_BANK_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>answer_bank_id IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.AnswerBank> fetchByAnswerBankId(String... values) {
        return fetch(AnswerBank.ANSWER_BANK.ANSWER_BANK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>answer_bank_id = value</code>
     */
    public top.zbeboy.zone.domain.tables.pojos.AnswerBank fetchOneByAnswerBankId(String value) {
        return fetchOne(AnswerBank.ANSWER_BANK.ANSWER_BANK_ID, value);
    }

    /**
     * Fetch records that have <code>bank_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.AnswerBank> fetchRangeOfBankName(String lowerInclusive, String upperInclusive) {
        return fetchRange(AnswerBank.ANSWER_BANK.BANK_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>bank_name IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.AnswerBank> fetchByBankName(String... values) {
        return fetch(AnswerBank.ANSWER_BANK.BANK_NAME, values);
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.AnswerBank> fetchRangeOfUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(AnswerBank.ANSWER_BANK.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.AnswerBank> fetchByUsername(String... values) {
        return fetch(AnswerBank.ANSWER_BANK.USERNAME, values);
    }

    /**
     * Fetch records that have <code>create_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.AnswerBank> fetchRangeOfCreateDate(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(AnswerBank.ANSWER_BANK.CREATE_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_date IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.AnswerBank> fetchByCreateDate(Timestamp... values) {
        return fetch(AnswerBank.ANSWER_BANK.CREATE_DATE, values);
    }
}
