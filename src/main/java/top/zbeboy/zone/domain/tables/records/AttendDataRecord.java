/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import top.zbeboy.zone.domain.tables.AttendData;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AttendDataRecord extends UpdatableRecordImpl<AttendDataRecord> implements Record4<String, Integer, Timestamp, String> {

    private static final long serialVersionUID = -281742485;

    /**
     * Setter for <code>zone.attend_data.attend_users_id</code>.
     */
    public void setAttendUsersId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>zone.attend_data.attend_users_id</code>.
     */
    @NotNull
    @Size(max = 64)
    public String getAttendUsersId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>zone.attend_data.attend_release_sub_id</code>.
     */
    public void setAttendReleaseSubId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>zone.attend_data.attend_release_sub_id</code>.
     */
    @NotNull
    public Integer getAttendReleaseSubId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>zone.attend_data.create_date</code>.
     */
    public void setCreateDate(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>zone.attend_data.create_date</code>.
     */
    @NotNull
    public Timestamp getCreateDate() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>zone.attend_data.remark</code>.
     */
    public void setRemark(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>zone.attend_data.remark</code>.
     */
    @Size(max = 200)
    public String getRemark() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, Integer, Timestamp, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, Integer, Timestamp, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return AttendData.ATTEND_DATA.ATTEND_USERS_ID;
    }

    @Override
    public Field<Integer> field2() {
        return AttendData.ATTEND_DATA.ATTEND_RELEASE_SUB_ID;
    }

    @Override
    public Field<Timestamp> field3() {
        return AttendData.ATTEND_DATA.CREATE_DATE;
    }

    @Override
    public Field<String> field4() {
        return AttendData.ATTEND_DATA.REMARK;
    }

    @Override
    public String component1() {
        return getAttendUsersId();
    }

    @Override
    public Integer component2() {
        return getAttendReleaseSubId();
    }

    @Override
    public Timestamp component3() {
        return getCreateDate();
    }

    @Override
    public String component4() {
        return getRemark();
    }

    @Override
    public String value1() {
        return getAttendUsersId();
    }

    @Override
    public Integer value2() {
        return getAttendReleaseSubId();
    }

    @Override
    public Timestamp value3() {
        return getCreateDate();
    }

    @Override
    public String value4() {
        return getRemark();
    }

    @Override
    public AttendDataRecord value1(String value) {
        setAttendUsersId(value);
        return this;
    }

    @Override
    public AttendDataRecord value2(Integer value) {
        setAttendReleaseSubId(value);
        return this;
    }

    @Override
    public AttendDataRecord value3(Timestamp value) {
        setCreateDate(value);
        return this;
    }

    @Override
    public AttendDataRecord value4(String value) {
        setRemark(value);
        return this;
    }

    @Override
    public AttendDataRecord values(String value1, Integer value2, Timestamp value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AttendDataRecord
     */
    public AttendDataRecord() {
        super(AttendData.ATTEND_DATA);
    }

    /**
     * Create a detached, initialised AttendDataRecord
     */
    public AttendDataRecord(String attendUsersId, Integer attendReleaseSubId, Timestamp createDate, String remark) {
        super(AttendData.ATTEND_DATA);

        set(0, attendUsersId);
        set(1, attendReleaseSubId);
        set(2, createDate);
        set(3, remark);
    }
}
