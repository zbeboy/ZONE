/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables.records;


import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import top.zbeboy.zone.domain.tables.CollegeApplication;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.4"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class CollegeApplicationRecord extends UpdatableRecordImpl<CollegeApplicationRecord> implements Record2<String, Integer> {

    private static final long serialVersionUID = 185249591;

    /**
     * Setter for <code>zone.college_application.application_id</code>.
     */
    public void setApplicationId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>zone.college_application.application_id</code>.
     */
    @NotNull
    @Size(max = 64)
    public String getApplicationId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>zone.college_application.college_id</code>.
     */
    public void setCollegeId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>zone.college_application.college_id</code>.
     */
    @NotNull
    public Integer getCollegeId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return CollegeApplication.COLLEGE_APPLICATION.APPLICATION_ID;
    }

    @Override
    public Field<Integer> field2() {
        return CollegeApplication.COLLEGE_APPLICATION.COLLEGE_ID;
    }

    @Override
    public String component1() {
        return getApplicationId();
    }

    @Override
    public Integer component2() {
        return getCollegeId();
    }

    @Override
    public String value1() {
        return getApplicationId();
    }

    @Override
    public Integer value2() {
        return getCollegeId();
    }

    @Override
    public CollegeApplicationRecord value1(String value) {
        setApplicationId(value);
        return this;
    }

    @Override
    public CollegeApplicationRecord value2(Integer value) {
        setCollegeId(value);
        return this;
    }

    @Override
    public CollegeApplicationRecord values(String value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CollegeApplicationRecord
     */
    public CollegeApplicationRecord() {
        super(CollegeApplication.COLLEGE_APPLICATION);
    }

    /**
     * Create a detached, initialised CollegeApplicationRecord
     */
    public CollegeApplicationRecord(String applicationId, Integer collegeId) {
        super(CollegeApplication.COLLEGE_APPLICATION);

        set(0, applicationId);
        set(1, collegeId);
    }
}
