/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import top.zbeboy.zone.domain.tables.TrainingAuthorities;
import top.zbeboy.zone.domain.tables.records.TrainingAuthoritiesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class TrainingAuthoritiesDao extends DAOImpl<TrainingAuthoritiesRecord, top.zbeboy.zone.domain.tables.pojos.TrainingAuthorities, String> {

    /**
     * Create a new TrainingAuthoritiesDao without any configuration
     */
    public TrainingAuthoritiesDao() {
        super(TrainingAuthorities.TRAINING_AUTHORITIES, top.zbeboy.zone.domain.tables.pojos.TrainingAuthorities.class);
    }

    /**
     * Create a new TrainingAuthoritiesDao with an attached configuration
     */
    @Autowired
    public TrainingAuthoritiesDao(Configuration configuration) {
        super(TrainingAuthorities.TRAINING_AUTHORITIES, top.zbeboy.zone.domain.tables.pojos.TrainingAuthorities.class, configuration);
    }

    @Override
    public String getId(top.zbeboy.zone.domain.tables.pojos.TrainingAuthorities object) {
        return object.getAuthoritiesId();
    }

    /**
     * Fetch records that have <code>authorities_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingAuthorities> fetchRangeOfAuthoritiesId(String lowerInclusive, String upperInclusive) {
        return fetchRange(TrainingAuthorities.TRAINING_AUTHORITIES.AUTHORITIES_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>authorities_id IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingAuthorities> fetchByAuthoritiesId(String... values) {
        return fetch(TrainingAuthorities.TRAINING_AUTHORITIES.AUTHORITIES_ID, values);
    }

    /**
     * Fetch a unique record that has <code>authorities_id = value</code>
     */
    public top.zbeboy.zone.domain.tables.pojos.TrainingAuthorities fetchOneByAuthoritiesId(String value) {
        return fetchOne(TrainingAuthorities.TRAINING_AUTHORITIES.AUTHORITIES_ID, value);
    }

    /**
     * Fetch records that have <code>training_release_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingAuthorities> fetchRangeOfTrainingReleaseId(String lowerInclusive, String upperInclusive) {
        return fetchRange(TrainingAuthorities.TRAINING_AUTHORITIES.TRAINING_RELEASE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>training_release_id IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingAuthorities> fetchByTrainingReleaseId(String... values) {
        return fetch(TrainingAuthorities.TRAINING_AUTHORITIES.TRAINING_RELEASE_ID, values);
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingAuthorities> fetchRangeOfUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(TrainingAuthorities.TRAINING_AUTHORITIES.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingAuthorities> fetchByUsername(String... values) {
        return fetch(TrainingAuthorities.TRAINING_AUTHORITIES.USERNAME, values);
    }

    /**
     * Fetch records that have <code>valid_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingAuthorities> fetchRangeOfValidDate(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(TrainingAuthorities.TRAINING_AUTHORITIES.VALID_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>valid_date IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingAuthorities> fetchByValidDate(Timestamp... values) {
        return fetch(TrainingAuthorities.TRAINING_AUTHORITIES.VALID_DATE, values);
    }

    /**
     * Fetch records that have <code>expire_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingAuthorities> fetchRangeOfExpireDate(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(TrainingAuthorities.TRAINING_AUTHORITIES.EXPIRE_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>expire_date IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingAuthorities> fetchByExpireDate(Timestamp... values) {
        return fetch(TrainingAuthorities.TRAINING_AUTHORITIES.EXPIRE_DATE, values);
    }
}
