/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import top.zbeboy.zone.domain.Indexes;
import top.zbeboy.zone.domain.Keys;
import top.zbeboy.zone.domain.Zone;
import top.zbeboy.zone.domain.tables.records.InternshipInfoRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InternshipInfo extends TableImpl<InternshipInfoRecord> {

    private static final long serialVersionUID = -180596901;

    /**
     * The reference instance of <code>zone.internship_info</code>
     */
    public static final InternshipInfo INTERNSHIP_INFO = new InternshipInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InternshipInfoRecord> getRecordType() {
        return InternshipInfoRecord.class;
    }

    /**
     * The column <code>zone.internship_info.internship_info_id</code>.
     */
    public final TableField<InternshipInfoRecord, String> INTERNSHIP_INFO_ID = createField(DSL.name("internship_info_id"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.internship_info.student_id</code>.
     */
    public final TableField<InternshipInfoRecord, Integer> STUDENT_ID = createField(DSL.name("student_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>zone.internship_info.student_username</code>.
     */
    public final TableField<InternshipInfoRecord, String> STUDENT_USERNAME = createField(DSL.name("student_username"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.internship_info.internship_release_id</code>.
     */
    public final TableField<InternshipInfoRecord, String> INTERNSHIP_RELEASE_ID = createField(DSL.name("internship_release_id"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.internship_info.student_name</code>.
     */
    public final TableField<InternshipInfoRecord, String> STUDENT_NAME = createField(DSL.name("student_name"), org.jooq.impl.SQLDataType.VARCHAR(15).nullable(false), this, "");

    /**
     * The column <code>zone.internship_info.organize_name</code>.
     */
    public final TableField<InternshipInfoRecord, String> ORGANIZE_NAME = createField(DSL.name("organize_name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>zone.internship_info.student_sex</code>.
     */
    public final TableField<InternshipInfoRecord, String> STUDENT_SEX = createField(DSL.name("student_sex"), org.jooq.impl.SQLDataType.VARCHAR(24).nullable(false), this, "");

    /**
     * The column <code>zone.internship_info.student_number</code>.
     */
    public final TableField<InternshipInfoRecord, String> STUDENT_NUMBER = createField(DSL.name("student_number"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>zone.internship_info.mobile</code>.
     */
    public final TableField<InternshipInfoRecord, String> MOBILE = createField(DSL.name("mobile"), org.jooq.impl.SQLDataType.VARCHAR(15).nullable(false), this, "");

    /**
     * The column <code>zone.internship_info.qq_mailbox</code>.
     */
    public final TableField<InternshipInfoRecord, String> QQ_MAILBOX = createField(DSL.name("qq_mailbox"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>zone.internship_info.parent_contact_phone</code>.
     */
    public final TableField<InternshipInfoRecord, String> PARENT_CONTACT_PHONE = createField(DSL.name("parent_contact_phone"), org.jooq.impl.SQLDataType.VARCHAR(48).nullable(false), this, "");

    /**
     * The column <code>zone.internship_info.headmaster</code>.
     */
    public final TableField<InternshipInfoRecord, String> HEADMASTER = createField(DSL.name("headmaster"), org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>zone.internship_info.headmaster_tel</code>.
     */
    public final TableField<InternshipInfoRecord, String> HEADMASTER_TEL = createField(DSL.name("headmaster_tel"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>zone.internship_info.company_name</code>.
     */
    public final TableField<InternshipInfoRecord, String> COMPANY_NAME = createField(DSL.name("company_name"), org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>zone.internship_info.company_address</code>.
     */
    public final TableField<InternshipInfoRecord, String> COMPANY_ADDRESS = createField(DSL.name("company_address"), org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>zone.internship_info.company_contact</code>.
     */
    public final TableField<InternshipInfoRecord, String> COMPANY_CONTACT = createField(DSL.name("company_contact"), org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>zone.internship_info.company_mobile</code>.
     */
    public final TableField<InternshipInfoRecord, String> COMPANY_MOBILE = createField(DSL.name("company_mobile"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>zone.internship_info.school_guidance_teacher</code>.
     */
    public final TableField<InternshipInfoRecord, String> SCHOOL_GUIDANCE_TEACHER = createField(DSL.name("school_guidance_teacher"), org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>zone.internship_info.school_guidance_teacher_tel</code>.
     */
    public final TableField<InternshipInfoRecord, String> SCHOOL_GUIDANCE_TEACHER_TEL = createField(DSL.name("school_guidance_teacher_tel"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>zone.internship_info.start_time</code>.
     */
    public final TableField<InternshipInfoRecord, Date> START_TIME = createField(DSL.name("start_time"), org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>zone.internship_info.end_time</code>.
     */
    public final TableField<InternshipInfoRecord, Date> END_TIME = createField(DSL.name("end_time"), org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>zone.internship_info.commitment_book</code>.
     */
    public final TableField<InternshipInfoRecord, Byte> COMMITMENT_BOOK = createField(DSL.name("commitment_book"), org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>zone.internship_info.safety_responsibility_book</code>.
     */
    public final TableField<InternshipInfoRecord, Byte> SAFETY_RESPONSIBILITY_BOOK = createField(DSL.name("safety_responsibility_book"), org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>zone.internship_info.practice_agreement</code>.
     */
    public final TableField<InternshipInfoRecord, Byte> PRACTICE_AGREEMENT = createField(DSL.name("practice_agreement"), org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>zone.internship_info.internship_application</code>.
     */
    public final TableField<InternshipInfoRecord, Byte> INTERNSHIP_APPLICATION = createField(DSL.name("internship_application"), org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>zone.internship_info.practice_receiving</code>.
     */
    public final TableField<InternshipInfoRecord, Byte> PRACTICE_RECEIVING = createField(DSL.name("practice_receiving"), org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>zone.internship_info.security_education_agreement</code>.
     */
    public final TableField<InternshipInfoRecord, Byte> SECURITY_EDUCATION_AGREEMENT = createField(DSL.name("security_education_agreement"), org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>zone.internship_info.parental_consent</code>.
     */
    public final TableField<InternshipInfoRecord, Byte> PARENTAL_CONSENT = createField(DSL.name("parental_consent"), org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * Create a <code>zone.internship_info</code> table reference
     */
    public InternshipInfo() {
        this(DSL.name("internship_info"), null);
    }

    /**
     * Create an aliased <code>zone.internship_info</code> table reference
     */
    public InternshipInfo(String alias) {
        this(DSL.name(alias), INTERNSHIP_INFO);
    }

    /**
     * Create an aliased <code>zone.internship_info</code> table reference
     */
    public InternshipInfo(Name alias) {
        this(alias, INTERNSHIP_INFO);
    }

    private InternshipInfo(Name alias, Table<InternshipInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private InternshipInfo(Name alias, Table<InternshipInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> InternshipInfo(Table<O> child, ForeignKey<O, InternshipInfoRecord> key) {
        super(child, key, INTERNSHIP_INFO);
    }

    @Override
    public Schema getSchema() {
        return Zone.ZONE;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.INTERNSHIP_INFO_INTERNSHIP_RELEASE_ID, Indexes.INTERNSHIP_INFO_PRIMARY, Indexes.INTERNSHIP_INFO_STUDENT_ID, Indexes.INTERNSHIP_INFO_STUDENT_USERNAME);
    }

    @Override
    public UniqueKey<InternshipInfoRecord> getPrimaryKey() {
        return Keys.KEY_INTERNSHIP_INFO_PRIMARY;
    }

    @Override
    public List<UniqueKey<InternshipInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<InternshipInfoRecord>>asList(Keys.KEY_INTERNSHIP_INFO_PRIMARY, Keys.KEY_INTERNSHIP_INFO_STUDENT_ID);
    }

    @Override
    public List<ForeignKey<InternshipInfoRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<InternshipInfoRecord, ?>>asList(Keys.INTERNSHIP_INFO_IBFK_1, Keys.INTERNSHIP_INFO_IBFK_2, Keys.INTERNSHIP_INFO_IBFK_3);
    }

    public Student student() {
        return new Student(this, Keys.INTERNSHIP_INFO_IBFK_1);
    }

    public Users users() {
        return new Users(this, Keys.INTERNSHIP_INFO_IBFK_2);
    }

    public InternshipRelease internshipRelease() {
        return new InternshipRelease(this, Keys.INTERNSHIP_INFO_IBFK_3);
    }

    @Override
    public InternshipInfo as(String alias) {
        return new InternshipInfo(DSL.name(alias), this);
    }

    @Override
    public InternshipInfo as(Name alias) {
        return new InternshipInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InternshipInfo rename(String name) {
        return new InternshipInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InternshipInfo rename(Name name) {
        return new InternshipInfo(name, null);
    }
}
