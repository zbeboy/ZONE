/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables.daos;


import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import top.zbeboy.zone.domain.tables.RoleApply;
import top.zbeboy.zone.domain.tables.records.RoleApplyRecord;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.4"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Repository
public class RoleApplyDao extends DAOImpl<RoleApplyRecord, top.zbeboy.zone.domain.tables.pojos.RoleApply, String> {

    /**
     * Create a new RoleApplyDao without any configuration
     */
    public RoleApplyDao() {
        super(RoleApply.ROLE_APPLY, top.zbeboy.zone.domain.tables.pojos.RoleApply.class);
    }

    /**
     * Create a new RoleApplyDao with an attached configuration
     */
    @Autowired
    public RoleApplyDao(Configuration configuration) {
        super(RoleApply.ROLE_APPLY, top.zbeboy.zone.domain.tables.pojos.RoleApply.class, configuration);
    }

    @Override
    public String getId(top.zbeboy.zone.domain.tables.pojos.RoleApply object) {
        return object.getRoleApplyId();
    }

    /**
     * Fetch records that have <code>role_apply_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchRangeOfRoleApplyId(String lowerInclusive, String upperInclusive) {
        return fetchRange(RoleApply.ROLE_APPLY.ROLE_APPLY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role_apply_id IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchByRoleApplyId(String... values) {
        return fetch(RoleApply.ROLE_APPLY.ROLE_APPLY_ID, values);
    }

    /**
     * Fetch a unique record that has <code>role_apply_id = value</code>
     */
    public top.zbeboy.zone.domain.tables.pojos.RoleApply fetchOneByRoleApplyId(String value) {
        return fetchOne(RoleApply.ROLE_APPLY.ROLE_APPLY_ID, value);
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchRangeOfUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(RoleApply.ROLE_APPLY.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchByUsername(String... values) {
        return fetch(RoleApply.ROLE_APPLY.USERNAME, values);
    }

    /**
     * Fetch records that have <code>authorize_type_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchRangeOfAuthorizeTypeId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(RoleApply.ROLE_APPLY.AUTHORIZE_TYPE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>authorize_type_id IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchByAuthorizeTypeId(Integer... values) {
        return fetch(RoleApply.ROLE_APPLY.AUTHORIZE_TYPE_ID, values);
    }

    /**
     * Fetch records that have <code>data_scope BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchRangeOfDataScope(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(RoleApply.ROLE_APPLY.DATA_SCOPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>data_scope IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchByDataScope(Integer... values) {
        return fetch(RoleApply.ROLE_APPLY.DATA_SCOPE, values);
    }

    /**
     * Fetch records that have <code>data_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchRangeOfDataId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(RoleApply.ROLE_APPLY.DATA_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>data_id IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchByDataId(Integer... values) {
        return fetch(RoleApply.ROLE_APPLY.DATA_ID, values);
    }

    /**
     * Fetch records that have <code>role_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchRangeOfRoleId(String lowerInclusive, String upperInclusive) {
        return fetchRange(RoleApply.ROLE_APPLY.ROLE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role_id IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchByRoleId(String... values) {
        return fetch(RoleApply.ROLE_APPLY.ROLE_ID, values);
    }

    /**
     * Fetch records that have <code>duration BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchRangeOfDuration(String lowerInclusive, String upperInclusive) {
        return fetchRange(RoleApply.ROLE_APPLY.DURATION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>duration IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchByDuration(String... values) {
        return fetch(RoleApply.ROLE_APPLY.DURATION, values);
    }

    /**
     * Fetch records that have <code>reason BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchRangeOfReason(String lowerInclusive, String upperInclusive) {
        return fetchRange(RoleApply.ROLE_APPLY.REASON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>reason IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchByReason(String... values) {
        return fetch(RoleApply.ROLE_APPLY.REASON, values);
    }

    /**
     * Fetch records that have <code>refuse BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchRangeOfRefuse(String lowerInclusive, String upperInclusive) {
        return fetchRange(RoleApply.ROLE_APPLY.REFUSE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>refuse IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchByRefuse(String... values) {
        return fetch(RoleApply.ROLE_APPLY.REFUSE, values);
    }

    /**
     * Fetch records that have <code>valid_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchRangeOfValidDate(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(RoleApply.ROLE_APPLY.VALID_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>valid_date IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchByValidDate(Timestamp... values) {
        return fetch(RoleApply.ROLE_APPLY.VALID_DATE, values);
    }

    /**
     * Fetch records that have <code>expire_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchRangeOfExpireDate(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(RoleApply.ROLE_APPLY.EXPIRE_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>expire_date IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchByExpireDate(Timestamp... values) {
        return fetch(RoleApply.ROLE_APPLY.EXPIRE_DATE, values);
    }

    /**
     * Fetch records that have <code>create_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchRangeOfCreateDate(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(RoleApply.ROLE_APPLY.CREATE_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_date IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchByCreateDate(Timestamp... values) {
        return fetch(RoleApply.ROLE_APPLY.CREATE_DATE, values);
    }

    /**
     * Fetch records that have <code>apply_status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchRangeOfApplyStatus(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(RoleApply.ROLE_APPLY.APPLY_STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>apply_status IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.RoleApply> fetchByApplyStatus(Byte... values) {
        return fetch(RoleApply.ROLE_APPLY.APPLY_STATUS, values);
    }
}
