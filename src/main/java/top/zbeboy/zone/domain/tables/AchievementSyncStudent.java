/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import top.zbeboy.zone.domain.Indexes;
import top.zbeboy.zone.domain.Keys;
import top.zbeboy.zone.domain.Zhe;
import top.zbeboy.zone.domain.tables.records.AchievementSyncStudentRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AchievementSyncStudent extends TableImpl<AchievementSyncStudentRecord> {

    private static final long serialVersionUID = 1150186526;

    /**
     * The reference instance of <code>zhe.achievement_sync_student</code>
     */
    public static final AchievementSyncStudent ACHIEVEMENT_SYNC_STUDENT = new AchievementSyncStudent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AchievementSyncStudentRecord> getRecordType() {
        return AchievementSyncStudentRecord.class;
    }

    /**
     * The column <code>zhe.achievement_sync_student.student_number</code>.
     */
    public final TableField<AchievementSyncStudentRecord, String> STUDENT_NUMBER = createField("student_number", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>zhe.achievement_sync_student.real_name</code>.
     */
    public final TableField<AchievementSyncStudentRecord, String> REAL_NAME = createField("real_name", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>zhe.achievement_sync_student.sex</code>.
     */
    public final TableField<AchievementSyncStudentRecord, String> SEX = createField("sex", org.jooq.impl.SQLDataType.VARCHAR(5), this, "");

    /**
     * The column <code>zhe.achievement_sync_student.science_name</code>.
     */
    public final TableField<AchievementSyncStudentRecord, String> SCIENCE_NAME = createField("science_name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>zhe.achievement_sync_student.organize_name</code>.
     */
    public final TableField<AchievementSyncStudentRecord, String> ORGANIZE_NAME = createField("organize_name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>zhe.achievement_sync_student.grade</code>.
     */
    public final TableField<AchievementSyncStudentRecord, String> GRADE = createField("grade", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>zhe.achievement_sync_student.is_pe_student</code>.
     */
    public final TableField<AchievementSyncStudentRecord, String> IS_PE_STUDENT = createField("is_pe_student", org.jooq.impl.SQLDataType.VARCHAR(5), this, "");

    /**
     * The column <code>zhe.achievement_sync_student.student_status</code>.
     */
    public final TableField<AchievementSyncStudentRecord, String> STUDENT_STATUS = createField("student_status", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>zhe.achievement_sync_student.alien_type</code>.
     */
    public final TableField<AchievementSyncStudentRecord, String> ALIEN_TYPE = createField("alien_type", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * Create a <code>zhe.achievement_sync_student</code> table reference
     */
    public AchievementSyncStudent() {
        this(DSL.name("achievement_sync_student"), null);
    }

    /**
     * Create an aliased <code>zhe.achievement_sync_student</code> table reference
     */
    public AchievementSyncStudent(String alias) {
        this(DSL.name(alias), ACHIEVEMENT_SYNC_STUDENT);
    }

    /**
     * Create an aliased <code>zhe.achievement_sync_student</code> table reference
     */
    public AchievementSyncStudent(Name alias) {
        this(alias, ACHIEVEMENT_SYNC_STUDENT);
    }

    private AchievementSyncStudent(Name alias, Table<AchievementSyncStudentRecord> aliased) {
        this(alias, aliased, null);
    }

    private AchievementSyncStudent(Name alias, Table<AchievementSyncStudentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> AchievementSyncStudent(Table<O> child, ForeignKey<O, AchievementSyncStudentRecord> key) {
        super(child, key, ACHIEVEMENT_SYNC_STUDENT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Zhe.ZHE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ACHIEVEMENT_SYNC_STUDENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AchievementSyncStudentRecord> getPrimaryKey() {
        return Keys.KEY_ACHIEVEMENT_SYNC_STUDENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AchievementSyncStudentRecord>> getKeys() {
        return Arrays.<UniqueKey<AchievementSyncStudentRecord>>asList(Keys.KEY_ACHIEVEMENT_SYNC_STUDENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AchievementSyncStudent as(String alias) {
        return new AchievementSyncStudent(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AchievementSyncStudent as(Name alias) {
        return new AchievementSyncStudent(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AchievementSyncStudent rename(String name) {
        return new AchievementSyncStudent(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AchievementSyncStudent rename(Name name) {
        return new AchievementSyncStudent(name, null);
    }
}
