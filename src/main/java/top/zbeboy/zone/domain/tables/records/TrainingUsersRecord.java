/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables.records;


import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import top.zbeboy.zone.domain.tables.TrainingUsers;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TrainingUsersRecord extends UpdatableRecordImpl<TrainingUsersRecord> implements Record3<String, String, Integer> {

    private static final long serialVersionUID = -143400143;

    /**
     * Setter for <code>zone.training_users.training_users_id</code>.
     */
    public void setTrainingUsersId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>zone.training_users.training_users_id</code>.
     */
    @NotNull
    @Size(max = 64)
    public String getTrainingUsersId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>zone.training_users.training_release_id</code>.
     */
    public void setTrainingReleaseId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>zone.training_users.training_release_id</code>.
     */
    @NotNull
    @Size(max = 64)
    public String getTrainingReleaseId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>zone.training_users.student_id</code>.
     */
    public void setStudentId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>zone.training_users.student_id</code>.
     */
    @NotNull
    public Integer getStudentId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return TrainingUsers.TRAINING_USERS.TRAINING_USERS_ID;
    }

    @Override
    public Field<String> field2() {
        return TrainingUsers.TRAINING_USERS.TRAINING_RELEASE_ID;
    }

    @Override
    public Field<Integer> field3() {
        return TrainingUsers.TRAINING_USERS.STUDENT_ID;
    }

    @Override
    public String component1() {
        return getTrainingUsersId();
    }

    @Override
    public String component2() {
        return getTrainingReleaseId();
    }

    @Override
    public Integer component3() {
        return getStudentId();
    }

    @Override
    public String value1() {
        return getTrainingUsersId();
    }

    @Override
    public String value2() {
        return getTrainingReleaseId();
    }

    @Override
    public Integer value3() {
        return getStudentId();
    }

    @Override
    public TrainingUsersRecord value1(String value) {
        setTrainingUsersId(value);
        return this;
    }

    @Override
    public TrainingUsersRecord value2(String value) {
        setTrainingReleaseId(value);
        return this;
    }

    @Override
    public TrainingUsersRecord value3(Integer value) {
        setStudentId(value);
        return this;
    }

    @Override
    public TrainingUsersRecord values(String value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TrainingUsersRecord
     */
    public TrainingUsersRecord() {
        super(TrainingUsers.TRAINING_USERS);
    }

    /**
     * Create a detached, initialised TrainingUsersRecord
     */
    public TrainingUsersRecord(String trainingUsersId, String trainingReleaseId, Integer studentId) {
        super(TrainingUsers.TRAINING_USERS);

        set(0, trainingUsersId);
        set(1, trainingReleaseId);
        set(2, studentId);
    }
}
