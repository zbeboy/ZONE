/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables.daos;


import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import top.zbeboy.zone.domain.tables.Users;
import top.zbeboy.zone.domain.tables.records.UsersRecord;

import javax.annotation.Generated;
import java.sql.Date;
import java.sql.Timestamp;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.4"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Repository
public class UsersDao extends DAOImpl<UsersRecord, top.zbeboy.zone.domain.tables.pojos.Users, String> {

    /**
     * Create a new UsersDao without any configuration
     */
    public UsersDao() {
        super(Users.USERS, top.zbeboy.zone.domain.tables.pojos.Users.class);
    }

    /**
     * Create a new UsersDao with an attached configuration
     */
    @Autowired
    public UsersDao(Configuration configuration) {
        super(Users.USERS, top.zbeboy.zone.domain.tables.pojos.Users.class, configuration);
    }

    @Override
    public String getId(top.zbeboy.zone.domain.tables.pojos.Users object) {
        return object.getUsername();
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchRangeOfUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchByUsername(String... values) {
        return fetch(Users.USERS.USERNAME, values);
    }

    /**
     * Fetch a unique record that has <code>username = value</code>
     */
    public top.zbeboy.zone.domain.tables.pojos.Users fetchOneByUsername(String value) {
        return fetchOne(Users.USERS.USERNAME, value);
    }

    /**
     * Fetch records that have <code>password BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchRangeOfPassword(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchByPassword(String... values) {
        return fetch(Users.USERS.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>enabled BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchRangeOfEnabled(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(Users.USERS.ENABLED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>enabled IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchByEnabled(Byte... values) {
        return fetch(Users.USERS.ENABLED, values);
    }

    /**
     * Fetch records that have <code>account_non_expired BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchRangeOfAccountNonExpired(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(Users.USERS.ACCOUNT_NON_EXPIRED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>account_non_expired IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchByAccountNonExpired(Byte... values) {
        return fetch(Users.USERS.ACCOUNT_NON_EXPIRED, values);
    }

    /**
     * Fetch records that have <code>credentials_non_expired BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchRangeOfCredentialsNonExpired(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(Users.USERS.CREDENTIALS_NON_EXPIRED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>credentials_non_expired IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchByCredentialsNonExpired(Byte... values) {
        return fetch(Users.USERS.CREDENTIALS_NON_EXPIRED, values);
    }

    /**
     * Fetch records that have <code>account_non_locked BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchRangeOfAccountNonLocked(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(Users.USERS.ACCOUNT_NON_LOCKED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>account_non_locked IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchByAccountNonLocked(Byte... values) {
        return fetch(Users.USERS.ACCOUNT_NON_LOCKED, values);
    }

    /**
     * Fetch records that have <code>agree_protocol BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchRangeOfAgreeProtocol(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(Users.USERS.AGREE_PROTOCOL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>agree_protocol IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchByAgreeProtocol(Byte... values) {
        return fetch(Users.USERS.AGREE_PROTOCOL, values);
    }

    /**
     * Fetch records that have <code>users_type_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchRangeOfUsersTypeId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Users.USERS.USERS_TYPE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>users_type_id IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchByUsersTypeId(Integer... values) {
        return fetch(Users.USERS.USERS_TYPE_ID, values);
    }

    /**
     * Fetch records that have <code>real_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchRangeOfRealName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.REAL_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>real_name IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchByRealName(String... values) {
        return fetch(Users.USERS.REAL_NAME, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchByEmail(String... values) {
        return fetch(Users.USERS.EMAIL, values);
    }

    /**
     * Fetch a unique record that has <code>email = value</code>
     */
    public top.zbeboy.zone.domain.tables.pojos.Users fetchOneByEmail(String value) {
        return fetchOne(Users.USERS.EMAIL, value);
    }

    /**
     * Fetch records that have <code>mobile BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchRangeOfMobile(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.MOBILE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mobile IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchByMobile(String... values) {
        return fetch(Users.USERS.MOBILE, values);
    }

    /**
     * Fetch a unique record that has <code>mobile = value</code>
     */
    public top.zbeboy.zone.domain.tables.pojos.Users fetchOneByMobile(String value) {
        return fetchOne(Users.USERS.MOBILE, value);
    }

    /**
     * Fetch records that have <code>id_card BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchRangeOfIdCard(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.ID_CARD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id_card IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchByIdCard(String... values) {
        return fetch(Users.USERS.ID_CARD, values);
    }

    /**
     * Fetch records that have <code>avatar BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchRangeOfAvatar(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.AVATAR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>avatar IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchByAvatar(String... values) {
        return fetch(Users.USERS.AVATAR, values);
    }

    /**
     * Fetch records that have <code>verify_mailbox BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchRangeOfVerifyMailbox(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(Users.USERS.VERIFY_MAILBOX, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>verify_mailbox IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchByVerifyMailbox(Byte... values) {
        return fetch(Users.USERS.VERIFY_MAILBOX, values);
    }

    /**
     * Fetch records that have <code>mailbox_verify_code BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchRangeOfMailboxVerifyCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.MAILBOX_VERIFY_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mailbox_verify_code IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchByMailboxVerifyCode(String... values) {
        return fetch(Users.USERS.MAILBOX_VERIFY_CODE, values);
    }

    /**
     * Fetch records that have <code>password_reset_key BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchRangeOfPasswordResetKey(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.PASSWORD_RESET_KEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password_reset_key IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchByPasswordResetKey(String... values) {
        return fetch(Users.USERS.PASSWORD_RESET_KEY, values);
    }

    /**
     * Fetch records that have <code>mailbox_verify_valid BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchRangeOfMailboxVerifyValid(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(Users.USERS.MAILBOX_VERIFY_VALID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mailbox_verify_valid IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchByMailboxVerifyValid(Timestamp... values) {
        return fetch(Users.USERS.MAILBOX_VERIFY_VALID, values);
    }

    /**
     * Fetch records that have <code>password_reset_key_valid BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchRangeOfPasswordResetKeyValid(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(Users.USERS.PASSWORD_RESET_KEY_VALID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password_reset_key_valid IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchByPasswordResetKeyValid(Timestamp... values) {
        return fetch(Users.USERS.PASSWORD_RESET_KEY_VALID, values);
    }

    /**
     * Fetch records that have <code>lang_key BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchRangeOfLangKey(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.LANG_KEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lang_key IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchByLangKey(String... values) {
        return fetch(Users.USERS.LANG_KEY, values);
    }

    /**
     * Fetch records that have <code>join_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchRangeOfJoinDate(Date lowerInclusive, Date upperInclusive) {
        return fetchRange(Users.USERS.JOIN_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>join_date IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Users> fetchByJoinDate(Date... values) {
        return fetch(Users.USERS.JOIN_DATE, values);
    }
}
