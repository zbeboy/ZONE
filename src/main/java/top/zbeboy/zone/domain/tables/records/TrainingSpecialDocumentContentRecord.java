/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables.records;


import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;

import top.zbeboy.zone.domain.tables.TrainingSpecialDocumentContent;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TrainingSpecialDocumentContentRecord extends TableRecordImpl<TrainingSpecialDocumentContentRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 1358777154;

    /**
     * Setter for <code>zone.training_special_document_content.training_special_document_id</code>.
     */
    public void setTrainingSpecialDocumentId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>zone.training_special_document_content.training_special_document_id</code>.
     */
    @NotNull
    @Size(max = 64)
    public String getTrainingSpecialDocumentId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>zone.training_special_document_content.content</code>.
     */
    public void setContent(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>zone.training_special_document_content.content</code>.
     */
    @NotNull
    public String getContent() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return TrainingSpecialDocumentContent.TRAINING_SPECIAL_DOCUMENT_CONTENT.TRAINING_SPECIAL_DOCUMENT_ID;
    }

    @Override
    public Field<String> field2() {
        return TrainingSpecialDocumentContent.TRAINING_SPECIAL_DOCUMENT_CONTENT.CONTENT;
    }

    @Override
    public String component1() {
        return getTrainingSpecialDocumentId();
    }

    @Override
    public String component2() {
        return getContent();
    }

    @Override
    public String value1() {
        return getTrainingSpecialDocumentId();
    }

    @Override
    public String value2() {
        return getContent();
    }

    @Override
    public TrainingSpecialDocumentContentRecord value1(String value) {
        setTrainingSpecialDocumentId(value);
        return this;
    }

    @Override
    public TrainingSpecialDocumentContentRecord value2(String value) {
        setContent(value);
        return this;
    }

    @Override
    public TrainingSpecialDocumentContentRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TrainingSpecialDocumentContentRecord
     */
    public TrainingSpecialDocumentContentRecord() {
        super(TrainingSpecialDocumentContent.TRAINING_SPECIAL_DOCUMENT_CONTENT);
    }

    /**
     * Create a detached, initialised TrainingSpecialDocumentContentRecord
     */
    public TrainingSpecialDocumentContentRecord(String trainingSpecialDocumentId, String content) {
        super(TrainingSpecialDocumentContent.TRAINING_SPECIAL_DOCUMENT_CONTENT);

        set(0, trainingSpecialDocumentId);
        set(1, content);
    }
}
