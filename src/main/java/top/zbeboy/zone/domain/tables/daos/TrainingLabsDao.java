/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import top.zbeboy.zone.domain.tables.TrainingLabs;
import top.zbeboy.zone.domain.tables.records.TrainingLabsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class TrainingLabsDao extends DAOImpl<TrainingLabsRecord, top.zbeboy.zone.domain.tables.pojos.TrainingLabs, String> {

    /**
     * Create a new TrainingLabsDao without any configuration
     */
    public TrainingLabsDao() {
        super(TrainingLabs.TRAINING_LABS, top.zbeboy.zone.domain.tables.pojos.TrainingLabs.class);
    }

    /**
     * Create a new TrainingLabsDao with an attached configuration
     */
    @Autowired
    public TrainingLabsDao(Configuration configuration) {
        super(TrainingLabs.TRAINING_LABS, top.zbeboy.zone.domain.tables.pojos.TrainingLabs.class, configuration);
    }

    @Override
    public String getId(top.zbeboy.zone.domain.tables.pojos.TrainingLabs object) {
        return object.getTrainingLabsId();
    }

    /**
     * Fetch records that have <code>training_labs_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingLabs> fetchRangeOfTrainingLabsId(String lowerInclusive, String upperInclusive) {
        return fetchRange(TrainingLabs.TRAINING_LABS.TRAINING_LABS_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>training_labs_id IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingLabs> fetchByTrainingLabsId(String... values) {
        return fetch(TrainingLabs.TRAINING_LABS.TRAINING_LABS_ID, values);
    }

    /**
     * Fetch a unique record that has <code>training_labs_id = value</code>
     */
    public top.zbeboy.zone.domain.tables.pojos.TrainingLabs fetchOneByTrainingLabsId(String value) {
        return fetchOne(TrainingLabs.TRAINING_LABS.TRAINING_LABS_ID, value);
    }

    /**
     * Fetch records that have <code>student_number BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingLabs> fetchRangeOfStudentNumber(String lowerInclusive, String upperInclusive) {
        return fetchRange(TrainingLabs.TRAINING_LABS.STUDENT_NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>student_number IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingLabs> fetchByStudentNumber(String... values) {
        return fetch(TrainingLabs.TRAINING_LABS.STUDENT_NUMBER, values);
    }

    /**
     * Fetch a unique record that has <code>student_number = value</code>
     */
    public top.zbeboy.zone.domain.tables.pojos.TrainingLabs fetchOneByStudentNumber(String value) {
        return fetchOne(TrainingLabs.TRAINING_LABS.STUDENT_NUMBER, value);
    }

    /**
     * Fetch records that have <code>real_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingLabs> fetchRangeOfRealName(String lowerInclusive, String upperInclusive) {
        return fetchRange(TrainingLabs.TRAINING_LABS.REAL_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>real_name IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingLabs> fetchByRealName(String... values) {
        return fetch(TrainingLabs.TRAINING_LABS.REAL_NAME, values);
    }

    /**
     * Fetch records that have <code>age BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingLabs> fetchRangeOfAge(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TrainingLabs.TRAINING_LABS.AGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>age IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingLabs> fetchByAge(Integer... values) {
        return fetch(TrainingLabs.TRAINING_LABS.AGE, values);
    }

    /**
     * Fetch records that have <code>sex BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingLabs> fetchRangeOfSex(String lowerInclusive, String upperInclusive) {
        return fetchRange(TrainingLabs.TRAINING_LABS.SEX, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sex IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingLabs> fetchBySex(String... values) {
        return fetch(TrainingLabs.TRAINING_LABS.SEX, values);
    }

    /**
     * Fetch records that have <code>organize BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingLabs> fetchRangeOfOrganize(String lowerInclusive, String upperInclusive) {
        return fetchRange(TrainingLabs.TRAINING_LABS.ORGANIZE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>organize IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingLabs> fetchByOrganize(String... values) {
        return fetch(TrainingLabs.TRAINING_LABS.ORGANIZE, values);
    }

    /**
     * Fetch records that have <code>photo BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingLabs> fetchRangeOfPhoto(String lowerInclusive, String upperInclusive) {
        return fetchRange(TrainingLabs.TRAINING_LABS.PHOTO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>photo IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingLabs> fetchByPhoto(String... values) {
        return fetch(TrainingLabs.TRAINING_LABS.PHOTO, values);
    }

    /**
     * Fetch records that have <code>profession BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingLabs> fetchRangeOfProfession(String lowerInclusive, String upperInclusive) {
        return fetchRange(TrainingLabs.TRAINING_LABS.PROFESSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>profession IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingLabs> fetchByProfession(String... values) {
        return fetch(TrainingLabs.TRAINING_LABS.PROFESSION, values);
    }

    /**
     * Fetch records that have <code>company BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingLabs> fetchRangeOfCompany(String lowerInclusive, String upperInclusive) {
        return fetchRange(TrainingLabs.TRAINING_LABS.COMPANY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>company IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingLabs> fetchByCompany(String... values) {
        return fetch(TrainingLabs.TRAINING_LABS.COMPANY, values);
    }

    /**
     * Fetch records that have <code>achievement BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingLabs> fetchRangeOfAchievement(String lowerInclusive, String upperInclusive) {
        return fetchRange(TrainingLabs.TRAINING_LABS.ACHIEVEMENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>achievement IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingLabs> fetchByAchievement(String... values) {
        return fetch(TrainingLabs.TRAINING_LABS.ACHIEVEMENT, values);
    }

    /**
     * Fetch records that have <code>password BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingLabs> fetchRangeOfPassword(String lowerInclusive, String upperInclusive) {
        return fetchRange(TrainingLabs.TRAINING_LABS.PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingLabs> fetchByPassword(String... values) {
        return fetch(TrainingLabs.TRAINING_LABS.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>create_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingLabs> fetchRangeOfCreateDate(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(TrainingLabs.TRAINING_LABS.CREATE_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_date IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.TrainingLabs> fetchByCreateDate(Timestamp... values) {
        return fetch(TrainingLabs.TRAINING_LABS.CREATE_DATE, values);
    }
}
