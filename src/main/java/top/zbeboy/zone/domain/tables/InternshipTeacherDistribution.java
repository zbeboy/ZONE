/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import top.zbeboy.zone.domain.Indexes;
import top.zbeboy.zone.domain.Keys;
import top.zbeboy.zone.domain.Zone;
import top.zbeboy.zone.domain.tables.records.InternshipTeacherDistributionRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InternshipTeacherDistribution extends TableImpl<InternshipTeacherDistributionRecord> {

    private static final long serialVersionUID = 449313621;

    /**
     * The reference instance of <code>zone.internship_teacher_distribution</code>
     */
    public static final InternshipTeacherDistribution INTERNSHIP_TEACHER_DISTRIBUTION = new InternshipTeacherDistribution();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InternshipTeacherDistributionRecord> getRecordType() {
        return InternshipTeacherDistributionRecord.class;
    }

    /**
     * The column <code>zone.internship_teacher_distribution.staff_id</code>.
     */
    public final TableField<InternshipTeacherDistributionRecord, Integer> STAFF_ID = createField(DSL.name("staff_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>zone.internship_teacher_distribution.student_id</code>.
     */
    public final TableField<InternshipTeacherDistributionRecord, Integer> STUDENT_ID = createField(DSL.name("student_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>zone.internship_teacher_distribution.internship_release_id</code>.
     */
    public final TableField<InternshipTeacherDistributionRecord, String> INTERNSHIP_RELEASE_ID = createField(DSL.name("internship_release_id"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.internship_teacher_distribution.username</code>.
     */
    public final TableField<InternshipTeacherDistributionRecord, String> USERNAME = createField(DSL.name("username"), org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>zone.internship_teacher_distribution.student_real_name</code>.
     */
    public final TableField<InternshipTeacherDistributionRecord, String> STUDENT_REAL_NAME = createField(DSL.name("student_real_name"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>zone.internship_teacher_distribution.assigner</code>.
     */
    public final TableField<InternshipTeacherDistributionRecord, String> ASSIGNER = createField(DSL.name("assigner"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * Create a <code>zone.internship_teacher_distribution</code> table reference
     */
    public InternshipTeacherDistribution() {
        this(DSL.name("internship_teacher_distribution"), null);
    }

    /**
     * Create an aliased <code>zone.internship_teacher_distribution</code> table reference
     */
    public InternshipTeacherDistribution(String alias) {
        this(DSL.name(alias), INTERNSHIP_TEACHER_DISTRIBUTION);
    }

    /**
     * Create an aliased <code>zone.internship_teacher_distribution</code> table reference
     */
    public InternshipTeacherDistribution(Name alias) {
        this(alias, INTERNSHIP_TEACHER_DISTRIBUTION);
    }

    private InternshipTeacherDistribution(Name alias, Table<InternshipTeacherDistributionRecord> aliased) {
        this(alias, aliased, null);
    }

    private InternshipTeacherDistribution(Name alias, Table<InternshipTeacherDistributionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> InternshipTeacherDistribution(Table<O> child, ForeignKey<O, InternshipTeacherDistributionRecord> key) {
        super(child, key, INTERNSHIP_TEACHER_DISTRIBUTION);
    }

    @Override
    public Schema getSchema() {
        return Zone.ZONE;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.INTERNSHIP_TEACHER_DISTRIBUTION_INTERNSHIP_RELEASE_ID, Indexes.INTERNSHIP_TEACHER_DISTRIBUTION_PRIMARY, Indexes.INTERNSHIP_TEACHER_DISTRIBUTION_STUDENT_ID, Indexes.INTERNSHIP_TEACHER_DISTRIBUTION_USERNAME);
    }

    @Override
    public UniqueKey<InternshipTeacherDistributionRecord> getPrimaryKey() {
        return Keys.KEY_INTERNSHIP_TEACHER_DISTRIBUTION_PRIMARY;
    }

    @Override
    public List<UniqueKey<InternshipTeacherDistributionRecord>> getKeys() {
        return Arrays.<UniqueKey<InternshipTeacherDistributionRecord>>asList(Keys.KEY_INTERNSHIP_TEACHER_DISTRIBUTION_PRIMARY);
    }

    @Override
    public List<ForeignKey<InternshipTeacherDistributionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<InternshipTeacherDistributionRecord, ?>>asList(Keys.INTERNSHIP_TEACHER_DISTRIBUTION_IBFK_1, Keys.INTERNSHIP_TEACHER_DISTRIBUTION_IBFK_2, Keys.INTERNSHIP_TEACHER_DISTRIBUTION_IBFK_3, Keys.INTERNSHIP_TEACHER_DISTRIBUTION_IBFK_4);
    }

    public Staff staff() {
        return new Staff(this, Keys.INTERNSHIP_TEACHER_DISTRIBUTION_IBFK_1);
    }

    public Student student() {
        return new Student(this, Keys.INTERNSHIP_TEACHER_DISTRIBUTION_IBFK_2);
    }

    public InternshipRelease internshipRelease() {
        return new InternshipRelease(this, Keys.INTERNSHIP_TEACHER_DISTRIBUTION_IBFK_3);
    }

    public Users users() {
        return new Users(this, Keys.INTERNSHIP_TEACHER_DISTRIBUTION_IBFK_4);
    }

    @Override
    public InternshipTeacherDistribution as(String alias) {
        return new InternshipTeacherDistribution(DSL.name(alias), this);
    }

    @Override
    public InternshipTeacherDistribution as(Name alias) {
        return new InternshipTeacherDistribution(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InternshipTeacherDistribution rename(String name) {
        return new InternshipTeacherDistribution(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InternshipTeacherDistribution rename(Name name) {
        return new InternshipTeacherDistribution(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Integer, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
