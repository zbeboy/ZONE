/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import top.zbeboy.zone.domain.Indexes;
import top.zbeboy.zone.domain.Keys;
import top.zbeboy.zone.domain.Zone;
import top.zbeboy.zone.domain.tables.records.InternshipJournalContentRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InternshipJournalContent extends TableImpl<InternshipJournalContentRecord> {

    private static final long serialVersionUID = 95792800;

    /**
     * The reference instance of <code>zone.internship_journal_content</code>
     */
    public static final InternshipJournalContent INTERNSHIP_JOURNAL_CONTENT = new InternshipJournalContent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InternshipJournalContentRecord> getRecordType() {
        return InternshipJournalContentRecord.class;
    }

    /**
     * The column <code>zone.internship_journal_content.internship_journal_id</code>.
     */
    public final TableField<InternshipJournalContentRecord, String> INTERNSHIP_JOURNAL_ID = createField(DSL.name("internship_journal_id"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>zone.internship_journal_content.internship_journal_content</code>.
     */
    public final TableField<InternshipJournalContentRecord, String> INTERNSHIP_JOURNAL_CONTENT_ = createField(DSL.name("internship_journal_content"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>zone.internship_journal_content.internship_journal_html</code>.
     */
    public final TableField<InternshipJournalContentRecord, String> INTERNSHIP_JOURNAL_HTML = createField(DSL.name("internship_journal_html"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>zone.internship_journal_content.internship_journal_date</code>.
     */
    public final TableField<InternshipJournalContentRecord, Date> INTERNSHIP_JOURNAL_DATE = createField(DSL.name("internship_journal_date"), org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * Create a <code>zone.internship_journal_content</code> table reference
     */
    public InternshipJournalContent() {
        this(DSL.name("internship_journal_content"), null);
    }

    /**
     * Create an aliased <code>zone.internship_journal_content</code> table reference
     */
    public InternshipJournalContent(String alias) {
        this(DSL.name(alias), INTERNSHIP_JOURNAL_CONTENT);
    }

    /**
     * Create an aliased <code>zone.internship_journal_content</code> table reference
     */
    public InternshipJournalContent(Name alias) {
        this(alias, INTERNSHIP_JOURNAL_CONTENT);
    }

    private InternshipJournalContent(Name alias, Table<InternshipJournalContentRecord> aliased) {
        this(alias, aliased, null);
    }

    private InternshipJournalContent(Name alias, Table<InternshipJournalContentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> InternshipJournalContent(Table<O> child, ForeignKey<O, InternshipJournalContentRecord> key) {
        super(child, key, INTERNSHIP_JOURNAL_CONTENT);
    }

    @Override
    public Schema getSchema() {
        return Zone.ZONE;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.INTERNSHIP_JOURNAL_CONTENT_INTERNSHIP_JOURNAL_ID);
    }

    @Override
    public List<UniqueKey<InternshipJournalContentRecord>> getKeys() {
        return Arrays.<UniqueKey<InternshipJournalContentRecord>>asList(Keys.KEY_INTERNSHIP_JOURNAL_CONTENT_INTERNSHIP_JOURNAL_ID);
    }

    @Override
    public List<ForeignKey<InternshipJournalContentRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<InternshipJournalContentRecord, ?>>asList(Keys.INTERNSHIP_JOURNAL_CONTENT_IBFK_1);
    }

    public InternshipJournal internshipJournal() {
        return new InternshipJournal(this, Keys.INTERNSHIP_JOURNAL_CONTENT_IBFK_1);
    }

    @Override
    public InternshipJournalContent as(String alias) {
        return new InternshipJournalContent(DSL.name(alias), this);
    }

    @Override
    public InternshipJournalContent as(Name alias) {
        return new InternshipJournalContent(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InternshipJournalContent rename(String name) {
        return new InternshipJournalContent(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InternshipJournalContent rename(Name name) {
        return new InternshipJournalContent(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, Date> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
