/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import top.zbeboy.zone.domain.Indexes;
import top.zbeboy.zone.domain.Keys;
import top.zbeboy.zone.domain.Zone;
import top.zbeboy.zone.domain.tables.records.TrainingDocumentFileRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TrainingDocumentFile extends TableImpl<TrainingDocumentFileRecord> {

    private static final long serialVersionUID = -375942382;

    /**
     * The reference instance of <code>zone.training_document_file</code>
     */
    public static final TrainingDocumentFile TRAINING_DOCUMENT_FILE = new TrainingDocumentFile();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TrainingDocumentFileRecord> getRecordType() {
        return TrainingDocumentFileRecord.class;
    }

    /**
     * The column <code>zone.training_document_file.training_document_id</code>.
     */
    public final TableField<TrainingDocumentFileRecord, String> TRAINING_DOCUMENT_ID = createField(DSL.name("training_document_id"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.training_document_file.course_id</code>.
     */
    public final TableField<TrainingDocumentFileRecord, Integer> COURSE_ID = createField(DSL.name("course_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>zone.training_document_file.file_id</code>.
     */
    public final TableField<TrainingDocumentFileRecord, String> FILE_ID = createField(DSL.name("file_id"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.training_document_file.username</code>.
     */
    public final TableField<TrainingDocumentFileRecord, String> USERNAME = createField(DSL.name("username"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.training_document_file.uploader</code>.
     */
    public final TableField<TrainingDocumentFileRecord, String> UPLOADER = createField(DSL.name("uploader"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>zone.training_document_file.create_date</code>.
     */
    public final TableField<TrainingDocumentFileRecord, Timestamp> CREATE_DATE = createField(DSL.name("create_date"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>zone.training_document_file.downloads</code>.
     */
    public final TableField<TrainingDocumentFileRecord, Integer> DOWNLOADS = createField(DSL.name("downloads"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>zone.training_document_file</code> table reference
     */
    public TrainingDocumentFile() {
        this(DSL.name("training_document_file"), null);
    }

    /**
     * Create an aliased <code>zone.training_document_file</code> table reference
     */
    public TrainingDocumentFile(String alias) {
        this(DSL.name(alias), TRAINING_DOCUMENT_FILE);
    }

    /**
     * Create an aliased <code>zone.training_document_file</code> table reference
     */
    public TrainingDocumentFile(Name alias) {
        this(alias, TRAINING_DOCUMENT_FILE);
    }

    private TrainingDocumentFile(Name alias, Table<TrainingDocumentFileRecord> aliased) {
        this(alias, aliased, null);
    }

    private TrainingDocumentFile(Name alias, Table<TrainingDocumentFileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TrainingDocumentFile(Table<O> child, ForeignKey<O, TrainingDocumentFileRecord> key) {
        super(child, key, TRAINING_DOCUMENT_FILE);
    }

    @Override
    public Schema getSchema() {
        return Zone.ZONE;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TRAINING_DOCUMENT_FILE_COURSE_ID, Indexes.TRAINING_DOCUMENT_FILE_FILE_ID, Indexes.TRAINING_DOCUMENT_FILE_TRAINING_DOCUMENT_ID, Indexes.TRAINING_DOCUMENT_FILE_USERNAME);
    }

    @Override
    public List<ForeignKey<TrainingDocumentFileRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TrainingDocumentFileRecord, ?>>asList(Keys.TRAINING_DOCUMENT_FILE_IBFK_1, Keys.TRAINING_DOCUMENT_FILE_IBFK_2, Keys.TRAINING_DOCUMENT_FILE_IBFK_3, Keys.TRAINING_DOCUMENT_FILE_IBFK_4);
    }

    public TrainingDocument trainingDocument() {
        return new TrainingDocument(this, Keys.TRAINING_DOCUMENT_FILE_IBFK_1);
    }

    public Course course() {
        return new Course(this, Keys.TRAINING_DOCUMENT_FILE_IBFK_2);
    }

    public Files files() {
        return new Files(this, Keys.TRAINING_DOCUMENT_FILE_IBFK_3);
    }

    public Users users() {
        return new Users(this, Keys.TRAINING_DOCUMENT_FILE_IBFK_4);
    }

    @Override
    public TrainingDocumentFile as(String alias) {
        return new TrainingDocumentFile(DSL.name(alias), this);
    }

    @Override
    public TrainingDocumentFile as(Name alias) {
        return new TrainingDocumentFile(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TrainingDocumentFile rename(String name) {
        return new TrainingDocumentFile(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TrainingDocumentFile rename(Name name) {
        return new TrainingDocumentFile(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, Integer, String, String, String, Timestamp, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
