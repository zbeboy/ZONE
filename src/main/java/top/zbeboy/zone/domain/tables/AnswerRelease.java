/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import top.zbeboy.zone.domain.Indexes;
import top.zbeboy.zone.domain.Keys;
import top.zbeboy.zone.domain.Zone;
import top.zbeboy.zone.domain.tables.records.AnswerReleaseRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnswerRelease extends TableImpl<AnswerReleaseRecord> {

    private static final long serialVersionUID = -853017213;

    /**
     * The reference instance of <code>zone.answer_release</code>
     */
    public static final AnswerRelease ANSWER_RELEASE = new AnswerRelease();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AnswerReleaseRecord> getRecordType() {
        return AnswerReleaseRecord.class;
    }

    /**
     * The column <code>zone.answer_release.answer_release_id</code>.
     */
    public final TableField<AnswerReleaseRecord, String> ANSWER_RELEASE_ID = createField(DSL.name("answer_release_id"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.answer_release.title</code>.
     */
    public final TableField<AnswerReleaseRecord, String> TITLE = createField(DSL.name("title"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>zone.answer_release.start_time</code>.
     */
    public final TableField<AnswerReleaseRecord, Timestamp> START_TIME = createField(DSL.name("start_time"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>zone.answer_release.end_time</code>.
     */
    public final TableField<AnswerReleaseRecord, Timestamp> END_TIME = createField(DSL.name("end_time"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>zone.answer_release.answer_bank_id</code>.
     */
    public final TableField<AnswerReleaseRecord, String> ANSWER_BANK_ID = createField(DSL.name("answer_bank_id"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.answer_release.username</code>.
     */
    public final TableField<AnswerReleaseRecord, String> USERNAME = createField(DSL.name("username"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.answer_release.release_time</code>.
     */
    public final TableField<AnswerReleaseRecord, Timestamp> RELEASE_TIME = createField(DSL.name("release_time"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>zone.answer_release</code> table reference
     */
    public AnswerRelease() {
        this(DSL.name("answer_release"), null);
    }

    /**
     * Create an aliased <code>zone.answer_release</code> table reference
     */
    public AnswerRelease(String alias) {
        this(DSL.name(alias), ANSWER_RELEASE);
    }

    /**
     * Create an aliased <code>zone.answer_release</code> table reference
     */
    public AnswerRelease(Name alias) {
        this(alias, ANSWER_RELEASE);
    }

    private AnswerRelease(Name alias, Table<AnswerReleaseRecord> aliased) {
        this(alias, aliased, null);
    }

    private AnswerRelease(Name alias, Table<AnswerReleaseRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> AnswerRelease(Table<O> child, ForeignKey<O, AnswerReleaseRecord> key) {
        super(child, key, ANSWER_RELEASE);
    }

    @Override
    public Schema getSchema() {
        return Zone.ZONE;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ANSWER_RELEASE_ANSWER_BANK_ID, Indexes.ANSWER_RELEASE_PRIMARY, Indexes.ANSWER_RELEASE_USERNAME);
    }

    @Override
    public UniqueKey<AnswerReleaseRecord> getPrimaryKey() {
        return Keys.KEY_ANSWER_RELEASE_PRIMARY;
    }

    @Override
    public List<UniqueKey<AnswerReleaseRecord>> getKeys() {
        return Arrays.<UniqueKey<AnswerReleaseRecord>>asList(Keys.KEY_ANSWER_RELEASE_PRIMARY);
    }

    @Override
    public List<ForeignKey<AnswerReleaseRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AnswerReleaseRecord, ?>>asList(Keys.ANSWER_RELEASE_IBFK_1, Keys.ANSWER_RELEASE_IBFK_2);
    }

    public AnswerBank answerBank() {
        return new AnswerBank(this, Keys.ANSWER_RELEASE_IBFK_1);
    }

    public Users users() {
        return new Users(this, Keys.ANSWER_RELEASE_IBFK_2);
    }

    @Override
    public AnswerRelease as(String alias) {
        return new AnswerRelease(DSL.name(alias), this);
    }

    @Override
    public AnswerRelease as(Name alias) {
        return new AnswerRelease(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AnswerRelease rename(String name) {
        return new AnswerRelease(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AnswerRelease rename(Name name) {
        return new AnswerRelease(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, Timestamp, Timestamp, String, String, Timestamp> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
