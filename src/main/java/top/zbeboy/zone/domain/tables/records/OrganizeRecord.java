/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables.records;


import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import top.zbeboy.zone.domain.tables.Organize;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrganizeRecord extends UpdatableRecordImpl<OrganizeRecord> implements Record5<Integer, String, Byte, Integer, Integer> {

    private static final long serialVersionUID = 239056955;

    /**
     * Setter for <code>zone.organize.organize_id</code>.
     */
    public void setOrganizeId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>zone.organize.organize_id</code>.
     */
    public Integer getOrganizeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>zone.organize.organize_name</code>.
     */
    public void setOrganizeName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>zone.organize.organize_name</code>.
     */
    @NotNull
    @Size(max = 200)
    public String getOrganizeName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>zone.organize.organize_is_del</code>.
     */
    public void setOrganizeIsDel(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>zone.organize.organize_is_del</code>.
     */
    public Byte getOrganizeIsDel() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>zone.organize.grade_id</code>.
     */
    public void setGradeId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>zone.organize.grade_id</code>.
     */
    @NotNull
    public Integer getGradeId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>zone.organize.staff_id</code>.
     */
    public void setStaffId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>zone.organize.staff_id</code>.
     */
    public Integer getStaffId() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Byte, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Byte, Integer, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Organize.ORGANIZE.ORGANIZE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Organize.ORGANIZE.ORGANIZE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field3() {
        return Organize.ORGANIZE.ORGANIZE_IS_DEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Organize.ORGANIZE.GRADE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Organize.ORGANIZE.STAFF_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getOrganizeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getOrganizeName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component3() {
        return getOrganizeIsDel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getGradeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getStaffId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getOrganizeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getOrganizeName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value3() {
        return getOrganizeIsDel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getGradeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getStaffId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrganizeRecord value1(Integer value) {
        setOrganizeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrganizeRecord value2(String value) {
        setOrganizeName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrganizeRecord value3(Byte value) {
        setOrganizeIsDel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrganizeRecord value4(Integer value) {
        setGradeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrganizeRecord value5(Integer value) {
        setStaffId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrganizeRecord values(Integer value1, String value2, Byte value3, Integer value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrganizeRecord
     */
    public OrganizeRecord() {
        super(Organize.ORGANIZE);
    }

    /**
     * Create a detached, initialised OrganizeRecord
     */
    public OrganizeRecord(Integer organizeId, String organizeName, Byte organizeIsDel, Integer gradeId, Integer staffId) {
        super(Organize.ORGANIZE);

        set(0, organizeId);
        set(1, organizeName);
        set(2, organizeIsDel);
        set(3, gradeId);
        set(4, staffId);
    }
}
