/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import top.zbeboy.zone.domain.Indexes;
import top.zbeboy.zone.domain.Keys;
import top.zbeboy.zone.domain.Zone;
import top.zbeboy.zone.domain.tables.records.AnswerOptionRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnswerOption extends TableImpl<AnswerOptionRecord> {

    private static final long serialVersionUID = 630215390;

    /**
     * The reference instance of <code>zone.answer_option</code>
     */
    public static final AnswerOption ANSWER_OPTION = new AnswerOption();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AnswerOptionRecord> getRecordType() {
        return AnswerOptionRecord.class;
    }

    /**
     * The column <code>zone.answer_option.answer_option_id</code>.
     */
    public final TableField<AnswerOptionRecord, String> ANSWER_OPTION_ID = createField("answer_option_id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.answer_option.option_content</code>.
     */
    public final TableField<AnswerOptionRecord, String> OPTION_CONTENT = createField("option_content", org.jooq.impl.SQLDataType.VARCHAR(300).nullable(false), this, "");

    /**
     * The column <code>zone.answer_option.sort</code>.
     */
    public final TableField<AnswerOptionRecord, Byte> SORT = createField("sort", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>zone.answer_option.option_key</code>.
     */
    public final TableField<AnswerOptionRecord, String> OPTION_KEY = createField("option_key", org.jooq.impl.SQLDataType.VARCHAR(5).nullable(false), this, "");

    /**
     * The column <code>zone.answer_option.answer_subject_id</code>.
     */
    public final TableField<AnswerOptionRecord, String> ANSWER_SUBJECT_ID = createField("answer_subject_id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * Create a <code>zone.answer_option</code> table reference
     */
    public AnswerOption() {
        this(DSL.name("answer_option"), null);
    }

    /**
     * Create an aliased <code>zone.answer_option</code> table reference
     */
    public AnswerOption(String alias) {
        this(DSL.name(alias), ANSWER_OPTION);
    }

    /**
     * Create an aliased <code>zone.answer_option</code> table reference
     */
    public AnswerOption(Name alias) {
        this(alias, ANSWER_OPTION);
    }

    private AnswerOption(Name alias, Table<AnswerOptionRecord> aliased) {
        this(alias, aliased, null);
    }

    private AnswerOption(Name alias, Table<AnswerOptionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> AnswerOption(Table<O> child, ForeignKey<O, AnswerOptionRecord> key) {
        super(child, key, ANSWER_OPTION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Zone.ZONE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ANSWER_OPTION_ANSWER_SUBJECT_ID, Indexes.ANSWER_OPTION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AnswerOptionRecord> getPrimaryKey() {
        return Keys.KEY_ANSWER_OPTION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AnswerOptionRecord>> getKeys() {
        return Arrays.<UniqueKey<AnswerOptionRecord>>asList(Keys.KEY_ANSWER_OPTION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AnswerOptionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AnswerOptionRecord, ?>>asList(Keys.ANSWER_OPTION_IBFK_1);
    }

    public AnswerSubject answerSubject() {
        return new AnswerSubject(this, Keys.ANSWER_OPTION_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnswerOption as(String alias) {
        return new AnswerOption(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnswerOption as(Name alias) {
        return new AnswerOption(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AnswerOption rename(String name) {
        return new AnswerOption(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AnswerOption rename(Name name) {
        return new AnswerOption(name, null);
    }
}
