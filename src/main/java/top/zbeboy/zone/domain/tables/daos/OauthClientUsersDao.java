/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import top.zbeboy.zone.domain.tables.OauthClientUsers;
import top.zbeboy.zone.domain.tables.records.OauthClientUsersRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class OauthClientUsersDao extends DAOImpl<OauthClientUsersRecord, top.zbeboy.zone.domain.tables.pojos.OauthClientUsers, Record2<String, String>> {

    /**
     * Create a new OauthClientUsersDao without any configuration
     */
    public OauthClientUsersDao() {
        super(OauthClientUsers.OAUTH_CLIENT_USERS, top.zbeboy.zone.domain.tables.pojos.OauthClientUsers.class);
    }

    /**
     * Create a new OauthClientUsersDao with an attached configuration
     */
    @Autowired
    public OauthClientUsersDao(Configuration configuration) {
        super(OauthClientUsers.OAUTH_CLIENT_USERS, top.zbeboy.zone.domain.tables.pojos.OauthClientUsers.class, configuration);
    }

    @Override
    public Record2<String, String> getId(top.zbeboy.zone.domain.tables.pojos.OauthClientUsers object) {
        return compositeKeyRecord(object.getClientId(), object.getUsername());
    }

    /**
     * Fetch records that have <code>client_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.OauthClientUsers> fetchRangeOfClientId(String lowerInclusive, String upperInclusive) {
        return fetchRange(OauthClientUsers.OAUTH_CLIENT_USERS.CLIENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>client_id IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.OauthClientUsers> fetchByClientId(String... values) {
        return fetch(OauthClientUsers.OAUTH_CLIENT_USERS.CLIENT_ID, values);
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.OauthClientUsers> fetchRangeOfUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(OauthClientUsers.OAUTH_CLIENT_USERS.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.OauthClientUsers> fetchByUsername(String... values) {
        return fetch(OauthClientUsers.OAUTH_CLIENT_USERS.USERNAME, values);
    }

    /**
     * Fetch records that have <code>app_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.OauthClientUsers> fetchRangeOfAppName(String lowerInclusive, String upperInclusive) {
        return fetchRange(OauthClientUsers.OAUTH_CLIENT_USERS.APP_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>app_name IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.OauthClientUsers> fetchByAppName(String... values) {
        return fetch(OauthClientUsers.OAUTH_CLIENT_USERS.APP_NAME, values);
    }

    /**
     * Fetch records that have <code>secret BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.OauthClientUsers> fetchRangeOfSecret(String lowerInclusive, String upperInclusive) {
        return fetchRange(OauthClientUsers.OAUTH_CLIENT_USERS.SECRET, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>secret IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.OauthClientUsers> fetchBySecret(String... values) {
        return fetch(OauthClientUsers.OAUTH_CLIENT_USERS.SECRET, values);
    }

    /**
     * Fetch records that have <code>remark BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.OauthClientUsers> fetchRangeOfRemark(String lowerInclusive, String upperInclusive) {
        return fetchRange(OauthClientUsers.OAUTH_CLIENT_USERS.REMARK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>remark IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.OauthClientUsers> fetchByRemark(String... values) {
        return fetch(OauthClientUsers.OAUTH_CLIENT_USERS.REMARK, values);
    }

    /**
     * Fetch records that have <code>create_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.OauthClientUsers> fetchRangeOfCreateDate(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(OauthClientUsers.OAUTH_CLIENT_USERS.CREATE_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_date IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.OauthClientUsers> fetchByCreateDate(Timestamp... values) {
        return fetch(OauthClientUsers.OAUTH_CLIENT_USERS.CREATE_DATE, values);
    }
}
