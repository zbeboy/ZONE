/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import top.zbeboy.zone.domain.Indexes;
import top.zbeboy.zone.domain.Keys;
import top.zbeboy.zone.domain.Zone;
import top.zbeboy.zone.domain.tables.records.InternshipChangeHistoryRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InternshipChangeHistory extends TableImpl<InternshipChangeHistoryRecord> {

    private static final long serialVersionUID = 1829902392;

    /**
     * The reference instance of <code>zone.internship_change_history</code>
     */
    public static final InternshipChangeHistory INTERNSHIP_CHANGE_HISTORY = new InternshipChangeHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InternshipChangeHistoryRecord> getRecordType() {
        return InternshipChangeHistoryRecord.class;
    }

    /**
     * The column <code>zone.internship_change_history.internship_change_history_id</code>.
     */
    public final TableField<InternshipChangeHistoryRecord, String> INTERNSHIP_CHANGE_HISTORY_ID = createField(DSL.name("internship_change_history_id"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.internship_change_history.reason</code>.
     */
    public final TableField<InternshipChangeHistoryRecord, String> REASON = createField(DSL.name("reason"), org.jooq.impl.SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>zone.internship_change_history.change_fill_start_time</code>.
     */
    public final TableField<InternshipChangeHistoryRecord, Timestamp> CHANGE_FILL_START_TIME = createField(DSL.name("change_fill_start_time"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>zone.internship_change_history.change_fill_end_time</code>.
     */
    public final TableField<InternshipChangeHistoryRecord, Timestamp> CHANGE_FILL_END_TIME = createField(DSL.name("change_fill_end_time"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>zone.internship_change_history.student_id</code>.
     */
    public final TableField<InternshipChangeHistoryRecord, Integer> STUDENT_ID = createField(DSL.name("student_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>zone.internship_change_history.internship_release_id</code>.
     */
    public final TableField<InternshipChangeHistoryRecord, String> INTERNSHIP_RELEASE_ID = createField(DSL.name("internship_release_id"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.internship_change_history.apply_time</code>.
     */
    public final TableField<InternshipChangeHistoryRecord, Timestamp> APPLY_TIME = createField(DSL.name("apply_time"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>zone.internship_change_history.state</code>.
     */
    public final TableField<InternshipChangeHistoryRecord, Integer> STATE = createField(DSL.name("state"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>zone.internship_change_history</code> table reference
     */
    public InternshipChangeHistory() {
        this(DSL.name("internship_change_history"), null);
    }

    /**
     * Create an aliased <code>zone.internship_change_history</code> table reference
     */
    public InternshipChangeHistory(String alias) {
        this(DSL.name(alias), INTERNSHIP_CHANGE_HISTORY);
    }

    /**
     * Create an aliased <code>zone.internship_change_history</code> table reference
     */
    public InternshipChangeHistory(Name alias) {
        this(alias, INTERNSHIP_CHANGE_HISTORY);
    }

    private InternshipChangeHistory(Name alias, Table<InternshipChangeHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private InternshipChangeHistory(Name alias, Table<InternshipChangeHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> InternshipChangeHistory(Table<O> child, ForeignKey<O, InternshipChangeHistoryRecord> key) {
        super(child, key, INTERNSHIP_CHANGE_HISTORY);
    }

    @Override
    public Schema getSchema() {
        return Zone.ZONE;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.INTERNSHIP_CHANGE_HISTORY_INTERNSHIP_RELEASE_ID, Indexes.INTERNSHIP_CHANGE_HISTORY_PRIMARY, Indexes.INTERNSHIP_CHANGE_HISTORY_STUDENT_ID);
    }

    @Override
    public UniqueKey<InternshipChangeHistoryRecord> getPrimaryKey() {
        return Keys.KEY_INTERNSHIP_CHANGE_HISTORY_PRIMARY;
    }

    @Override
    public List<UniqueKey<InternshipChangeHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<InternshipChangeHistoryRecord>>asList(Keys.KEY_INTERNSHIP_CHANGE_HISTORY_PRIMARY);
    }

    @Override
    public List<ForeignKey<InternshipChangeHistoryRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<InternshipChangeHistoryRecord, ?>>asList(Keys.INTERNSHIP_CHANGE_HISTORY_IBFK_1, Keys.INTERNSHIP_CHANGE_HISTORY_IBFK_2);
    }

    public Student student() {
        return new Student(this, Keys.INTERNSHIP_CHANGE_HISTORY_IBFK_1);
    }

    public InternshipRelease internshipRelease() {
        return new InternshipRelease(this, Keys.INTERNSHIP_CHANGE_HISTORY_IBFK_2);
    }

    @Override
    public InternshipChangeHistory as(String alias) {
        return new InternshipChangeHistory(DSL.name(alias), this);
    }

    @Override
    public InternshipChangeHistory as(Name alias) {
        return new InternshipChangeHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InternshipChangeHistory rename(String name) {
        return new InternshipChangeHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InternshipChangeHistory rename(Name name) {
        return new InternshipChangeHistory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<String, String, Timestamp, Timestamp, Integer, String, Timestamp, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
