/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import top.zbeboy.zone.domain.Indexes;
import top.zbeboy.zone.domain.Keys;
import top.zbeboy.zone.domain.Zhe;
import top.zbeboy.zone.domain.tables.records.TrainingAttendUsersRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TrainingAttendUsers extends TableImpl<TrainingAttendUsersRecord> {

    private static final long serialVersionUID = -1193666300;

    /**
     * The reference instance of <code>zhe.training_attend_users</code>
     */
    public static final TrainingAttendUsers TRAINING_ATTEND_USERS = new TrainingAttendUsers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TrainingAttendUsersRecord> getRecordType() {
        return TrainingAttendUsersRecord.class;
    }

    /**
     * The column <code>zhe.training_attend_users.attend_users_id</code>.
     */
    public final TableField<TrainingAttendUsersRecord, String> ATTEND_USERS_ID = createField("attend_users_id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zhe.training_attend_users.training_attend_id</code>.
     */
    public final TableField<TrainingAttendUsersRecord, String> TRAINING_ATTEND_ID = createField("training_attend_id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zhe.training_attend_users.training_users_id</code>.
     */
    public final TableField<TrainingAttendUsersRecord, String> TRAINING_USERS_ID = createField("training_users_id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zhe.training_attend_users.operate_date</code>.
     */
    public final TableField<TrainingAttendUsersRecord, Timestamp> OPERATE_DATE = createField("operate_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>zhe.training_attend_users.operate</code>.
     */
    public final TableField<TrainingAttendUsersRecord, Byte> OPERATE = createField("operate", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>zhe.training_attend_users.remark</code>.
     */
    public final TableField<TrainingAttendUsersRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * Create a <code>zhe.training_attend_users</code> table reference
     */
    public TrainingAttendUsers() {
        this(DSL.name("training_attend_users"), null);
    }

    /**
     * Create an aliased <code>zhe.training_attend_users</code> table reference
     */
    public TrainingAttendUsers(String alias) {
        this(DSL.name(alias), TRAINING_ATTEND_USERS);
    }

    /**
     * Create an aliased <code>zhe.training_attend_users</code> table reference
     */
    public TrainingAttendUsers(Name alias) {
        this(alias, TRAINING_ATTEND_USERS);
    }

    private TrainingAttendUsers(Name alias, Table<TrainingAttendUsersRecord> aliased) {
        this(alias, aliased, null);
    }

    private TrainingAttendUsers(Name alias, Table<TrainingAttendUsersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TrainingAttendUsers(Table<O> child, ForeignKey<O, TrainingAttendUsersRecord> key) {
        super(child, key, TRAINING_ATTEND_USERS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Zhe.ZHE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TRAINING_ATTEND_USERS_PRIMARY, Indexes.TRAINING_ATTEND_USERS_TRAINING_ATTEND_ID, Indexes.TRAINING_ATTEND_USERS_TRAINING_USERS_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TrainingAttendUsersRecord> getPrimaryKey() {
        return Keys.KEY_TRAINING_ATTEND_USERS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TrainingAttendUsersRecord>> getKeys() {
        return Arrays.<UniqueKey<TrainingAttendUsersRecord>>asList(Keys.KEY_TRAINING_ATTEND_USERS_PRIMARY, Keys.KEY_TRAINING_ATTEND_USERS_TRAINING_ATTEND_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TrainingAttendUsersRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TrainingAttendUsersRecord, ?>>asList(Keys.TRAINING_ATTEND_USERS_IBFK_1, Keys.TRAINING_ATTEND_USERS_IBFK_2);
    }

    public TrainingAttend trainingAttend() {
        return new TrainingAttend(this, Keys.TRAINING_ATTEND_USERS_IBFK_1);
    }

    public TrainingUsers trainingUsers() {
        return new TrainingUsers(this, Keys.TRAINING_ATTEND_USERS_IBFK_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TrainingAttendUsers as(String alias) {
        return new TrainingAttendUsers(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TrainingAttendUsers as(Name alias) {
        return new TrainingAttendUsers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TrainingAttendUsers rename(String name) {
        return new TrainingAttendUsers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TrainingAttendUsers rename(Name name) {
        return new TrainingAttendUsers(name, null);
    }
}
