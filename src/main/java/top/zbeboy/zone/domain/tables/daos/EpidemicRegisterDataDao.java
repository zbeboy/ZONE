/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables.daos;


import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import top.zbeboy.zone.domain.tables.EpidemicRegisterData;
import top.zbeboy.zone.domain.tables.records.EpidemicRegisterDataRecord;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.4"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Repository
public class EpidemicRegisterDataDao extends DAOImpl<EpidemicRegisterDataRecord, top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData, String> {

    /**
     * Create a new EpidemicRegisterDataDao without any configuration
     */
    public EpidemicRegisterDataDao() {
        super(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA, top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData.class);
    }

    /**
     * Create a new EpidemicRegisterDataDao with an attached configuration
     */
    @Autowired
    public EpidemicRegisterDataDao(Configuration configuration) {
        super(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA, top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData.class, configuration);
    }

    @Override
    public String getId(top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData object) {
        return object.getEpidemicRegisterDataId();
    }

    /**
     * Fetch records that have <code>epidemic_register_data_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData> fetchRangeOfEpidemicRegisterDataId(String lowerInclusive, String upperInclusive) {
        return fetchRange(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA.EPIDEMIC_REGISTER_DATA_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>epidemic_register_data_id IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData> fetchByEpidemicRegisterDataId(String... values) {
        return fetch(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA.EPIDEMIC_REGISTER_DATA_ID, values);
    }

    /**
     * Fetch a unique record that has <code>epidemic_register_data_id = value</code>
     */
    public top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData fetchOneByEpidemicRegisterDataId(String value) {
        return fetchOne(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA.EPIDEMIC_REGISTER_DATA_ID, value);
    }

    /**
     * Fetch records that have <code>location BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData> fetchRangeOfLocation(String lowerInclusive, String upperInclusive) {
        return fetchRange(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA.LOCATION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>location IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData> fetchByLocation(String... values) {
        return fetch(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA.LOCATION, values);
    }

    /**
     * Fetch records that have <code>address BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData> fetchRangeOfAddress(String lowerInclusive, String upperInclusive) {
        return fetchRange(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA.ADDRESS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData> fetchByAddress(String... values) {
        return fetch(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA.ADDRESS, values);
    }

    /**
     * Fetch records that have <code>epidemic_status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData> fetchRangeOfEpidemicStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA.EPIDEMIC_STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>epidemic_status IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData> fetchByEpidemicStatus(String... values) {
        return fetch(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA.EPIDEMIC_STATUS, values);
    }

    /**
     * Fetch records that have <code>register_real_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData> fetchRangeOfRegisterRealName(String lowerInclusive, String upperInclusive) {
        return fetchRange(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA.REGISTER_REAL_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>register_real_name IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData> fetchByRegisterRealName(String... values) {
        return fetch(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA.REGISTER_REAL_NAME, values);
    }

    /**
     * Fetch records that have <code>register_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData> fetchRangeOfRegisterType(String lowerInclusive, String upperInclusive) {
        return fetchRange(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA.REGISTER_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>register_type IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData> fetchByRegisterType(String... values) {
        return fetch(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA.REGISTER_TYPE, values);
    }

    /**
     * Fetch records that have <code>institute BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData> fetchRangeOfInstitute(String lowerInclusive, String upperInclusive) {
        return fetchRange(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA.INSTITUTE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>institute IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData> fetchByInstitute(String... values) {
        return fetch(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA.INSTITUTE, values);
    }

    /**
     * Fetch records that have <code>register_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData> fetchRangeOfRegisterDate(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA.REGISTER_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>register_date IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData> fetchByRegisterDate(Timestamp... values) {
        return fetch(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA.REGISTER_DATE, values);
    }

    /**
     * Fetch records that have <code>epidemic_register_release_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData> fetchRangeOfEpidemicRegisterReleaseId(String lowerInclusive, String upperInclusive) {
        return fetchRange(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA.EPIDEMIC_REGISTER_RELEASE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>epidemic_register_release_id IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData> fetchByEpidemicRegisterReleaseId(String... values) {
        return fetch(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA.EPIDEMIC_REGISTER_RELEASE_ID, values);
    }

    /**
     * Fetch records that have <code>register_username BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData> fetchRangeOfRegisterUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA.REGISTER_USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>register_username IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData> fetchByRegisterUsername(String... values) {
        return fetch(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA.REGISTER_USERNAME, values);
    }

    /**
     * Fetch records that have <code>channel_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData> fetchRangeOfChannelId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA.CHANNEL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>channel_id IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData> fetchByChannelId(Integer... values) {
        return fetch(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA.CHANNEL_ID, values);
    }

    /**
     * Fetch records that have <code>remark BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData> fetchRangeOfRemark(String lowerInclusive, String upperInclusive) {
        return fetchRange(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA.REMARK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>remark IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.EpidemicRegisterData> fetchByRemark(String... values) {
        return fetch(EpidemicRegisterData.EPIDEMIC_REGISTER_DATA.REMARK, values);
    }
}
