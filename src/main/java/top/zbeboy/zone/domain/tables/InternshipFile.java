/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import top.zbeboy.zone.domain.Indexes;
import top.zbeboy.zone.domain.Keys;
import top.zbeboy.zone.domain.Zone;
import top.zbeboy.zone.domain.tables.records.InternshipFileRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InternshipFile extends TableImpl<InternshipFileRecord> {

    private static final long serialVersionUID = 1946178170;

    /**
     * The reference instance of <code>zone.internship_file</code>
     */
    public static final InternshipFile INTERNSHIP_FILE = new InternshipFile();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InternshipFileRecord> getRecordType() {
        return InternshipFileRecord.class;
    }

    /**
     * The column <code>zone.internship_file.internship_release_id</code>.
     */
    public final TableField<InternshipFileRecord, String> INTERNSHIP_RELEASE_ID = createField(DSL.name("internship_release_id"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.internship_file.file_id</code>.
     */
    public final TableField<InternshipFileRecord, String> FILE_ID = createField(DSL.name("file_id"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * Create a <code>zone.internship_file</code> table reference
     */
    public InternshipFile() {
        this(DSL.name("internship_file"), null);
    }

    /**
     * Create an aliased <code>zone.internship_file</code> table reference
     */
    public InternshipFile(String alias) {
        this(DSL.name(alias), INTERNSHIP_FILE);
    }

    /**
     * Create an aliased <code>zone.internship_file</code> table reference
     */
    public InternshipFile(Name alias) {
        this(alias, INTERNSHIP_FILE);
    }

    private InternshipFile(Name alias, Table<InternshipFileRecord> aliased) {
        this(alias, aliased, null);
    }

    private InternshipFile(Name alias, Table<InternshipFileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> InternshipFile(Table<O> child, ForeignKey<O, InternshipFileRecord> key) {
        super(child, key, INTERNSHIP_FILE);
    }

    @Override
    public Schema getSchema() {
        return Zone.ZONE;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.INTERNSHIP_FILE_FILE_ID, Indexes.INTERNSHIP_FILE_PRIMARY);
    }

    @Override
    public UniqueKey<InternshipFileRecord> getPrimaryKey() {
        return Keys.KEY_INTERNSHIP_FILE_PRIMARY;
    }

    @Override
    public List<UniqueKey<InternshipFileRecord>> getKeys() {
        return Arrays.<UniqueKey<InternshipFileRecord>>asList(Keys.KEY_INTERNSHIP_FILE_PRIMARY);
    }

    @Override
    public List<ForeignKey<InternshipFileRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<InternshipFileRecord, ?>>asList(Keys.INTERNSHIP_FILE_IBFK_1, Keys.INTERNSHIP_FILE_IBFK_2);
    }

    public InternshipRelease internshipRelease() {
        return new InternshipRelease(this, Keys.INTERNSHIP_FILE_IBFK_1);
    }

    public Files files() {
        return new Files(this, Keys.INTERNSHIP_FILE_IBFK_2);
    }

    @Override
    public InternshipFile as(String alias) {
        return new InternshipFile(DSL.name(alias), this);
    }

    @Override
    public InternshipFile as(Name alias) {
        return new InternshipFile(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InternshipFile rename(String name) {
        return new InternshipFile(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InternshipFile rename(Name name) {
        return new InternshipFile(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
