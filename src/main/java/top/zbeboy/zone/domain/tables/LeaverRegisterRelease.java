/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import top.zbeboy.zone.domain.Indexes;
import top.zbeboy.zone.domain.Keys;
import top.zbeboy.zone.domain.Zone;
import top.zbeboy.zone.domain.tables.records.LeaverRegisterReleaseRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LeaverRegisterRelease extends TableImpl<LeaverRegisterReleaseRecord> {

    private static final long serialVersionUID = 810714715;

    /**
     * The reference instance of <code>zone.leaver_register_release</code>
     */
    public static final LeaverRegisterRelease LEAVER_REGISTER_RELEASE = new LeaverRegisterRelease();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LeaverRegisterReleaseRecord> getRecordType() {
        return LeaverRegisterReleaseRecord.class;
    }

    /**
     * The column <code>zone.leaver_register_release.leaver_register_release_id</code>.
     */
    public final TableField<LeaverRegisterReleaseRecord, String> LEAVER_REGISTER_RELEASE_ID = createField(DSL.name("leaver_register_release_id"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.leaver_register_release.title</code>.
     */
    public final TableField<LeaverRegisterReleaseRecord, String> TITLE = createField(DSL.name("title"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>zone.leaver_register_release.username</code>.
     */
    public final TableField<LeaverRegisterReleaseRecord, String> USERNAME = createField(DSL.name("username"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.leaver_register_release.publisher</code>.
     */
    public final TableField<LeaverRegisterReleaseRecord, String> PUBLISHER = createField(DSL.name("publisher"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>zone.leaver_register_release.release_time</code>.
     */
    public final TableField<LeaverRegisterReleaseRecord, Timestamp> RELEASE_TIME = createField(DSL.name("release_time"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>zone.leaver_register_release.data_scope</code>.
     */
    public final TableField<LeaverRegisterReleaseRecord, Integer> DATA_SCOPE = createField(DSL.name("data_scope"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>zone.leaver_register_release</code> table reference
     */
    public LeaverRegisterRelease() {
        this(DSL.name("leaver_register_release"), null);
    }

    /**
     * Create an aliased <code>zone.leaver_register_release</code> table reference
     */
    public LeaverRegisterRelease(String alias) {
        this(DSL.name(alias), LEAVER_REGISTER_RELEASE);
    }

    /**
     * Create an aliased <code>zone.leaver_register_release</code> table reference
     */
    public LeaverRegisterRelease(Name alias) {
        this(alias, LEAVER_REGISTER_RELEASE);
    }

    private LeaverRegisterRelease(Name alias, Table<LeaverRegisterReleaseRecord> aliased) {
        this(alias, aliased, null);
    }

    private LeaverRegisterRelease(Name alias, Table<LeaverRegisterReleaseRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> LeaverRegisterRelease(Table<O> child, ForeignKey<O, LeaverRegisterReleaseRecord> key) {
        super(child, key, LEAVER_REGISTER_RELEASE);
    }

    @Override
    public Schema getSchema() {
        return Zone.ZONE;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LEAVER_REGISTER_RELEASE_PRIMARY);
    }

    @Override
    public UniqueKey<LeaverRegisterReleaseRecord> getPrimaryKey() {
        return Keys.KEY_LEAVER_REGISTER_RELEASE_PRIMARY;
    }

    @Override
    public List<UniqueKey<LeaverRegisterReleaseRecord>> getKeys() {
        return Arrays.<UniqueKey<LeaverRegisterReleaseRecord>>asList(Keys.KEY_LEAVER_REGISTER_RELEASE_PRIMARY);
    }

    @Override
    public LeaverRegisterRelease as(String alias) {
        return new LeaverRegisterRelease(DSL.name(alias), this);
    }

    @Override
    public LeaverRegisterRelease as(Name alias) {
        return new LeaverRegisterRelease(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LeaverRegisterRelease rename(String name) {
        return new LeaverRegisterRelease(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LeaverRegisterRelease rename(Name name) {
        return new LeaverRegisterRelease(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, String, String, String, Timestamp, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
