/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import top.zbeboy.zone.domain.tables.AttendUsers;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AttendUsersRecord extends UpdatableRecordImpl<AttendUsersRecord> implements Record7<String, Integer, Byte, String, Timestamp, Timestamp, String> {

    private static final long serialVersionUID = -1759634095;

    /**
     * Setter for <code>zone.attend_users.attend_users_id</code>.
     */
    public void setAttendUsersId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>zone.attend_users.attend_users_id</code>.
     */
    @NotNull
    @Size(max = 64)
    public String getAttendUsersId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>zone.attend_users.student_id</code>.
     */
    public void setStudentId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>zone.attend_users.student_id</code>.
     */
    @NotNull
    public Integer getStudentId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>zone.attend_users.status</code>.
     */
    public void setStatus(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>zone.attend_users.status</code>.
     */
    public Byte getStatus() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>zone.attend_users.attend_release_sub_id</code>.
     */
    public void setAttendReleaseSubId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>zone.attend_users.attend_release_sub_id</code>.
     */
    @NotNull
    @Size(max = 64)
    public String getAttendReleaseSubId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>zone.attend_users.create_date</code>.
     */
    public void setCreateDate(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>zone.attend_users.create_date</code>.
     */
    @NotNull
    public Timestamp getCreateDate() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>zone.attend_users.operate_date</code>.
     */
    public void setOperateDate(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>zone.attend_users.operate_date</code>.
     */
    public Timestamp getOperateDate() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>zone.attend_users.remark</code>.
     */
    public void setRemark(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>zone.attend_users.remark</code>.
     */
    @Size(max = 200)
    public String getRemark() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, Integer, Byte, String, Timestamp, Timestamp, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<String, Integer, Byte, String, Timestamp, Timestamp, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return AttendUsers.ATTEND_USERS.ATTEND_USERS_ID;
    }

    @Override
    public Field<Integer> field2() {
        return AttendUsers.ATTEND_USERS.STUDENT_ID;
    }

    @Override
    public Field<Byte> field3() {
        return AttendUsers.ATTEND_USERS.STATUS;
    }

    @Override
    public Field<String> field4() {
        return AttendUsers.ATTEND_USERS.ATTEND_RELEASE_SUB_ID;
    }

    @Override
    public Field<Timestamp> field5() {
        return AttendUsers.ATTEND_USERS.CREATE_DATE;
    }

    @Override
    public Field<Timestamp> field6() {
        return AttendUsers.ATTEND_USERS.OPERATE_DATE;
    }

    @Override
    public Field<String> field7() {
        return AttendUsers.ATTEND_USERS.REMARK;
    }

    @Override
    public String component1() {
        return getAttendUsersId();
    }

    @Override
    public Integer component2() {
        return getStudentId();
    }

    @Override
    public Byte component3() {
        return getStatus();
    }

    @Override
    public String component4() {
        return getAttendReleaseSubId();
    }

    @Override
    public Timestamp component5() {
        return getCreateDate();
    }

    @Override
    public Timestamp component6() {
        return getOperateDate();
    }

    @Override
    public String component7() {
        return getRemark();
    }

    @Override
    public String value1() {
        return getAttendUsersId();
    }

    @Override
    public Integer value2() {
        return getStudentId();
    }

    @Override
    public Byte value3() {
        return getStatus();
    }

    @Override
    public String value4() {
        return getAttendReleaseSubId();
    }

    @Override
    public Timestamp value5() {
        return getCreateDate();
    }

    @Override
    public Timestamp value6() {
        return getOperateDate();
    }

    @Override
    public String value7() {
        return getRemark();
    }

    @Override
    public AttendUsersRecord value1(String value) {
        setAttendUsersId(value);
        return this;
    }

    @Override
    public AttendUsersRecord value2(Integer value) {
        setStudentId(value);
        return this;
    }

    @Override
    public AttendUsersRecord value3(Byte value) {
        setStatus(value);
        return this;
    }

    @Override
    public AttendUsersRecord value4(String value) {
        setAttendReleaseSubId(value);
        return this;
    }

    @Override
    public AttendUsersRecord value5(Timestamp value) {
        setCreateDate(value);
        return this;
    }

    @Override
    public AttendUsersRecord value6(Timestamp value) {
        setOperateDate(value);
        return this;
    }

    @Override
    public AttendUsersRecord value7(String value) {
        setRemark(value);
        return this;
    }

    @Override
    public AttendUsersRecord values(String value1, Integer value2, Byte value3, String value4, Timestamp value5, Timestamp value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AttendUsersRecord
     */
    public AttendUsersRecord() {
        super(AttendUsers.ATTEND_USERS);
    }

    /**
     * Create a detached, initialised AttendUsersRecord
     */
    public AttendUsersRecord(String attendUsersId, Integer studentId, Byte status, String attendReleaseSubId, Timestamp createDate, Timestamp operateDate, String remark) {
        super(AttendUsers.ATTEND_USERS);

        set(0, attendUsersId);
        set(1, studentId);
        set(2, status);
        set(3, attendReleaseSubId);
        set(4, createDate);
        set(5, operateDate);
        set(6, remark);
    }
}
