/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import top.zbeboy.zone.domain.tables.GoogleOauth;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GoogleOauthRecord extends UpdatableRecordImpl<GoogleOauthRecord> implements Record4<String, String, Timestamp, Timestamp> {

    private static final long serialVersionUID = -655757279;

    /**
     * Setter for <code>zone.google_oauth.username</code>.
     */
    public void setUsername(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>zone.google_oauth.username</code>.
     */
    @NotNull
    @Size(max = 64)
    public String getUsername() {
        return (String) get(0);
    }

    /**
     * Setter for <code>zone.google_oauth.google_oauth_key</code>.
     */
    public void setGoogleOauthKey(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>zone.google_oauth.google_oauth_key</code>.
     */
    @NotNull
    @Size(max = 64)
    public String getGoogleOauthKey() {
        return (String) get(1);
    }

    /**
     * Setter for <code>zone.google_oauth.create_date</code>.
     */
    public void setCreateDate(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>zone.google_oauth.create_date</code>.
     */
    @NotNull
    public Timestamp getCreateDate() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>zone.google_oauth.last_modifier</code>.
     */
    public void setLastModifier(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>zone.google_oauth.last_modifier</code>.
     */
    public Timestamp getLastModifier() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, Timestamp, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, Timestamp, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return GoogleOauth.GOOGLE_OAUTH.USERNAME;
    }

    @Override
    public Field<String> field2() {
        return GoogleOauth.GOOGLE_OAUTH.GOOGLE_OAUTH_KEY;
    }

    @Override
    public Field<Timestamp> field3() {
        return GoogleOauth.GOOGLE_OAUTH.CREATE_DATE;
    }

    @Override
    public Field<Timestamp> field4() {
        return GoogleOauth.GOOGLE_OAUTH.LAST_MODIFIER;
    }

    @Override
    public String component1() {
        return getUsername();
    }

    @Override
    public String component2() {
        return getGoogleOauthKey();
    }

    @Override
    public Timestamp component3() {
        return getCreateDate();
    }

    @Override
    public Timestamp component4() {
        return getLastModifier();
    }

    @Override
    public String value1() {
        return getUsername();
    }

    @Override
    public String value2() {
        return getGoogleOauthKey();
    }

    @Override
    public Timestamp value3() {
        return getCreateDate();
    }

    @Override
    public Timestamp value4() {
        return getLastModifier();
    }

    @Override
    public GoogleOauthRecord value1(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public GoogleOauthRecord value2(String value) {
        setGoogleOauthKey(value);
        return this;
    }

    @Override
    public GoogleOauthRecord value3(Timestamp value) {
        setCreateDate(value);
        return this;
    }

    @Override
    public GoogleOauthRecord value4(Timestamp value) {
        setLastModifier(value);
        return this;
    }

    @Override
    public GoogleOauthRecord values(String value1, String value2, Timestamp value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GoogleOauthRecord
     */
    public GoogleOauthRecord() {
        super(GoogleOauth.GOOGLE_OAUTH);
    }

    /**
     * Create a detached, initialised GoogleOauthRecord
     */
    public GoogleOauthRecord(String username, String googleOauthKey, Timestamp createDate, Timestamp lastModifier) {
        super(GoogleOauth.GOOGLE_OAUTH);

        set(0, username);
        set(1, googleOauthKey);
        set(2, createDate);
        set(3, lastModifier);
    }
}
