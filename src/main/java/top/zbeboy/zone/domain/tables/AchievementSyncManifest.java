/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import top.zbeboy.zone.domain.Indexes;
import top.zbeboy.zone.domain.Keys;
import top.zbeboy.zone.domain.Zhe;
import top.zbeboy.zone.domain.tables.records.AchievementSyncManifestRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AchievementSyncManifest extends TableImpl<AchievementSyncManifestRecord> {

    private static final long serialVersionUID = -1114736063;

    /**
     * The reference instance of <code>zhe.achievement_sync_manifest</code>
     */
    public static final AchievementSyncManifest ACHIEVEMENT_SYNC_MANIFEST = new AchievementSyncManifest();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AchievementSyncManifestRecord> getRecordType() {
        return AchievementSyncManifestRecord.class;
    }

    /**
     * The column <code>zhe.achievement_sync_manifest.manifest_id</code>.
     */
    public final TableField<AchievementSyncManifestRecord, Integer> MANIFEST_ID = createField("manifest_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>zhe.achievement_sync_manifest.sync_start_time</code>.
     */
    public final TableField<AchievementSyncManifestRecord, Timestamp> SYNC_START_TIME = createField("sync_start_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>zhe.achievement_sync_manifest.sync_end_time</code>.
     */
    public final TableField<AchievementSyncManifestRecord, Timestamp> SYNC_END_TIME = createField("sync_end_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>zhe.achievement_sync_manifest.sync_status</code>.
     */
    public final TableField<AchievementSyncManifestRecord, Byte> SYNC_STATUS = createField("sync_status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>zhe.achievement_sync_manifest.sync_result</code>.
     */
    public final TableField<AchievementSyncManifestRecord, String> SYNC_RESULT = createField("sync_result", org.jooq.impl.SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>zhe.achievement_sync_manifest.achievement_release_id</code>.
     */
    public final TableField<AchievementSyncManifestRecord, String> ACHIEVEMENT_RELEASE_ID = createField("achievement_release_id", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * Create a <code>zhe.achievement_sync_manifest</code> table reference
     */
    public AchievementSyncManifest() {
        this(DSL.name("achievement_sync_manifest"), null);
    }

    /**
     * Create an aliased <code>zhe.achievement_sync_manifest</code> table reference
     */
    public AchievementSyncManifest(String alias) {
        this(DSL.name(alias), ACHIEVEMENT_SYNC_MANIFEST);
    }

    /**
     * Create an aliased <code>zhe.achievement_sync_manifest</code> table reference
     */
    public AchievementSyncManifest(Name alias) {
        this(alias, ACHIEVEMENT_SYNC_MANIFEST);
    }

    private AchievementSyncManifest(Name alias, Table<AchievementSyncManifestRecord> aliased) {
        this(alias, aliased, null);
    }

    private AchievementSyncManifest(Name alias, Table<AchievementSyncManifestRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> AchievementSyncManifest(Table<O> child, ForeignKey<O, AchievementSyncManifestRecord> key) {
        super(child, key, ACHIEVEMENT_SYNC_MANIFEST);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Zhe.ZHE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ACHIEVEMENT_SYNC_MANIFEST_ACHIEVEMENT_RELEASE_ID, Indexes.ACHIEVEMENT_SYNC_MANIFEST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AchievementSyncManifestRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ACHIEVEMENT_SYNC_MANIFEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AchievementSyncManifestRecord> getPrimaryKey() {
        return Keys.KEY_ACHIEVEMENT_SYNC_MANIFEST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AchievementSyncManifestRecord>> getKeys() {
        return Arrays.<UniqueKey<AchievementSyncManifestRecord>>asList(Keys.KEY_ACHIEVEMENT_SYNC_MANIFEST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AchievementSyncManifestRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AchievementSyncManifestRecord, ?>>asList(Keys.ACHIEVEMENT_SYNC_MANIFEST_IBFK_1);
    }

    public AchievementRelease achievementRelease() {
        return new AchievementRelease(this, Keys.ACHIEVEMENT_SYNC_MANIFEST_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AchievementSyncManifest as(String alias) {
        return new AchievementSyncManifest(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AchievementSyncManifest as(Name alias) {
        return new AchievementSyncManifest(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AchievementSyncManifest rename(String name) {
        return new AchievementSyncManifest(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AchievementSyncManifest rename(Name name) {
        return new AchievementSyncManifest(name, null);
    }
}
