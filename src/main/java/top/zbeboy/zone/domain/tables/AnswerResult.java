/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import top.zbeboy.zone.domain.Indexes;
import top.zbeboy.zone.domain.Keys;
import top.zbeboy.zone.domain.Zone;
import top.zbeboy.zone.domain.tables.records.AnswerResultRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnswerResult extends TableImpl<AnswerResultRecord> {

    private static final long serialVersionUID = -1909866940;

    /**
     * The reference instance of <code>zone.answer_result</code>
     */
    public static final AnswerResult ANSWER_RESULT = new AnswerResult();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AnswerResultRecord> getRecordType() {
        return AnswerResultRecord.class;
    }

    /**
     * The column <code>zone.answer_result.answer_result_id</code>.
     */
    public final TableField<AnswerResultRecord, String> ANSWER_RESULT_ID = createField("answer_result_id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.answer_result.user_id</code>.
     */
    public final TableField<AnswerResultRecord, String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.answer_result.user_name</code>.
     */
    public final TableField<AnswerResultRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>zone.answer_result.last_socre</code>.
     */
    public final TableField<AnswerResultRecord, Double> LAST_SOCRE = createField("last_socre", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>zone.answer_result.total_score</code>.
     */
    public final TableField<AnswerResultRecord, Double> TOTAL_SCORE = createField("total_score", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>zone.answer_result.answer_release_id</code>.
     */
    public final TableField<AnswerResultRecord, String> ANSWER_RELEASE_ID = createField("answer_release_id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * Create a <code>zone.answer_result</code> table reference
     */
    public AnswerResult() {
        this(DSL.name("answer_result"), null);
    }

    /**
     * Create an aliased <code>zone.answer_result</code> table reference
     */
    public AnswerResult(String alias) {
        this(DSL.name(alias), ANSWER_RESULT);
    }

    /**
     * Create an aliased <code>zone.answer_result</code> table reference
     */
    public AnswerResult(Name alias) {
        this(alias, ANSWER_RESULT);
    }

    private AnswerResult(Name alias, Table<AnswerResultRecord> aliased) {
        this(alias, aliased, null);
    }

    private AnswerResult(Name alias, Table<AnswerResultRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> AnswerResult(Table<O> child, ForeignKey<O, AnswerResultRecord> key) {
        super(child, key, ANSWER_RESULT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Zone.ZONE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ANSWER_RESULT_ANSWER_RELEASE_ID, Indexes.ANSWER_RESULT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AnswerResultRecord> getPrimaryKey() {
        return Keys.KEY_ANSWER_RESULT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AnswerResultRecord>> getKeys() {
        return Arrays.<UniqueKey<AnswerResultRecord>>asList(Keys.KEY_ANSWER_RESULT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AnswerResultRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AnswerResultRecord, ?>>asList(Keys.ANSWER_RESULT_IBFK_1);
    }

    public AnswerRelease answerRelease() {
        return new AnswerRelease(this, Keys.ANSWER_RESULT_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnswerResult as(String alias) {
        return new AnswerResult(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnswerResult as(Name alias) {
        return new AnswerResult(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AnswerResult rename(String name) {
        return new AnswerResult(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AnswerResult rename(Name name) {
        return new AnswerResult(name, null);
    }
}
