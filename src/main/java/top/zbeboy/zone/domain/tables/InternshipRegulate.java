/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables;


import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import top.zbeboy.zone.domain.Indexes;
import top.zbeboy.zone.domain.Keys;
import top.zbeboy.zone.domain.Zone;
import top.zbeboy.zone.domain.tables.records.InternshipRegulateRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InternshipRegulate extends TableImpl<InternshipRegulateRecord> {

    private static final long serialVersionUID = -1340662532;

    /**
     * The reference instance of <code>zone.internship_regulate</code>
     */
    public static final InternshipRegulate INTERNSHIP_REGULATE = new InternshipRegulate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InternshipRegulateRecord> getRecordType() {
        return InternshipRegulateRecord.class;
    }

    /**
     * The column <code>zone.internship_regulate.internship_regulate_id</code>.
     */
    public final TableField<InternshipRegulateRecord, String> INTERNSHIP_REGULATE_ID = createField(DSL.name("internship_regulate_id"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.internship_regulate.student_name</code>.
     */
    public final TableField<InternshipRegulateRecord, String> STUDENT_NAME = createField(DSL.name("student_name"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>zone.internship_regulate.student_number</code>.
     */
    public final TableField<InternshipRegulateRecord, String> STUDENT_NUMBER = createField(DSL.name("student_number"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>zone.internship_regulate.student_tel</code>.
     */
    public final TableField<InternshipRegulateRecord, String> STUDENT_TEL = createField(DSL.name("student_tel"), org.jooq.impl.SQLDataType.VARCHAR(15).nullable(false), this, "");

    /**
     * The column <code>zone.internship_regulate.internship_content</code>.
     */
    public final TableField<InternshipRegulateRecord, String> INTERNSHIP_CONTENT = createField(DSL.name("internship_content"), org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>zone.internship_regulate.internship_progress</code>.
     */
    public final TableField<InternshipRegulateRecord, String> INTERNSHIP_PROGRESS = createField(DSL.name("internship_progress"), org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>zone.internship_regulate.report_way</code>.
     */
    public final TableField<InternshipRegulateRecord, String> REPORT_WAY = createField(DSL.name("report_way"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>zone.internship_regulate.report_date</code>.
     */
    public final TableField<InternshipRegulateRecord, Date> REPORT_DATE = createField(DSL.name("report_date"), org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>zone.internship_regulate.school_guidance_teacher</code>.
     */
    public final TableField<InternshipRegulateRecord, String> SCHOOL_GUIDANCE_TEACHER = createField(DSL.name("school_guidance_teacher"), org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>zone.internship_regulate.tliy</code>.
     */
    public final TableField<InternshipRegulateRecord, String> TLIY = createField(DSL.name("tliy"), org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>zone.internship_regulate.create_date</code>.
     */
    public final TableField<InternshipRegulateRecord, Timestamp> CREATE_DATE = createField(DSL.name("create_date"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>zone.internship_regulate.student_id</code>.
     */
    public final TableField<InternshipRegulateRecord, Integer> STUDENT_ID = createField(DSL.name("student_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>zone.internship_regulate.internship_release_id</code>.
     */
    public final TableField<InternshipRegulateRecord, String> INTERNSHIP_RELEASE_ID = createField(DSL.name("internship_release_id"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zone.internship_regulate.staff_id</code>.
     */
    public final TableField<InternshipRegulateRecord, Integer> STAFF_ID = createField(DSL.name("staff_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>zone.internship_regulate</code> table reference
     */
    public InternshipRegulate() {
        this(DSL.name("internship_regulate"), null);
    }

    /**
     * Create an aliased <code>zone.internship_regulate</code> table reference
     */
    public InternshipRegulate(String alias) {
        this(DSL.name(alias), INTERNSHIP_REGULATE);
    }

    /**
     * Create an aliased <code>zone.internship_regulate</code> table reference
     */
    public InternshipRegulate(Name alias) {
        this(alias, INTERNSHIP_REGULATE);
    }

    private InternshipRegulate(Name alias, Table<InternshipRegulateRecord> aliased) {
        this(alias, aliased, null);
    }

    private InternshipRegulate(Name alias, Table<InternshipRegulateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> InternshipRegulate(Table<O> child, ForeignKey<O, InternshipRegulateRecord> key) {
        super(child, key, INTERNSHIP_REGULATE);
    }

    @Override
    public Schema getSchema() {
        return Zone.ZONE;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.INTERNSHIP_REGULATE_INTERNSHIP_RELEASE_ID, Indexes.INTERNSHIP_REGULATE_PRIMARY, Indexes.INTERNSHIP_REGULATE_STAFF_ID, Indexes.INTERNSHIP_REGULATE_STUDENT_ID);
    }

    @Override
    public UniqueKey<InternshipRegulateRecord> getPrimaryKey() {
        return Keys.KEY_INTERNSHIP_REGULATE_PRIMARY;
    }

    @Override
    public List<UniqueKey<InternshipRegulateRecord>> getKeys() {
        return Arrays.<UniqueKey<InternshipRegulateRecord>>asList(Keys.KEY_INTERNSHIP_REGULATE_PRIMARY);
    }

    @Override
    public List<ForeignKey<InternshipRegulateRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<InternshipRegulateRecord, ?>>asList(Keys.INTERNSHIP_REGULATE_IBFK_1, Keys.INTERNSHIP_REGULATE_IBFK_2, Keys.INTERNSHIP_REGULATE_IBFK_3);
    }

    public Student student() {
        return new Student(this, Keys.INTERNSHIP_REGULATE_IBFK_1);
    }

    public InternshipRelease internshipRelease() {
        return new InternshipRelease(this, Keys.INTERNSHIP_REGULATE_IBFK_2);
    }

    public Staff staff() {
        return new Staff(this, Keys.INTERNSHIP_REGULATE_IBFK_3);
    }

    @Override
    public InternshipRegulate as(String alias) {
        return new InternshipRegulate(DSL.name(alias), this);
    }

    @Override
    public InternshipRegulate as(Name alias) {
        return new InternshipRegulate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InternshipRegulate rename(String name) {
        return new InternshipRegulate(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InternshipRegulate rename(Name name) {
        return new InternshipRegulate(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<String, String, String, String, String, String, String, Date, String, String, Timestamp, Integer, String, Integer> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
