/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import top.zbeboy.zone.domain.Indexes;
import top.zbeboy.zone.domain.Keys;
import top.zbeboy.zone.domain.Zhe;
import top.zbeboy.zone.domain.tables.records.AchievementSyncDataRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AchievementSyncData extends TableImpl<AchievementSyncDataRecord> {

    private static final long serialVersionUID = -1467539207;

    /**
     * The reference instance of <code>zhe.achievement_sync_data</code>
     */
    public static final AchievementSyncData ACHIEVEMENT_SYNC_DATA = new AchievementSyncData();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AchievementSyncDataRecord> getRecordType() {
        return AchievementSyncDataRecord.class;
    }

    /**
     * The column <code>zhe.achievement_sync_data.serial_num</code>.
     */
    public final TableField<AchievementSyncDataRecord, Integer> SERIAL_NUM = createField("serial_num", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>zhe.achievement_sync_data.course_year</code>.
     */
    public final TableField<AchievementSyncDataRecord, String> COURSE_YEAR = createField("course_year", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>zhe.achievement_sync_data.course_term</code>.
     */
    public final TableField<AchievementSyncDataRecord, Integer> COURSE_TERM = createField("course_term", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>zhe.achievement_sync_data.course_code</code>.
     */
    public final TableField<AchievementSyncDataRecord, String> COURSE_CODE = createField("course_code", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>zhe.achievement_sync_data.course_name</code>.
     */
    public final TableField<AchievementSyncDataRecord, String> COURSE_NAME = createField("course_name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>zhe.achievement_sync_data.credit_deserved</code>.
     */
    public final TableField<AchievementSyncDataRecord, Double> CREDIT_DESERVED = createField("credit_deserved", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>zhe.achievement_sync_data.course_nature</code>.
     */
    public final TableField<AchievementSyncDataRecord, String> COURSE_NATURE = createField("course_nature", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>zhe.achievement_sync_data.course_organize</code>.
     */
    public final TableField<AchievementSyncDataRecord, String> COURSE_ORGANIZE = createField("course_organize", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>zhe.achievement_sync_data.score</code>.
     */
    public final TableField<AchievementSyncDataRecord, String> SCORE = createField("score", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>zhe.achievement_sync_data.d_score</code>.
     */
    public final TableField<AchievementSyncDataRecord, Double> D_SCORE = createField("d_score", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>zhe.achievement_sync_data.remark</code>.
     */
    public final TableField<AchievementSyncDataRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(60), this, "");

    /**
     * The column <code>zhe.achievement_sync_data.achieved_credits</code>.
     */
    public final TableField<AchievementSyncDataRecord, Double> ACHIEVED_CREDITS = createField("achieved_credits", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>zhe.achievement_sync_data.exam_type</code>.
     */
    public final TableField<AchievementSyncDataRecord, String> EXAM_TYPE = createField("exam_type", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>zhe.achievement_sync_data.rotation</code>.
     */
    public final TableField<AchievementSyncDataRecord, Integer> ROTATION = createField("rotation", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>zhe.achievement_sync_data.staff_name</code>.
     */
    public final TableField<AchievementSyncDataRecord, String> STAFF_NAME = createField("staff_name", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>zhe.achievement_sync_data.exam_date</code>.
     */
    public final TableField<AchievementSyncDataRecord, Date> EXAM_DATE = createField("exam_date", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>zhe.achievement_sync_data.student_number</code>.
     */
    public final TableField<AchievementSyncDataRecord, String> STUDENT_NUMBER = createField("student_number", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * Create a <code>zhe.achievement_sync_data</code> table reference
     */
    public AchievementSyncData() {
        this(DSL.name("achievement_sync_data"), null);
    }

    /**
     * Create an aliased <code>zhe.achievement_sync_data</code> table reference
     */
    public AchievementSyncData(String alias) {
        this(DSL.name(alias), ACHIEVEMENT_SYNC_DATA);
    }

    /**
     * Create an aliased <code>zhe.achievement_sync_data</code> table reference
     */
    public AchievementSyncData(Name alias) {
        this(alias, ACHIEVEMENT_SYNC_DATA);
    }

    private AchievementSyncData(Name alias, Table<AchievementSyncDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private AchievementSyncData(Name alias, Table<AchievementSyncDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> AchievementSyncData(Table<O> child, ForeignKey<O, AchievementSyncDataRecord> key) {
        super(child, key, ACHIEVEMENT_SYNC_DATA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Zhe.ZHE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ACHIEVEMENT_SYNC_DATA_COURSE_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AchievementSyncDataRecord>> getKeys() {
        return Arrays.<UniqueKey<AchievementSyncDataRecord>>asList(Keys.KEY_ACHIEVEMENT_SYNC_DATA_COURSE_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AchievementSyncData as(String alias) {
        return new AchievementSyncData(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AchievementSyncData as(Name alias) {
        return new AchievementSyncData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AchievementSyncData rename(String name) {
        return new AchievementSyncData(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AchievementSyncData rename(Name name) {
        return new AchievementSyncData(name, null);
    }
}
