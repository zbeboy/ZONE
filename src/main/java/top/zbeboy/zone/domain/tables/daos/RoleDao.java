/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables.daos;


import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import top.zbeboy.zone.domain.tables.Role;
import top.zbeboy.zone.domain.tables.records.RoleRecord;

import javax.annotation.Generated;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.4"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Repository
public class RoleDao extends DAOImpl<RoleRecord, top.zbeboy.zone.domain.tables.pojos.Role, String> {

    /**
     * Create a new RoleDao without any configuration
     */
    public RoleDao() {
        super(Role.ROLE, top.zbeboy.zone.domain.tables.pojos.Role.class);
    }

    /**
     * Create a new RoleDao with an attached configuration
     */
    @Autowired
    public RoleDao(Configuration configuration) {
        super(Role.ROLE, top.zbeboy.zone.domain.tables.pojos.Role.class, configuration);
    }

    @Override
    public String getId(top.zbeboy.zone.domain.tables.pojos.Role object) {
        return object.getRoleId();
    }

    /**
     * Fetch records that have <code>role_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Role> fetchRangeOfRoleId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Role.ROLE.ROLE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role_id IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Role> fetchByRoleId(String... values) {
        return fetch(Role.ROLE.ROLE_ID, values);
    }

    /**
     * Fetch a unique record that has <code>role_id = value</code>
     */
    public top.zbeboy.zone.domain.tables.pojos.Role fetchOneByRoleId(String value) {
        return fetchOne(Role.ROLE.ROLE_ID, value);
    }

    /**
     * Fetch records that have <code>role_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Role> fetchRangeOfRoleName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Role.ROLE.ROLE_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role_name IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Role> fetchByRoleName(String... values) {
        return fetch(Role.ROLE.ROLE_NAME, values);
    }

    /**
     * Fetch records that have <code>role_en_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Role> fetchRangeOfRoleEnName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Role.ROLE.ROLE_EN_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role_en_name IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Role> fetchByRoleEnName(String... values) {
        return fetch(Role.ROLE.ROLE_EN_NAME, values);
    }

    /**
     * Fetch a unique record that has <code>role_en_name = value</code>
     */
    public top.zbeboy.zone.domain.tables.pojos.Role fetchOneByRoleEnName(String value) {
        return fetchOne(Role.ROLE.ROLE_EN_NAME, value);
    }

    /**
     * Fetch records that have <code>role_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Role> fetchRangeOfRoleType(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Role.ROLE.ROLE_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role_type IN (values)</code>
     */
    public List<top.zbeboy.zone.domain.tables.pojos.Role> fetchByRoleType(Integer... values) {
        return fetch(Role.ROLE.ROLE_TYPE, values);
    }
}
