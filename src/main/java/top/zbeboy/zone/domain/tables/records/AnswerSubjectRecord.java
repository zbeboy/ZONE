/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;

import top.zbeboy.zone.domain.tables.AnswerSubject;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnswerSubjectRecord extends UpdatableRecordImpl<AnswerSubjectRecord> implements Record9<String, String, Byte, String, String, String, Timestamp, Double, Integer> {

    private static final long serialVersionUID = -1889307835;

    /**
     * Setter for <code>zone.answer_subject.answer_subject_id</code>.
     */
    public void setAnswerSubjectId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>zone.answer_subject.answer_subject_id</code>.
     */
    @NotNull
    @Size(max = 64)
    public String getAnswerSubjectId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>zone.answer_subject.content</code>.
     */
    public void setContent(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>zone.answer_subject.content</code>.
     */
    @NotNull
    @Size(max = 300)
    public String getContent() {
        return (String) get(1);
    }

    /**
     * Setter for <code>zone.answer_subject.subject_type</code>.
     */
    public void setSubjectType(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>zone.answer_subject.subject_type</code>.
     */
    @NotNull
    public Byte getSubjectType() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>zone.answer_subject.right_key</code>.
     */
    public void setRightKey(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>zone.answer_subject.right_key</code>.
     */
    @NotNull
    @Size(max = 10)
    public String getRightKey() {
        return (String) get(3);
    }

    /**
     * Setter for <code>zone.answer_subject.answer_bank_id</code>.
     */
    public void setAnswerBankId(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>zone.answer_subject.answer_bank_id</code>.
     */
    @NotNull
    @Size(max = 64)
    public String getAnswerBankId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>zone.answer_subject.username</code>.
     */
    public void setUsername(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>zone.answer_subject.username</code>.
     */
    @NotNull
    @Size(max = 64)
    public String getUsername() {
        return (String) get(5);
    }

    /**
     * Setter for <code>zone.answer_subject.create_date</code>.
     */
    public void setCreateDate(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>zone.answer_subject.create_date</code>.
     */
    @NotNull
    public Timestamp getCreateDate() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>zone.answer_subject.score</code>.
     */
    public void setScore(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>zone.answer_subject.score</code>.
     */
    @NotNull
    public Double getScore() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>zone.answer_subject.custom_id</code>.
     */
    public void setCustomId(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>zone.answer_subject.custom_id</code>.
     */
    public Integer getCustomId() {
        return (Integer) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<String, String, Byte, String, String, String, Timestamp, Double, Integer> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<String, String, Byte, String, String, String, Timestamp, Double, Integer> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return AnswerSubject.ANSWER_SUBJECT.ANSWER_SUBJECT_ID;
    }

    @Override
    public Field<String> field2() {
        return AnswerSubject.ANSWER_SUBJECT.CONTENT;
    }

    @Override
    public Field<Byte> field3() {
        return AnswerSubject.ANSWER_SUBJECT.SUBJECT_TYPE;
    }

    @Override
    public Field<String> field4() {
        return AnswerSubject.ANSWER_SUBJECT.RIGHT_KEY;
    }

    @Override
    public Field<String> field5() {
        return AnswerSubject.ANSWER_SUBJECT.ANSWER_BANK_ID;
    }

    @Override
    public Field<String> field6() {
        return AnswerSubject.ANSWER_SUBJECT.USERNAME;
    }

    @Override
    public Field<Timestamp> field7() {
        return AnswerSubject.ANSWER_SUBJECT.CREATE_DATE;
    }

    @Override
    public Field<Double> field8() {
        return AnswerSubject.ANSWER_SUBJECT.SCORE;
    }

    @Override
    public Field<Integer> field9() {
        return AnswerSubject.ANSWER_SUBJECT.CUSTOM_ID;
    }

    @Override
    public String component1() {
        return getAnswerSubjectId();
    }

    @Override
    public String component2() {
        return getContent();
    }

    @Override
    public Byte component3() {
        return getSubjectType();
    }

    @Override
    public String component4() {
        return getRightKey();
    }

    @Override
    public String component5() {
        return getAnswerBankId();
    }

    @Override
    public String component6() {
        return getUsername();
    }

    @Override
    public Timestamp component7() {
        return getCreateDate();
    }

    @Override
    public Double component8() {
        return getScore();
    }

    @Override
    public Integer component9() {
        return getCustomId();
    }

    @Override
    public String value1() {
        return getAnswerSubjectId();
    }

    @Override
    public String value2() {
        return getContent();
    }

    @Override
    public Byte value3() {
        return getSubjectType();
    }

    @Override
    public String value4() {
        return getRightKey();
    }

    @Override
    public String value5() {
        return getAnswerBankId();
    }

    @Override
    public String value6() {
        return getUsername();
    }

    @Override
    public Timestamp value7() {
        return getCreateDate();
    }

    @Override
    public Double value8() {
        return getScore();
    }

    @Override
    public Integer value9() {
        return getCustomId();
    }

    @Override
    public AnswerSubjectRecord value1(String value) {
        setAnswerSubjectId(value);
        return this;
    }

    @Override
    public AnswerSubjectRecord value2(String value) {
        setContent(value);
        return this;
    }

    @Override
    public AnswerSubjectRecord value3(Byte value) {
        setSubjectType(value);
        return this;
    }

    @Override
    public AnswerSubjectRecord value4(String value) {
        setRightKey(value);
        return this;
    }

    @Override
    public AnswerSubjectRecord value5(String value) {
        setAnswerBankId(value);
        return this;
    }

    @Override
    public AnswerSubjectRecord value6(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public AnswerSubjectRecord value7(Timestamp value) {
        setCreateDate(value);
        return this;
    }

    @Override
    public AnswerSubjectRecord value8(Double value) {
        setScore(value);
        return this;
    }

    @Override
    public AnswerSubjectRecord value9(Integer value) {
        setCustomId(value);
        return this;
    }

    @Override
    public AnswerSubjectRecord values(String value1, String value2, Byte value3, String value4, String value5, String value6, Timestamp value7, Double value8, Integer value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AnswerSubjectRecord
     */
    public AnswerSubjectRecord() {
        super(AnswerSubject.ANSWER_SUBJECT);
    }

    /**
     * Create a detached, initialised AnswerSubjectRecord
     */
    public AnswerSubjectRecord(String answerSubjectId, String content, Byte subjectType, String rightKey, String answerBankId, String username, Timestamp createDate, Double score, Integer customId) {
        super(AnswerSubject.ANSWER_SUBJECT);

        set(0, answerSubjectId);
        set(1, content);
        set(2, subjectType);
        set(3, rightKey);
        set(4, answerBankId);
        set(5, username);
        set(6, createDate);
        set(7, score);
        set(8, customId);
    }
}
