/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import top.zbeboy.zone.domain.Indexes;
import top.zbeboy.zone.domain.Keys;
import top.zbeboy.zone.domain.Zhe;
import top.zbeboy.zone.domain.tables.records.SystemMailboxLogRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SystemMailboxLog extends TableImpl<SystemMailboxLogRecord> {

    private static final long serialVersionUID = -1460342131;

    /**
     * The reference instance of <code>zhe.system_mailbox_log</code>
     */
    public static final SystemMailboxLog SYSTEM_MAILBOX_LOG = new SystemMailboxLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SystemMailboxLogRecord> getRecordType() {
        return SystemMailboxLogRecord.class;
    }

    /**
     * The column <code>zhe.system_mailbox_log.log_id</code>.
     */
    public final TableField<SystemMailboxLogRecord, String> LOG_ID = createField("log_id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zhe.system_mailbox_log.send_time</code>.
     */
    public final TableField<SystemMailboxLogRecord, Timestamp> SEND_TIME = createField("send_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>zhe.system_mailbox_log.accept_mail</code>.
     */
    public final TableField<SystemMailboxLogRecord, String> ACCEPT_MAIL = createField("accept_mail", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>zhe.system_mailbox_log.send_condition</code>.
     */
    public final TableField<SystemMailboxLogRecord, String> SEND_CONDITION = createField("send_condition", org.jooq.impl.SQLDataType.VARCHAR(500), this, "");

    /**
     * Create a <code>zhe.system_mailbox_log</code> table reference
     */
    public SystemMailboxLog() {
        this(DSL.name("system_mailbox_log"), null);
    }

    /**
     * Create an aliased <code>zhe.system_mailbox_log</code> table reference
     */
    public SystemMailboxLog(String alias) {
        this(DSL.name(alias), SYSTEM_MAILBOX_LOG);
    }

    /**
     * Create an aliased <code>zhe.system_mailbox_log</code> table reference
     */
    public SystemMailboxLog(Name alias) {
        this(alias, SYSTEM_MAILBOX_LOG);
    }

    private SystemMailboxLog(Name alias, Table<SystemMailboxLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private SystemMailboxLog(Name alias, Table<SystemMailboxLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SystemMailboxLog(Table<O> child, ForeignKey<O, SystemMailboxLogRecord> key) {
        super(child, key, SYSTEM_MAILBOX_LOG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Zhe.ZHE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SYSTEM_MAILBOX_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SystemMailboxLogRecord> getPrimaryKey() {
        return Keys.KEY_SYSTEM_MAILBOX_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SystemMailboxLogRecord>> getKeys() {
        return Arrays.<UniqueKey<SystemMailboxLogRecord>>asList(Keys.KEY_SYSTEM_MAILBOX_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemMailboxLog as(String alias) {
        return new SystemMailboxLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemMailboxLog as(Name alias) {
        return new SystemMailboxLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SystemMailboxLog rename(String name) {
        return new SystemMailboxLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SystemMailboxLog rename(Name name) {
        return new SystemMailboxLog(name, null);
    }
}
