/*
 * This file is generated by jOOQ.
 */
package top.zbeboy.zone.domain.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import top.zbeboy.zone.domain.Indexes;
import top.zbeboy.zone.domain.Keys;
import top.zbeboy.zone.domain.Zhe;
import top.zbeboy.zone.domain.tables.records.AchievementReleaseRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AchievementRelease extends TableImpl<AchievementReleaseRecord> {

    private static final long serialVersionUID = 1541384541;

    /**
     * The reference instance of <code>zhe.achievement_release</code>
     */
    public static final AchievementRelease ACHIEVEMENT_RELEASE = new AchievementRelease();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AchievementReleaseRecord> getRecordType() {
        return AchievementReleaseRecord.class;
    }

    /**
     * The column <code>zhe.achievement_release.achievement_release_id</code>.
     */
    public final TableField<AchievementReleaseRecord, String> ACHIEVEMENT_RELEASE_ID = createField("achievement_release_id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zhe.achievement_release.title</code>.
     */
    public final TableField<AchievementReleaseRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>zhe.achievement_release.department_id</code>.
     */
    public final TableField<AchievementReleaseRecord, Integer> DEPARTMENT_ID = createField("department_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>zhe.achievement_release.release_time</code>.
     */
    public final TableField<AchievementReleaseRecord, Timestamp> RELEASE_TIME = createField("release_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>zhe.achievement_release.release_username</code>.
     */
    public final TableField<AchievementReleaseRecord, String> RELEASE_USERNAME = createField("release_username", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>zhe.achievement_release.release_publisher</code>.
     */
    public final TableField<AchievementReleaseRecord, String> RELEASE_PUBLISHER = createField("release_publisher", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * Create a <code>zhe.achievement_release</code> table reference
     */
    public AchievementRelease() {
        this(DSL.name("achievement_release"), null);
    }

    /**
     * Create an aliased <code>zhe.achievement_release</code> table reference
     */
    public AchievementRelease(String alias) {
        this(DSL.name(alias), ACHIEVEMENT_RELEASE);
    }

    /**
     * Create an aliased <code>zhe.achievement_release</code> table reference
     */
    public AchievementRelease(Name alias) {
        this(alias, ACHIEVEMENT_RELEASE);
    }

    private AchievementRelease(Name alias, Table<AchievementReleaseRecord> aliased) {
        this(alias, aliased, null);
    }

    private AchievementRelease(Name alias, Table<AchievementReleaseRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> AchievementRelease(Table<O> child, ForeignKey<O, AchievementReleaseRecord> key) {
        super(child, key, ACHIEVEMENT_RELEASE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Zhe.ZHE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ACHIEVEMENT_RELEASE_DEPARTMENT_ID, Indexes.ACHIEVEMENT_RELEASE_PRIMARY, Indexes.ACHIEVEMENT_RELEASE_RELEASE_USERNAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AchievementReleaseRecord> getPrimaryKey() {
        return Keys.KEY_ACHIEVEMENT_RELEASE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AchievementReleaseRecord>> getKeys() {
        return Arrays.<UniqueKey<AchievementReleaseRecord>>asList(Keys.KEY_ACHIEVEMENT_RELEASE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AchievementReleaseRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AchievementReleaseRecord, ?>>asList(Keys.ACHIEVEMENT_RELEASE_IBFK_1, Keys.ACHIEVEMENT_RELEASE_IBFK_2);
    }

    public Department department() {
        return new Department(this, Keys.ACHIEVEMENT_RELEASE_IBFK_1);
    }

    public Users users() {
        return new Users(this, Keys.ACHIEVEMENT_RELEASE_IBFK_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AchievementRelease as(String alias) {
        return new AchievementRelease(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AchievementRelease as(Name alias) {
        return new AchievementRelease(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AchievementRelease rename(String name) {
        return new AchievementRelease(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AchievementRelease rename(Name name) {
        return new AchievementRelease(name, null);
    }
}
